{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SynBio Project Tutorials","text":"<p>This site is a structured, modular guide for learning to design, execute, and manage synthetic biology experiments. It emphasizes practical skills, design from first principles, and a deep understanding of the molecular biology and chemistry behind each step.</p> <p>The tutorials are organized into three parts:</p> <ul> <li>Part A: Wetlab \u2014 Step-by-step execution of a cloning experiment, including molecular biology concepts, lab protocols, documentation, and data interpretation.</li> <li>Part B: Construction \u2014 How to design cloning workflows, simulate outcomes, and represent cloning plans using standardized formats.</li> <li>Part C: Project Planning \u2014 Strategies for organizing experiments, selecting parts with informatics tools, and managing experimental workflows.</li> </ul> <p>Each tutorial includes embedded quizzes, videos, and progress tracking. This platform supports students, researchers, and anyone seeking a rigorous, hands-on introduction to synthetic biology.</p>"},{"location":"#part-a-wetlab","title":"Part A: Wetlab","text":"<ol> <li> <p>pP6 Experiment Introduction    Learn the goal of the pP6 library experiment, the concept of consensus promoters, and why randomized promoter libraries are used.</p> </li> <li> <p>Pipetting    Learn how to use a pipette properly, interpret volume markings, and avoid common errors.</p> </li> <li> <p>Polymerase Chain Reaction    Instructions for setting up the PCR using degenerate oligos to amplify the pP6 library.</p> </li> <li> <p>Gel Electrophoresis    Run a gel to verify the PCR product, and interpret results.</p> </li> <li> <p>Zymo Cleanup    Purify the PCR product to prepare it for assembly.</p> </li> <li> <p>Assembly    Rejoin ends of the linear DNA to regenerate the plasmid using Golden Gate assembly.</p> </li> <li> <p>Transformation    Transform E. coli with your assembled DNA and plate colonies.</p> </li> <li> <p>Colony Picking    Pick colonies and grow liquid cultures from selected transformants.</p> </li> <li> <p>Miniprep    Purify plasmid DNA from the cultures using a miniprep protocol.</p> </li> <li> <p>Cycle Sequencing    Submit DNA for sequencing and interpret results to identify strong promoter variants.</p> </li> <li> <p>Measuring Fluorescence    Quantify promoter activity by measuring amilGFP fluorescence and OD, and calculate Relative Promoter Units (RPUs).</p> </li> </ol>"},{"location":"#part-b-construction","title":"Part B: Construction","text":"<ol> <li> <p>DNA Basics    Learn about DNA structure, reverse complement operations, strandedness, plasmids, and genomes.</p> </li> <li> <p>Sequence Editing Tools    Learn to use a sequence editor (ApE, Benchling, or other tools) for finding subsequences, reverse complementing, and translating DNA.</p> </li> <li> <p>Manual Product Prediction    Manually predict PCR products using a sequence editor and understand the concept of annealing regions.</p> </li> <li> <p>Simulation Tools    Use simulation tools to test cloning steps written in Construction File shorthand.</p> </li> <li> <p>Basic Cloning    Walk through traditional cloning steps.</p> </li> <li> <p>Gibson Assembly    Introduction to Gibson Assembly for seamless cloning.</p> </li> <li> <p>Golden Gate Assembly    Learn Golden Gate cloning methods.</p> </li> <li> <p>Site-Directed Mutagenesis    Constructing and designing short parts and mutagenesis.  </p> </li> <li> <p>Sequencing Confirmation    Learn to analyze sequencing results.</p> </li> </ol>"},{"location":"#part-c-project-planning","title":"Part C: Project Planning","text":"<ol> <li> <p>Project Setup and Nomenclature    Learn how to structure a project, name experiments, and organize your working directory.</p> </li> <li> <p>Experimental Design Principles    Understand how to think about synthetic biology experiments from the ground up.</p> </li> <li> <p>Sequence Retrieval and Analysis    Use BLAST and other tools to find, analyze, and align DNA sequences for cloning.</p> </li> <li> <p>Choosing a Fabrication Strategy    Design primers and synthetic fragments for amplification and cloning.</p> </li> <li> <p>Simulation Tools    Simulate your cloning designs using the Java-based CFS tool and the web-based C6 Tools platform.</p> </li> <li> <p>Inventory and Labsheets    Organize your physical inventory and use labsheets to plan and document your experiments.</p> </li> <li> <p>Ortholog Scan  Project    Design an ortholog scan for the complex gene ispA as a capstone project, integrating bioinformatics, cloning strategy, and documentation.</p> </li> </ol> <p>Each tutorial includes step-by-step instructions, videos, and interactive examples.</p>"},{"location":"about/","title":"About the SynBio Project Tutorials","text":"<p>This site is a modular training platform for synthetic biology, covering wetlab techniques, design strategies, and project management workflows. It includes a growing suite of tools that run entirely in your browser. These tools work offline and keep all data local, supporting sequence analysis, cloning design, and experimental planning. The tutorials replace and extend earlier material hosted at OpenWetWare, which remains available for reference.</p> <p>These tutorials teach the practical and conceptual foundations of synthetic biology, with a focus on modular DNA assembly and project-based learning. The material is modular but intended to be followed sequentially.</p>"},{"location":"about/#who-this-is-for","title":"Who This Is For","text":"<p>This tutorial is for anyone who wants to learn how to design and carry out recombinant DNA experiments \u2014 the technical core of synthetic biology. It focuses on foundational concepts and practical skills for in vitro DNA cloning workflows. Genome editing methods like CRISPR are not covered (currently).</p> <p>The content is:</p> <ul> <li>Aimed at students, including those in BioE 140L at UC Berkeley and participants in iGEM@Berkeley and DeCal programs  </li> <li>Helpful for post-baccalaureate researchers, educators, and independent learners looking for a practical, modular guide  </li> <li>Designed for those with prior coursework in organic chemistry and biochemistry, but no hands-on cloning experience</li> </ul> <p>The site is freely accessible, fully open-source, and suitable for both classroom use and self-paced learning.</p>"},{"location":"about/#structure-and-use","title":"Structure and Use","text":"<p>The content is organized into three parts:</p> <ul> <li>Part A: Wetlab \u2014 hands-on PCR, gels, cleanup, assembly, and transformation using the pP6 promoter library</li> <li>Part B: Cloning Techniques \u2014 design and simulation of primers and cloning strategies using tools like Benchling and ApE</li> <li>Part C: Planning \u2014 project-level strategies including combinatorial design, pathway engineering, and illustrative examples of biosynthetic applications.</li> </ul> <p>Tutorials combine written guides, video walkthroughs, and interactive tools. They are intended to be executed in real labs, with troubleshooting and iteration encouraged.</p>"},{"location":"about/#project-background","title":"Project Background","text":"<p>This resource was created by  </p> <p>Prof. J. Christopher Anderson Department of Bioengineering, UC Berkeley Email: jcanderson@berkeley.edu</p> <p>It builds on over 15 years of training experience in synthetic biology. ChatGPT was used in planning, drafting, coding, and refining the material through extensive discussion.</p>"},{"location":"about/#technical-info","title":"Technical Info","text":"<ul> <li>Hosted as a public repo using GitHub Pages with MKDocs at https://github.com/UCB-BioE-Anderson-Lab/cloning-tutorials</li> <li>Licensed under the Apache License 2.0</li> <li>Bug reports are welcome via GitHub</li> </ul>"},{"location":"construction/134/","title":"Biodesign Automation","text":""},{"location":"construction/134/#conceptual-abstractions-and-their-role-in-the-course","title":"Conceptual Abstractions and Their Role in the Course","text":"<ol> <li> <p>DNA String: A raw nucleotide sequence (<code>[ATCG]+</code>). Project 1: Designing guide RNAs directly from raw sequence.</p> </li> <li> <p>Part: A reusable functional sequence unit (e.g., RBS, CDS), modeled as a wrapped object. Project 2: Designing or selecting RBS parts with specified properties.</p> </li> <li> <p>Composition: A high-level specification of intent\u2014typically, a list of proteins to be expressed. Input to Project 3: This defines what outputs the system should produce (e.g., a list of CDSs), without specifying how.</p> </li> <li> <p>Construct: A concretized, testable design\u2014a structured operon made of RBS/CDS parts that can be compiled to DNA. Output of Project 3: Encoded as a list of objects that retain enough structure to support inference (e.g., \u201cdoes each CDS have a promoter?\u201d).</p> </li> <li> <p>Construction File: Each construct becomes a named entity pointing to a DNA object, a <code>Polynucleotide</code>, which includes physical properties (e.g., sticky ends, linearity).</p> </li> <li> <p>Sample: A physical tube containing a DNA construct.</p> </li> <li> <p>Box: A physical or logical container holding one or more samples.</p> </li> <li> <p>Inventory: A collection of boxes, often mapped to freezer locations.</p> </li> <li> <p>LabPackage: A specification for how to generate, transform, or use DNA samples\u2014includes protocol files and descriptions of inventory changes.</p> </li> <li> <p>Chemical Representation: DNA as a molecule\u2014chemoinformatics tools (e.g., RDKit) can be used to analyze its atomic structure and enzymatic reactivity, bridging to chemical function and biological behavior.</p> </li> </ol> <p>This progression provides a full-stack view of DNA: from abstract sequence to physical inventory, and finally to chemical identity and function. It enables students to understand not only how to write code that manipulates sequences, but how that code connects to real-world lab work and biological insight.</p>"},{"location":"construction/basic_cloning/","title":"5. Basic Cloning","text":""},{"location":"construction/basic_cloning/#basic-cloning-overexpression-of-human-insulin","title":"Basic Cloning: Overexpression of Human Insulin","text":""},{"location":"construction/basic_cloning/#overview","title":"Overview","text":"<p>In this tutorial, you'll learn to design oligonucleotides and plan a traditional restriction/ligation cloning experiment. We'll walk through cloning the human insulin cDNA into a pET expression vector for high-level expression in E. coli. This process mimics a landmark achievement in biotechnology: the recombinant production of human insulin, which today powers a multi-billion-dollar global industry.</p> <p>Insulin was the first therapeutic protein produced using recombinant DNA technology, replacing animal-derived sources and transforming diabetes care. In this example, you\u2019ll see how tools like PCR, restriction enzymes, and plasmid vectors can be used to enable scalable, microbial production of life-saving medicines.</p>"},{"location":"construction/basic_cloning/#context-recombinant-insulin-production","title":"Context: Recombinant Insulin Production","text":"<p> Figure: Before 1982, insulin was extracted from thousands of pig or cow pancreases, yielding limited supply and often triggering immune reactions. Recombinant DNA technology enabled the production of human insulin in E. coli, launching a biotechnology revolution. Today, recombinant insulin is a multi-billion-dollar industry and one of the earliest and most successful applications of genetic engineering.</p> <p>In this exercise, we\u2019ll simulate how to clone the human insulin CDS from cDNA, which is DNA that has been synthesized in vitro by reacting mRNA (purified from human cells) with reverse transcriptase. We'll insert it into a pET expression plasmid to produce insulin recombinantly.</p>"},{"location":"construction/basic_cloning/#the-t7-system","title":"The T7 System","text":"<p> Figure: T7 system architecture in BL21(\u03bbDE3). IPTG induction lifts LacI repression, allowing expression of both T7 RNA Polymerase (genomically encoded) and the insulin (INS) gene on a pET plasmid under the control of the T7 promoter.</p> <p>The T7 expression system is a two-level inducible design used for powerful, tightly regulated expression of recombinant proteins in E. coli BL21(\u03bbDE3).</p> <p>Here's how it works:</p> <ul> <li>The BL21(\u03bbDE3) genome contains a copy of the T7 RNA polymerase (T7 RNAP) gene under control of the lac promoter (Plac).</li> <li>The pET expression plasmid carries your gene of interest (e.g., INS) downstream of a T7 promoter (PT7), as well as a lacI gene that represses both promoters via LacO operator sites.</li> </ul>"},{"location":"construction/basic_cloning/#role-of-iptg","title":"Role of IPTG:","text":"<p>In the absence of IPTG: - The LacI repressor binds to LacO sites, preventing transcription from both Plac and PT7. - This keeps both T7 RNAP and the target gene (INS) silent.</p> <p>Upon IPTG addition: - IPTG binds to LacI, causing it to dissociate from the DNA. - T7 RNAP is transcribed and translated. - T7 RNAP then binds to PT7 on the plasmid and drives high-level expression of the insulin gene.</p> <p>This modular setup ensures tight control (low background, high on-demand expression), which is ideal for producing proteins that may be toxic or burden the host.</p>"},{"location":"construction/basic_cloning/#step-1-choose-a-template","title":"Step 1: Choose a Template","text":"<p>We'll use a GenBank record for human insulin cDNA:</p> <ul> <li>\ud83d\udcc4 Insulin cDNA: Download GenBank </li> <li>\ud83d\udd17 NCBI: BC005255.1</li> </ul>"},{"location":"construction/basic_cloning/#step-2-choose-a-vector","title":"Step 2: Choose a Vector","text":"<p>We'll use a pET vector with:</p> <ul> <li>T7 promoter  </li> <li>LacI repression system  </li> <li> <p>Multiple cloning site (MCS)</p> </li> <li> <p>\ud83d\udcc4 Starter pET plasmid: Download GenBank</p> </li> </ul> <p> Figure: pET-28a(+) vector map showing the T7 promoter and the multiple cloning site (MCS). In this tutorial, we\u2019ll insert the insulin CDS between the NcoI and XhoI restriction sites for expression under the T7 promoter. Image adapted from GenScript.</p>"},{"location":"construction/basic_cloning/#step-3-design-pcr-primers","title":"Step 3: Design PCR Primers","text":""},{"location":"construction/basic_cloning/#what-is-an-annealing-region","title":"\ud83d\udd2c What is an Annealing Region?","text":"<p>In cloning, we use the term annealing region to describe the stretch of DNA where a single-stranded oligo or DNA fragment will base-pair with a complementary strand. This occurs in PCR (primers annealing to a template), in Gibson Assembly (fragment overlaps annealing), or in SOEing (stitching adjacent fragments). It\u2019s where the DNA goes from single- to double-stranded as part of the molecular mechanism.</p>"},{"location":"construction/basic_cloning/#design-guidelines","title":"Design Guidelines:","text":"<ul> <li>Length: 18\u201325 bp is typical.</li> <li>GC content: Aim for 40\u201360% GC.</li> <li>3\u2032 end (for PCR): Preferably ends in G or C to improve binding and extension.</li> <li>Avoid: Strong secondary structure, long runs of a single base, or repeats.</li> <li>Tm: Ideally between 55\u201365\u00b0C and matched between primer pairs.</li> </ul> <p>PCR is generally forgiving, especially for standard cloning. You usually don\u2019t have to optimize extensively. Most often, the start or end of your primer is anchored to a specific feature (e.g. the start codon), leaving just one floating end to select an 18\u201325 bp window.</p> <p>This means you may only have a handful of valid choices\u2014just pick 20 bp and move on. It\u2019s usually enough.</p> <p>You'll see this concept\u2014annealing regions\u2014appear throughout the tutorial series. These basic rules apply regardless of the cloning method.</p>"},{"location":"construction/basic_cloning/#visualizing-the-cloning-workflow","title":"Visualizing the Cloning Workflow","text":"<p>Before we look at the construction file, let's walk through what's actually happening in this cloning strategy.</p> <p>The diagram below illustrates how we use PCR, restriction digestion, and ligation to move the insulin coding sequence (INS) into the pET-28a(+) expression plasmid.</p> <p> Figure: Cartoon schematic of the pET-INS construction. Each component in the image matches a step in the construction file you'll write next: PCR of the insulin gene, digestion with NcoI/XhoI, and ligation into the pET-28a(+) vector.</p> <p>Design primers with:</p> <ul> <li>A short 5\u2032 tail (5 random bases)  </li> <li>A restriction site (NcoI at start, XhoI at end)  </li> <li>18\u201322 bp annealing region from insulin cDNA</li> </ul> <p>Primer Structure Example: <pre><code>Forward primer (ins-F):\n\n  [5' tail] - CCATGG - [18\u201322 nt from start of insulin ORF]\n\nReverse primer (ins-R):\n\n  [5' tail] - CTCGAG - [reverse complement of final 18\u201322 nt of insulin ORF]\n</code></pre></p> <ul> <li>CCATGG = NcoI site (includes ATG start codon)</li> <li>CTCGAG = XhoI site (downstream of stop codon)</li> </ul>"},{"location":"construction/basic_cloning/#step-4-construction-file","title":"Step 4: Construction File","text":"<p>Here's a complete construction file representing this cloning plan:</p> <pre><code>PCR     ins-F       ins-R       insulin_cDNA     pcr_ins\nDigest  pcr_ins     NcoI,XhoI   1                pcr_dig\nDigest  pET28a      NcoI,XhoI   1                vec_dig\nLigate  pcr_dig     vec_dig                      pET-INS\n\noligo   ins-F       ccataCCATGGccctgtggatgcgcctcctg\noligo   ins-R       cagatCTCGAGctagttgcagtagttctccag\n</code></pre>"},{"location":"construction/basic_cloning/#step-5-simulate-the-product","title":"Step 5: Simulate the Product","text":"<p>Use your sequence editor or simulation tools (as demonstrated in the earlier video) to predict the outcome of each step in your construction file. For each stage\u2014PCR, digestion, and ligation\u2014verify the resulting sequence.</p> <p>Pay special attention to the final ligated product: - Confirm the insert is placed between the NcoI and XhoI sites. - Ensure the reading frame is preserved. - Check that the final sequence starts with ATG and ends appropriately.</p> <p>Once verified, save the final predicted sequence for downstream use or visualization.</p>"},{"location":"construction/basic_cloning/#step-6-visualize-the-final-product","title":"Step 6: Visualize the Final Product","text":"<ul> <li>\ud83d\udcc4 Final pET-insulin plasmid: Download GenBank</li> </ul> <p>Product Visualization:</p>"},{"location":"construction/basic_cloning/#step-7-validate","title":"Step 7: Validate","text":"<ul> <li>ORF is left-to-right and starts with ATG  </li> <li>ORF is in-frame with tags (if any)  </li> <li>No internal NdeI or XhoI sites in insert  </li> <li>Final construct includes all expected features</li> </ul>"},{"location":"construction/basic_cloning/#try-it-yourself","title":"\ud83c\udfaf Try it yourself","text":"<p>In your quiz, you'll clone a randomly selected gene from the genome of Bacillus atrophaeus UCMB-5137.</p> <p>This gene is a coding DNA sequence (CDS), which means it directly encodes a protein. It's an open reading frame (ORF): a continuous stretch of codons that starts with a start codon (like <code>ATG</code>) and ends with a stop codon (<code>TAA</code>, <code>TAG</code>, or <code>TGA</code>). </p> <p>We're giving you only the CDS \u2014 not the full gene. That means no promoter, no ribosome binding site (RBS), no terminator, and no replication origin \u2014 just the exact stretch of DNA used to encode the protein.  You need to include this entire sequence in your designs.</p> Cloning Quiz <p>Design primers to amplify the selected gene and clone it into pET-28a using NcoI and XhoI.</p> Forward Primer:   Name:    Sequence:  Reverse Primer:   Name:    Sequence:  PCR Product Name: Construction File: <p> Copy to Clipboard</p> <p>Once you\u2019ve successfully completed the quiz, take a moment to experiment. It won't affect the assignment score. Try removing a 5\u2032 tail, changing an oligo name, or deleting a restriction site. Note what changes break things, and how your changes modify the construction file.</p>"},{"location":"construction/biobricks/","title":"BioBricks and Standardized Assembly","text":""},{"location":"construction/biobricks/#overview","title":"Overview","text":"<p>This tutorial introduces the concept of standardized cloning strategies using BioBricks. You'll learn how defined formats enable automated design and predictable assembly of genetic parts such as promoters, RBSs, CDSs, and terminators.</p>"},{"location":"construction/biobricks/#standardized-cloning","title":"Standardized Cloning","text":"<p>In earlier tutorials, you cloned lacZ into a pET vector using: - Restriction enzyme cloning - Gibson Assembly - Golden Gate Assembly</p> <p>Each had its own oligo design and simulation strategy. But what if you could design a single strategy to work across all your ORFs?</p>"},{"location":"construction/biobricks/#ndeixhoi-standard-a-template-for-expression","title":"NdeI/XhoI Standard: A Template for Expression","text":"<p>Here's the pET construction file format:</p> <pre><code>PCR     oligoF     oligoR     orf_template     pcr_pdt\nDigest  pcr_pdt    NdeI,XhoI  1                pcr_dig\nDigest  pet28a     NdeI,XhoI  1                vec_dig\nLigate  pcr_dig    vec_dig                      pet_orf\n</code></pre> <p>Design rule: ORF must begin with ATG inside an NdeI site and end before a XhoI site. No internal NdeI/XhoI allowed.</p>"},{"location":"construction/biobricks/#abstraction-via-algorithm","title":"Abstraction via Algorithm","text":"<p>This allows cloning to be automated:</p> <pre><code>def design_oligos(orf):\n    for_anneal = findbestanneal(orf, fiveprime=True)\n    rev_anneal = findbestanneal(orf, threeprime=True)\n    rev_anneal_rc = revcomp(rev_anneal)\n    oligoF = \"ccataCATATG\" + for_anneal\n    oligoR = \"cagatCTCGAG\" + rev_anneal_rc\n    return construction_file(oligoF, oligoR)\n</code></pre> <p>This kind of deterministic function lets you abstract fabrication and create repeatable procedures for generating expression plasmids.</p> <p>We can now refer to a \"pET_vector expression of lacZ\" and it implies specific oligos and a cloning plan without spelling them out.</p>"},{"location":"construction/biobricks/#standardized-assembly","title":"Standardized Assembly","text":"<p>BioBricks take this idea further by allowing modular part-level assembly\u2014promoter + RBS + CDS + terminator\u2014in a repeatable and composable way.</p>"},{"location":"construction/biobricks/#introduction-to-biobricks","title":"Introduction to BioBricks","text":""},{"location":"construction/biobricks/#what-is-biobricks","title":"What is BioBricks?","text":"<p>BioBricks is a programming language for Synthetic Biology. In this context, we're working with model organisms like E. coli or yeast and modifying them by adding well-defined DNA sequences.</p> <p>BioBricks defines basic parts (promoters, RBSs, CDSs, terminators) flanked by restriction sites in a standard format. These are composable, like words in a language.</p> <p>Basic parts \u2192 Composite parts \u2192 Systems \u2192 Ecosystems.</p> <p>Learn more at the Registry</p>"},{"location":"construction/biobricks/#why-use-biobricks","title":"Why Use BioBricks?","text":"<ol> <li>Standardized Assembly: Methods can be automated and made robust.</li> <li>Shared Resource: Parts are defined rigorously and reused.</li> <li>Quantitative Design: Enables standardized testing and documentation.</li> </ol> <p>Compare this:</p> <p></p> <p>vs.</p> <p>Using BioBrick IDs like <code>J23997</code> gives a specific, defined sequence and design.</p>"},{"location":"construction/biobricks/#standard-assembly-format","title":"Standard Assembly Format","text":"<p>Original format: <pre><code>EcoRI - XbaI - [Part] - SpeI - PstI\n</code></pre></p> <p>XbaI and SpeI make compatible sticky ends. Their ligation destroys both sites, creating an ACTAGA scar.</p> <p></p>"},{"location":"construction/biobricks/#bglbricks-another-standard","title":"BglBricks: Another Standard","text":"<pre><code>EcoRI - BglII - [Part] - BamHI - XhoI\n</code></pre> <ul> <li>Scar: GGATCT \u2192 Gly-Ser linker (translational fusions)</li> <li>Efficient enzymes</li> <li>No methylation interference</li> </ul> <p>Visual: <pre><code>GAATTCatgAGATCT-part-GGATCCtaaCTCGAG\n</code></pre></p> <p>To clone a part into EcoRI/BamHI sites, add BglII (AGATCT) and ATG spacer to your oligos.</p>"},{"location":"construction/biobricks/#general-workflow","title":"General Workflow","text":"<ol> <li>Clone individual basic parts into plasmids.</li> <li>Use standard assembly (restriction/ligation or Golden Gate) to join them into composite parts.</li> </ol>"},{"location":"construction/biobricks/#modern-alternatives-moclo","title":"Modern Alternatives: MoClo","text":"<p>Pairwise assembly (like BioBricks) is slow in practice. MoClo uses:</p> <ul> <li>BsaI instead of SpeI/XbaI</li> <li>Standard 4 bp overhangs (grammar)</li> <li>High-throughput assembly of many parts</li> </ul> <p>MoClo preserves BioBrick ideas of abstraction while supporting efficient one-pot cloning.</p> <p>This tutorial emphasizes the importance of using standards in molecular cloning for automation, predictability, and shareability.</p>"},{"location":"construction/dna_basics/","title":"DNA Basics and Molecular Biology Refresher","text":""},{"location":"construction/dna_basics/#dna-structure-and-the-reverse-complement-function","title":"DNA Structure and the Reverse Complement Function","text":"<p>DNA is a double-stranded molecule arranged in an antiparallel fashion, meaning one strand runs in the 5' to 3' direction while its complementary strand runs in the 3' to 5' direction. The two strands are held together by base pairing: Adenine (A) pairs with Thymine (T), and Cytosine (C) pairs with Guanine (G). These fundamental properties allow for key sequence operations like reversing and complementing strands. To understand this structure visually, watch the video below:</p>"},{"location":"construction/dna_basics/#reverse","title":"Reverse","text":"<p>To reverse a DNA sequence, simply write it backward. For example:</p> <ul> <li>Original: <code>5'- ATGCAG -3'</code></li> <li>Reversed: <code>5'- GACGTA -3'</code></li> </ul>"},{"location":"construction/dna_basics/#complement","title":"Complement","text":"<p>To complement a DNA sequence, replace each base with its pairing base:</p> <ul> <li>A (Adenine) \u2194 T (Thymine)</li> <li>C (Cytosine) \u2194 G (Guanine)</li> </ul> <p>Example:</p> <ul> <li>Original: <code>5'- ATGCAG -3'</code></li> <li>Complement: <code>5'- TACGTC -3'</code></li> </ul>"},{"location":"construction/dna_basics/#reverse-complement","title":"Reverse Complement","text":"<p>The reverse complement is simply applying the complement rule after reversing the sequence:</p> <ol> <li>Reverse the sequence.</li> <li>Replace each base with its complementary base.</li> </ol> <p>Example:</p> <ul> <li>Original: <code>5'- ATGCAG -3'</code></li> <li>Step 1 (Reverse): <code>5'- GACGTA -3'</code></li> <li>Step 2 (Complement): <code>5'- CTGCAT -3'</code></li> </ul> <p>Since DNA is double-stranded, the reverse complement operation essentially determines what the partner strand would look like. When we take the reverse complement of a sequence, we are simulating the process of reading the opposite strand in the correct 5' to 3' direction, just as it would naturally exist in a DNA molecule. Calculating the reverse complement is a very common operation when working with DNA sequence.  However, reverse and complement, individually, are only used in specialized scenarios.  It is important you understand what these operations are, but it is mainly so you understand the composite of the two.  For the purposes of this tutorial, you will never use individual reverse or complement operations again.</p>"},{"location":"construction/dna_basics/#try-it-yourself","title":"Try it Yourself","text":"<p>Try calculating the Reverse, Complement, and Reverse Complement of these sequences:</p> <p>1\ufe0f\u20e3 Reverse</p> <p>What is the reverse of <code>5'- AGCTTG -3'</code>?</p> Check Answer <p></p> <p>2\ufe0f\u20e3 Complement</p> <p>What is the complement of <code>5'- AGCTTG -3'</code>?</p> Check Answer <p></p> <p>3\ufe0f\u20e3 Reverse Complement</p> <p>What is the reverse complement of <code>5'- CAGGTAG -3'</code>?</p> Check Answer <p></p>"},{"location":"construction/dna_basics/#the-central-dogma","title":"The Central Dogma","text":"<p>The Central Dogma of molecular biology describes 3 biochemical processes happening to biomolecules in most cells. During Replication, an exact copy of DNA is produced. During Transcription, a region of DNA is read into RNA. During Translation, a region of RNA (an mRNA or messenger RNA) is read into protein. Though these processes are very complex and involve numerous biomolecules, the sequences of RNA and protein are readily predictable from the DNA sequence.</p>"},{"location":"construction/dna_basics/#transcription","title":"Transcription","text":"<p>A gene refers to a region of DNA that encodes a protein. You can think of it like a song on a vinyl record\u2014there is a physical region to the gene, with clear starts and ends. A gene can be on either strand of DNA, but it is always flanked by a promoter and a terminator sequence. The promoter determines which strand will be the \"coding strand,\" as the RNA polymerase binds to the promoter and proceeds until it reaches the terminator. </p> <p>During transcription, an RNA molecule is created that is identical to the coding strand but with Uracil (U) replacing Thymine (T).</p> <p>Example:</p> <ul> <li>DNA Coding Strand: <code>5'- ATGCAGTAC -3'</code></li> <li>RNA Transcript: <code>5'- AUGCAGUAC -3'</code></li> </ul>"},{"location":"construction/dna_basics/#quiz-predict-the-rna-sequence","title":"Quiz: Predict the RNA Sequence","text":"<p>What is the RNA sequence transcribed from this DNA coding strand?  </p> <p>5'- TCTGACTA -3'</p> Check Answer <p></p>"},{"location":"construction/dna_basics/#translation","title":"Translation","text":"<p>An mRNA transcript consists of a 5' UTR (Untranslated Region) followed by the CDS (Coding DNA Sequence). The CDS is an ORF (Open Reading Frame), meaning a sequence that, when read in groups of three bases (codons), begins with a start codon (ATG, GTG, or TTG) and ends with a stop codon (TAA, TAG, TGA).</p> <p>The ribosome recognizes the Shine-Dalgarno sequence and the start codon, then reads the RNA three bases at a time, translating each codon into an amino acid based on the genetic code.</p>"},{"location":"construction/dna_basics/#example-how-to-translate-dna-using-the-genetic-code","title":"Example: How to Translate DNA Using the Genetic Code","text":"<p>To translate a DNA sequence into a protein sequence, follow these steps:</p> <ol> <li>Start at the start codon (usually ATG).</li> <li>Divide the DNA sequence into codons (groups of three bases).</li> <li>Look up each codon in the Genetic Code Table to find the corresponding amino acid.</li> <li>Add the amino acid's single-letter code to the growing protein sequence.</li> <li>Stop when you reach a stop codon (TAA, TAG, or TGA). You can mark this with <code>*</code> or simply end the sequence.</li> </ol> <p>Example:</p> <p>DNA Sequence: <code>5'- ATG GCT TTT GAA TGA -3'</code></p> <ul> <li>Codon 1: ATG \u2192 M (Methionine, start)</li> <li>Codon 2: GCT \u2192 A (Alanine)</li> <li>Codon 3: TTT \u2192 F (Phenylalanine)</li> <li>Codon 4: GAA \u2192 E (Glutamic acid)</li> <li>Codon 5: TGA \u2192 * (Stop)</li> </ul> <p>Protein Sequence: <code>MAFE*</code></p> <p>In practice, biologists usually write this as <code>MAFE</code>, ending the sequence at the stop codon instead of including the <code>*</code>.</p>"},{"location":"construction/dna_basics/#genetic-code-table","title":"Genetic Code Table","text":"<p>Note: While translation occurs from an RNA sequence, for convenience, we often refer to codons in their DNA format. Codons are three-letter sequences that specify amino acids during protein synthesis. Each codon in DNA corresponds to an RNA codon by replacing Thymine (T) with Uracil (U).</p> Codon Single Letter Full Name Codon Single Letter Full Name TTT F Phe TTC F Phe TTA L Leu TTG L Leu TCT S Ser TCC S Ser TCA S Ser TCG S Ser TAT Y Tyr TAC Y Tyr TAA stop Ter TAG stop Ter TGT C Cys TGC C Cys TGA stop Ter TGG W Trp CTT L Leu CTC L Leu CTA L Leu CTG L Leu CCT P Pro CCC P Pro CCA P Pro CCG P Pro CAT H His CAC H His CAA Q Gln CAG Q Gln CGT R Arg CGC R Arg CGA R Arg CGG R Arg ATT I Ile ATC I Ile ATA I Ile ATG M Met ACT T Thr ACC T Thr ACA T Thr ACG T Thr AAT N Asn AAC N Asn AAA K Lys AAG K Lys AGT S Ser AGC S Ser AGA R Arg AGG R Arg GTT V Val GTC V Val GTA V Val GTG V Val GCT A Ala GCC A Ala GCA A Ala GCG A Ala GAT D Asp GAC D Asp GAA E Glu GAG E Glu GGT G Gly GGC G Gly GGA G Gly GGG G Gly"},{"location":"construction/dna_basics/#quiz-translate-the-dna-sequence","title":"Quiz: Translate the DNA Sequence","text":"<p>What amino acid sequence is encoded by the following coding DNA sequence? 5'- ATG CAG GTA GAA TAA -3'</p> Check Answer <p></p>"},{"location":"construction/dna_basics/#summary-of-terms","title":"Summary of Terms","text":""},{"location":"construction/dna_basics/#fundamental-dna-concepts","title":"Fundamental DNA Concepts","text":"<ul> <li>DNA (Deoxyribonucleic Acid): A double-stranded molecule that stores genetic information in all living organisms.</li> <li>Base Pairing: The specific hydrogen bonding between Adenine (A) &amp; Thymine (T) and Cytosine (C) &amp; Guanine (G) in DNA.</li> <li>Antiparallel: The orientation of DNA strands where one runs 5' to 3' and the complementary strand runs 3' to 5'.</li> </ul>"},{"location":"construction/dna_basics/#transcription-rna-concepts","title":"Transcription &amp; RNA Concepts","text":"<ul> <li>RNA (Ribonucleic Acid): A single-stranded nucleic acid transcribed from DNA, involved in protein synthesis.</li> <li>Transcription: The process where RNA polymerase synthesizes RNA from a DNA template.</li> <li>RNA Polymerase: The enzyme that transcribes DNA into RNA.</li> <li>mRNA (Messenger RNA): The RNA transcript that carries genetic information from DNA to ribosomes.</li> <li>5' UTR (Untranslated Region): The non-coding region at the start of an mRNA that regulates translation.</li> <li>3' UTR (Untranslated Region): The non-coding region at the end of an mRNA that influences stability and translation efficiency.</li> <li>Promoter: A DNA sequence where RNA polymerase binds to start transcription.</li> <li>Terminator: A DNA sequence signaling the end of transcription.</li> </ul>"},{"location":"construction/dna_basics/#translation-protein-synthesis","title":"Translation &amp; Protein Synthesis","text":"<ul> <li>Translation: The process where ribosomes synthesize proteins by reading mRNA codons.</li> <li>Ribosome: The molecular machine that assembles proteins by reading mRNA codons.</li> <li>tRNA (Transfer RNA): An RNA molecule that brings amino acids to the ribosome during translation.</li> <li>Codon: A three-nucleotide sequence in DNA or RNA that specifies an amino acid or stop signal.</li> <li>Anticodon: A complementary three-base sequence on tRNA that pairs with an mRNA codon.</li> <li>Start Codon: The first codon in an mRNA sequence that signals the beginning of translation (ATG coding for Methionine).</li> <li>Stop Codon: A codon (TAA, TAG, TGA) that signals the termination of translation.</li> </ul>"},{"location":"construction/dna_basics/#gene-structure-regulation","title":"Gene Structure &amp; Regulation","text":"<ul> <li>Gene: A specific region of DNA that encodes a functional product, usually a protein.</li> <li>CDS (Coding DNA Sequence): The protein-coding portion of a gene within an mRNA.</li> <li>Open Reading Frame (ORF): A sequence of codons beginning with a start codon and ending with a stop codon.</li> <li>Ribosome Binding Site (RBS): A region on mRNA where the ribosome binds to initiate translation. In prokaryotes, this includes the Shine-Dalgarno sequence, while in eukaryotes, it is often the Kozak sequence.</li> <li>Shine-Dalgarno Sequence (SD): A ribosomal binding site in bacterial mRNA, located upstream of the start codon, which aligns the ribosome for efficient translation initiation.</li> <li>Kozak Sequence: A sequence surrounding the start codon in eukaryotic mRNA that enhances ribosome recognition and translation efficiency.</li> </ul>"},{"location":"construction/gibson/","title":"6. Gibson Assembly","text":""},{"location":"construction/gibson/#gibson-assembly","title":"Gibson Assembly","text":""},{"location":"construction/gibson/#why-gibson-assembly","title":"Why Gibson Assembly?","text":"<p>In the previous tutorial, you used restriction enzymes to insert the INS gene into a pET vector. This is a reliable method, but it has a key limitation: it depends on restriction sites being in the right places.</p> <p>In synthetic biology, you often need to assemble multiple parts with precise control over sequence. This is where Gibson Assembly shines. It allows you to join DNA fragments without restriction sites\u2014using only sequence overlaps.</p>"},{"location":"construction/gibson/#how-gibson-assembly-works","title":"\ud83d\udd2c How Gibson Assembly Works","text":"<p> Figure: Gibson Assembly joins DNA fragments with overlapping ends in a seamless, scarless way. An exonuclease chews back 5\u2032 ends, exposing complementary overhangs. These anneal, and a polymerase fills in gaps. A ligase seals the nicks, yielding a continuous double-stranded product. \ud83d\udcf7 Diagram credit: SnapGene Gibson Guide</p> <p>The enzyme mix includes three key components:</p> <ol> <li>5\u2032 Exonuclease: Creates single-stranded 3\u2032 overhangs by chewing back the 5\u2032 ends.</li> <li>DNA Polymerase: Fills in gaps after annealing.</li> <li>DNA Ligase: Seals the nicks to produce a covalently closed DNA strand.</li> </ol> <p>This method is scarless, seamless, and does not rely on restriction sites.</p>"},{"location":"construction/gibson/#overview-of-this-tutorial","title":"Overview of This Tutorial","text":"<p>In this exercise, you'll recreate the pET-INS plasmid\u2014but using Gibson Assembly instead of restriction enzymes.</p> <p>You\u2019ll use PCR to create two fragments: - One containing the INS gene - One containing the pET28a backbone</p> <p>You\u2019ll design primers that add 20\u201330 bp overlaps, simulate the assembly, and validate the final construct.</p>"},{"location":"construction/gibson/#step-1-define-your-product","title":"Step 1: Define Your Product","text":"<p>Start by constructing a model of the final pET-INS plasmid:</p> <ol> <li>Open the pET28a vector sequence and convert it to UPPERCASE.</li> <li>Open the insulin cDNA sequence and convert it to lowercase.</li> <li>Paste the INS cds into the intended insertion site as done in the basic cloning tutorial.</li> </ol> <p>This marks where the insert meets the vector, making it easier to plan overlaps.</p> <p>\ud83d\udd17 Downloads:</p> <ul> <li>pET28a GenBank</li> <li>INS GenBank</li> </ul>"},{"location":"construction/gibson/#step-2-design-oligos","title":"Step 2: Design Oligos","text":"<p>After modeling your final plasmid with insert and vector joined, identify the junctions where fragments meet.</p> <p>For each junction:</p> <ul> <li>Select ~20 bp from the end of one fragment</li> <li>Select ~20 bp from the start of the next fragment</li> <li>Concatenate these to form a 40 bp primer</li> </ul> <p>Use this 40 bp sequence directly as the forward oligo. For the opposite junction, take the corresponding 40 bp and reverse complement it to create the reverse oligo.</p> <p>When choosing the ~20, follow the same general approach for finding annealing sequences between 18 and 25 bp long, balanced base content, etc. as done previously in the Basic Cloning tutorial.</p>"},{"location":"construction/gibson/#step-3-simulate-the-gibson-assembly","title":"Step 3: Simulate the Gibson Assembly","text":"<p>Start by simulating the assembly manually to understand what\u2019s happening:</p> <ol> <li>Predict the PCR products using your designed primers anneal as expected</li> <li>Identify the overlapping sequences at the ends of each fragment.</li> <li>For each overlap, delete one copy so the fragments can join seamlessly.</li> <li>Join the trimmed fragments to form your final product.</li> </ol> <p>Then try using simulation tools to automate the process:</p> <ul> <li>ApE and Benchling allow you to simulate Gibson assemblies graphically.</li> <li>You can also use the C6 Tools to simulate the full CF script:   \ud83d\udd17 Use C6 simulation tools</li> </ul> <p>These tools let you verify that your oligos will function as expected.</p>"},{"location":"construction/gibson/#try-it-yourself","title":"\ud83c\udfaf Try it yourself","text":"<p>In your quiz, you'll use the randomly selected gene from Bacillus atrophaeus UCMB-5137 as done before in the Basic Cloning tutorial.  Also, you will again be cloning it into the NcoI and XhoI restriction sites generating the same product plasmid as before. However, this time, you will make that plasmid by Gibson assembly instead of traditional restriction enzymes.</p> <p>In this challenge, you\u2019ll use Gibson Assembly to insert your assigned gene into the pET28a plasmid between the NcoI and XhoI restriction sites.</p> <p>Just like in the pET-INS example:</p>"},{"location":"construction/gibson/#1-start-by-modeling-the-final-product","title":"1. Start by modeling the final product","text":"<ul> <li>Start by recreating the pET28a + gene design you made in the basic cloning tutorial.</li> <li> <p>If you skipped that tutorial, no problem \u2014 follow the guidance here to recreate it:</p> <ul> <li>Use the plasmid backbone from pET28a sequence file.</li> <li>Retrieve your assigned gene sequence using the \"Quiz Instructions\" box above.</li> <li>Insert the entire CDS into the region between the NcoI (<code>CCATGG</code>) and XhoI (<code>CTCGAG</code>) sites.</li> <li>The atg of your CDS should overlap the NcoI site as 'CCatgg'</li> <li>Paste the CDS in lowercase, and keep the plasmid sequence in UPPERCASE.</li> </ul> </li> </ul>"},{"location":"construction/gibson/#2-identify-each-junction","title":"2. Identify each junction","text":"<ul> <li> <p>For each junction:</p> <ul> <li>Forward oligo = 20 bp before junction + 20 bp after junction  </li> <li>Reverse oligo = reverse complement of forward oligo</li> </ul> </li> </ul>"},{"location":"construction/gibson/#3-build-your-construction-file-cf","title":"3. Build your Construction File (CF)","text":"<ul> <li>Your CF should include:<ul> <li>Two <code>PCR</code> steps</li> <li>One <code>Gibson</code> step</li> <li>One <code>Transform</code> step</li> <li>Four <code>oligo</code> lines</li> </ul> </li> <li>You will name and assign components based on your own design choices</li> </ul> <p>Tip: The sequences for your assigned gene (see name in the Quiz Instructions box above) and for <code>pET28a</code> are preloaded in the autograder\u2014no need to define them in your CF.</p>"},{"location":"construction/gibson/#a-note-on-naming-and-templates","title":"A Note on Naming and Templates","text":"<p>When you're ready, paste your CF into the autograder below and simulate.</p>"},{"location":"construction/gibson/#gibson-quiz","title":"Gibson Quiz","text":"<p>Paste your Construction File (CF) below and click Simulate. You\u2019ll see the resulting sequences, and if your design is valid, it will complete the quiz.</p> Simulate <p></p>"},{"location":"construction/gibson/#try-and-break-it","title":"\ud83e\uddea Try and Break It","text":"<p>Once your plan works, experiment!</p> <ul> <li>Delete an overlap and see what happens.</li> <li>Remove a PCR step.</li> <li>Flip the insert direction.</li> </ul> <p>Watch how the validation catches errors. This helps you understand how Gibson designs succeed\u2014or fail.</p>"},{"location":"construction/golden_gate/","title":"7. Golden Gate Assembly","text":""},{"location":"construction/golden_gate/#golden-gate-assembly","title":"Golden Gate Assembly","text":"<p>In previous tutorials, we built the pET-INS plasmid using both traditional restriction enzyme cloning and Gibson Assembly. In this tutorial, you'll use Golden Gate Assembly to build the same construct\u2014while learning how this method enables precise, scar-controlled, multi-part DNA construction.</p>"},{"location":"construction/golden_gate/#what-is-golden-gate-assembly","title":"What is Golden Gate Assembly?","text":"<p>Golden Gate Assembly is a method for joining DNA fragments using Type IIs restriction enzymes like BsaI, BsmBI, BbsI, and SapI. These enzymes cut a fixed number of bases away from their recognition sites, which allows the creation of custom 4 bp overhangs that control exactly where and how parts join together.</p> <p>Golden Gate is powerful because it allows:</p> <ul> <li>Custom-designed sticky ends for precise, seamless (or intentionally scarred) ligation</li> <li>Single-pot digestion and ligation, increasing efficiency</li> <li>Automatic removal of restriction sites from the final product</li> </ul> <p>These features make it ideal for modular cloning, where standardized parts and repeatable junctions are critical.</p> <p>The reaction is designed so that digestion and ligation happen together, recognition sites are eliminated, and sticky ends control the final sequence junctions.</p> <p>\u26a0\ufe0f This means:</p> <ul> <li>The recognition site must not appear in the final product, or it will be re-cleaved.</li> <li>The method can be iterated using the same enzyme again and again, since the site is removed during assembly.</li> </ul>"},{"location":"construction/golden_gate/#designing-golden-gate-oligos","title":"Designing Golden Gate Oligos","text":"<p>Let\u2019s now walk through a complete Golden Gate Assembly plan to make pET-INS, just like we did in the Gibson version.</p>"},{"location":"construction/golden_gate/#step-1-define-your-product","title":"Step 1: Define Your Product","text":"<p>Start by constructing a model of the final pET-INS plasmid, just as you did with Gibson.</p> <ul> <li>Open the pET28a vector sequence and convert it to UPPERCASE.</li> <li>Open the insulin cDNA sequence and convert it to lowercase.</li> <li>Paste the INS cds into the intended insertion site as done in the basic cloning tutorial.</li> </ul> <p>\ud83d\udd17 Downloads:</p> <ul> <li>pET28a GenBank</li> <li>INS GenBank</li> </ul>"},{"location":"construction/golden_gate/#step-2-annotate-junctions-and-annealing-regions","title":"Step 2: Annotate Junctions and Annealing Regions","text":"<p>Once you\u2019ve created a model of your final product, define these regions:</p> <p>For each junction where two fragments will join:</p>"},{"location":"construction/golden_gate/#a-choose-the-sticky-end","title":"A. Choose the Sticky End","text":"<ul> <li>Choose 4 bp from the existing sequence at the junction to serve as the sticky end. These should be non-palindromic (e.g., avoid <code>AATT</code>, <code>GATC</code>, etc.) to ensure correct orientation.</li> <li>Create a feature annotation called <code>\"sticky end\"</code> over those 4 bases.</li> <li>In the visualization below, these are highlighted in orange as \u201csticky end 1\u201d and \u201csticky end 2\u201d, corresponding to the two junctions in this construct.</li> </ul>"},{"location":"construction/golden_gate/#b-mark-the-forward-anneal-region","title":"B. Mark the Forward Anneal Region","text":"<p>Starting at the junction and extending downstream, choose 20\u201330 bp that follow standard primer design rules. Label this <code>forward anneal</code>.</p>"},{"location":"construction/golden_gate/#c-mark-the-reverse-anneal-region","title":"C. Mark the Reverse Anneal Region","text":"<p>Identify 20\u201330 bp upstream (5\u2032) of the junction. This sequence lies on the coding strand, not its reverse complement. Label it <code>reverse anneal</code>.</p>"},{"location":"construction/golden_gate/#step-3-design-oligos","title":"Step 3: Design Oligos","text":"<p>Design the junction + annealing region for each oligo first. These are the 3\u2032 ends that will bind to your template.</p>"},{"location":"construction/golden_gate/#a-forward-oligo","title":"A. Forward Oligo","text":"<ul> <li>From the forward strand of your product, copy the 4 bp sticky end plus ~20 bp downstream (i.e., to the right).</li> <li>This is your junction + anneal region.</li> </ul>"},{"location":"construction/golden_gate/#b-reverse-oligo","title":"B. Reverse Oligo","text":"<ul> <li>From the reverse strand of your product, copy the 4 bp sticky end plus ~20 bp upstream (i.e., to the left).</li> <li>Reverse complement this sequence. This is your junction + anneal region for the reverse oligo.</li> </ul>"},{"location":"construction/golden_gate/#c-add-the-golden-gate-prefix","title":"C. Add the Golden Gate Prefix","text":"<p>Add the following prefix to both the forward and reverse oligos:</p> <pre><code>ccataGGTCTCa\n</code></pre> <p>This includes:</p> <ul> <li><code>ccata</code> = arbitrary 5' tail</li> <li><code>GGTCTC</code> = BsaI recognition site</li> <li><code>a</code> = one-base arbitrary spacer before the sticky end</li> </ul> <p>Final orientation of Golden Gate oligos (both forward and reverse):</p> <pre>\n5' tail - BsaI - spacer - sticky end - annealing region - 3'\n</pre>    \u26a0\ufe0f Important: For the reverse oligo, only the junction + annealing region is reverse complemented. The prefix remains in forward orientation.     \ud83e\uddec 5\u2032 tail design tip: NEB data shows BsaI cuts efficiently with as little as 1 bp upstream of its site. While 5 bp is a safe general rule, it's often more than necessary.  <p>Do the same for each junction.  Realistically, you can do this PCR-based variant of Golden Gate for up to 4 fragments.  You can also do golden gate with clonal plasmid DNA.  With the higher quality DNA and the restriciton sites being further from the ends, plasmid-based golden gate is much more efficient for multi-fragment assembly than the PCR variant.</p> <p>Here is an example solution:</p> <pre>PCR         insF2       insR2       insulin_cdna      ins_pcr\nPCR         vecF2       vecR2       pET28a           vec_pcr\nGoldenGate  vec_pcr     ins_pcr     BsaI             pET-INS\n\noligo       insF2       ccataGGTCTCaatggccctgtggatgcgcctc\noligo       insR2       cagatGGTCTCaCGAGctagttgcagtagttctccag\noligo       vecF2       ccataGGTCTCaCTCGAGCACCACCACCACCAC\noligo       vecR2       cagatGGTCTCaccatGGTATATCTCCTTCTTAAAG</pre> <p>Copy Example</p>"},{"location":"construction/golden_gate/#step-4-simulate-it","title":"Step 4: Simulate It","text":"<p>You can simulate the PCR steps of the construction file as you've done previously with your sequence editor or an automation tool.  ApE and Benchling both have visual tools to simulate the Golden Gate step as well.  C6 can also simulate your entire construction file, and you can try it out in the box below.</p> <p>\ud83d\udca1 Tip: If you\u2019re unsure about orientation after simulating, remember there are only two possibilities\u2014it\u2019s either the sequence you expect or its reverse complement.</p>"},{"location":"construction/golden_gate/#try-it-yourself","title":"\ud83c\udfaf Try it yourself","text":""},{"location":"construction/golden_gate/#a-note-on-naming-and-templates","title":"A Note on Naming and Templates","text":""},{"location":"construction/golden_gate/#golden-gate-quiz","title":"Golden Gate Quiz","text":"<p>Paste your Construction File (CF) below and click Simulate. You\u2019ll see the resulting sequences, and if your design is valid, it will complete the quiz.</p> Simulate <p></p>"},{"location":"construction/manual_prediction/","title":"3. Manual Product Prediction","text":""},{"location":"construction/manual_prediction/#manual-product-prediction","title":"Manual Product Prediction","text":"<p>In this module, you'll learn how to predict the results of molecular biology operations by reasoning through the mechanisms. This manual prediction process is foundational for verifying whether a cloning strategy will work as intended. While there are many tools and algorithms to help you design a cloning plan, here we are learning to do it based on first principles. It's a skill you'll often use in the lab when results are unclear and you need to troubleshoot. Going through this process also deepens your understanding of how molecular biology works and how different biochemical elements interact.</p>"},{"location":"construction/manual_prediction/#before-you-try-this","title":"Before You Try This...","text":"<p>Want a refresher on how PCR works at a mechanistic level? Watch this short, animated video: \ud83d\udcfa PCR Animation \u2013 The Polymerase Chain Reaction</p>"},{"location":"construction/manual_prediction/#guided-walkthrough-predicting-pcr-products","title":"Guided Walkthrough: Predicting PCR Products","text":"<p>We\u2019ll begin with a simple scenario using a structured table format called <code>cf_shorthand</code>. You\u2019ll encounter this notation in later tutorials, but here we\u2019ll treat it as a straightforward summary of oligos and templates.</p>"},{"location":"construction/manual_prediction/#pcr-example","title":"PCR Example","text":"<pre><code>operation    primer1      primer2      template    product\nPCR          exFor        exRev        pTemp1      pcrpdt\n\noligo        exFor        CAGCGGATCGGATCGGCGAC\noligo        exRev        CGGTTGTGCGGGCGGAACCAG\nplasmid      pTemp1       CTGGTGACCCAGCGGATCGGATCGGCGACCCAAAGCGCCTGGTTCCGCCCGCACAACCGCGA\n</code></pre> <p>We have two primers (<code>exFor</code> and <code>exRev</code>) and a circular template plasmid (<code>pTemp1</code>). The task is to predict the PCR product.</p> <ol> <li>Find <code>exFor</code> exactly in the template.</li> <li>Find the reverse complement of <code>exRev</code> and match that in the template.</li> <li>The product includes everything between them (including the primers).</li> </ol> <p>Product Visualization:</p>"},{"location":"construction/manual_prediction/#pcr-with-5-tails","title":"PCR with 5' Tails","text":"<pre><code>operation    primer1     primer2     template     product\nPCR          exFor2      exRev2      pTemp1       pcrpdt2\n\noligo        exFor2      ccataGAATTCCAGCGGATCGGATCGGCGAC\noligo        exRev2      cagatGGATCCCTGGTTCCGCCCGCACAACCG\nplasmid      pTemp1      CTGGTGACCCAGCGGATCGGATCGGCGACCCAAAGCGCCTGGTTCCGCCCGCACAACCGCGA\n</code></pre> <p>This example includes 5' tails. Only the 3' ends of primers need to match the template; the 5' ends will be added to the product.</p> <p>Product Visualization:</p>"},{"location":"construction/manual_prediction/#inverse-pcr-ipcr","title":"Inverse PCR (IPCR)","text":"<p>In inverse PCR, primers point outward from a circular template.</p> <ol> <li>Find forward primer match and set it as new origin.</li> <li>Reverse complement the reverse primer and locate its match.</li> <li>Predict the sequence between these two primer ends.</li> </ol> Quiz: Predict This Product <pre><code>operation    primer1     primer2     template   product\nPCR          qFor        qRev        pQ1        quizpdt\n\noligo        qFor        ccataCATATGGTTCTTGATTCGATACG\noligo        qRev        cagatCTCGAGTTAGTGCTGTTCGAGGTCCTG\nplasmid      pQ1         CACTCAAGGTTCAGGACCTCGAACAGCACTAACGGAAGAAATCCGATGGTTCTTGATTCGATACGTGGCCCCGAGGACCTCGCAT\n</code></pre> Submit <p></p>"},{"location":"construction/manual_prediction/#simulating-digestion-and-ligation","title":"Simulating Digestion and Ligation","text":"<p>Now we\u2019ll simulate a restriction digest followed by ligation. You\u2019ll combine DNA pieces with compatible overhangs created by restriction enzymes.</p>"},{"location":"construction/manual_prediction/#visual-overview","title":"\ud83d\uddbc\ufe0f Visual Overview","text":""},{"location":"construction/manual_prediction/#construction-file","title":"\ud83d\udcc4 Construction File","text":"<pre><code>operation    dna      enzyme      fragment    product\nDigest       blue     BamHI       0           blue_dig\nDigest       orange   BamHI       1           orange_dig\n\noperation    dna1     dna2                    product\nLigate       blue_dig orange_dig              blue_orange\n\ndsDNA        blue         tacctgaaaGGATCCcttcc\ndsDNA        orange       cttcgGGATCCgctggcaga\n</code></pre> <p>This file specifies:</p> <ul> <li>What DNA is being cut and where</li> <li>Which fragments are retained</li> <li>Which are ligated</li> </ul>"},{"location":"construction/manual_prediction/#steps-1-and-2-restriction-digestion","title":"\u2702\ufe0f Steps 1 and 2: Restriction Digestion","text":"<p>Enzyme: BamHI Cut Site: <code>G^GATCC</code> \u2192 sticky 5' overhang</p> <p>Each DNA is cut into two fragments:</p> <ul> <li>From <code>blue</code>, keep fragment 0 (5' half)</li> <li>From <code>orange</code>, keep fragment 1 (3' half)</li> </ul> <p>These fragments are now <code>blue_dig</code> and <code>orange_dig</code>.</p>"},{"location":"construction/manual_prediction/#step-3-ligation","title":"\ud83d\udd17 Step 3: Ligation","text":"<ul> <li><code>blue_dig</code> and <code>orange_dig</code> have matching GATC overhangs</li> <li>They ligate seamlessly via Watson-Crick base pairing</li> <li>BamHI site is restored at the junction</li> </ul>"},{"location":"construction/manual_prediction/#final-construct-visualization","title":"\ud83e\uddec Final Construct Visualization","text":"<p>Resulting sequence: </p>  \ud83e\uddea Quiz: Predict the Ligation Product  <pre><code>operation    dna        enzyme      fragment    product\nDigest       fragA      XhoI         0          fragA_dig\nDigest       fragB      XhoI         1          fragB_dig\n\noperation    dna1       dna2                    product\nLigate       fragA_dig  fragB_dig               fragC\n\ndsDNA        fragA      cagtacaagagattcagCTCGAGatacc\ndsDNA        fragB      cgaaaCTCGAGcatagacaggacaacca\n</code></pre> Submit <p></p>"},{"location":"construction/mutagenesis/","title":"8. Site-Directed Mutagenesis","text":""},{"location":"construction/mutagenesis/#site-directed-mutagenesis","title":"Site-Directed Mutagenesis","text":"<p>Site-directed mutagenesis refers to any cloning technique where you introduce a specific, localized change into a DNA sequence. These changes may include:</p> <ul> <li>Substituting a base or codon</li> <li>Inserting or deleting a small sequence (typically &lt;30 bp)</li> <li>Replacing a defined region</li> <li>Creating a variant library at a defined site</li> </ul> <p>In all cases, you're targeting a specific location within a plasmid and rewriting a short region while leaving the rest unchanged.</p> <p></p> <p>Figure: Site-directed mutagenesis of the pTargetF plasmid to retarget the gRNA. The original cadA-targeting protospacer (orange) is replaced with a new cscR-targeting protospacer (pink), using a SpeI-flanked region upstream of the gRNA scaffold (green tracrRNA).</p>"},{"location":"construction/mutagenesis/#overview-of-mutagenesis-strategies","title":"Overview of Mutagenesis Strategies","text":"<p>Most mutagenesis methods resemble the PCR-based cloning techniques you've already seen. The general pattern is:</p> <ol> <li>PCR the entire plasmid using primers that encode your intended mutations.</li> <li>Re-close the product using ligation or Gibson-like mechanisms.</li> <li>Transform and screen for correct clones.</li> </ol> <p>Conceptually, it's like the limiting case of assembly: just one fragment, but edited.</p>"},{"location":"construction/mutagenesis/#1-eipcr-enzymatic-inverse-pcr","title":"1) EIPCR (Enzymatic Inverse PCR)","text":"<p>EIPCR is analogous to the NcoI/XhoI method you used in basic cloning, except it uses a single restriction site flanking the mutation site to reclose the plasmid.</p> <p>This method is ideal when the mutation you want to introduce is close to a unique restriction site. You perform a full-vector PCR using primers that flank the site and introduce the desired edits. After PCR, you digest the product with the enzyme and ligate the linear fragment to restore circularity.</p>"},{"location":"construction/mutagenesis/#example-retargeting-the-protospacer-in-ptargetf","title":"Example: Retargeting the protospacer in pTargetF","text":"<p>In the Basic Cloning tutorial, you cloned the Cas9 gene from Streptococcus pyogenes into an expression vector. Cas9 is the \"scissors\" protein that creates double-strand breaks at specific locations in DNA, but it requires a guide RNA (gRNA) to find its target. The gRNA consists of two parts: a customizable 20 bp protospacer sequence that matches the genomic target, and a constant scaffold that helps recruit Cas9. Together, the Cas9 protein and the gRNA form a complex that scans DNA, binds to sequences matching the protospacer, and cuts them if an adjacent \"NGG\" protospacer-adjacent motif (PAM) is present.</p> <p>To design a new protospacer, you need to identify a 20 bp sequence in your target gene that is directly upstream of an NGG motif\u2014the PAM site required by Cas9. In practice, you scan for \"GG\" on the 3\u2032 end of the desired target, then take the 20 bp sequence immediately upstream. For example, if \"GG\" starts at position 101, the protospacer would be positions 80 to 99. You can think of this computationally as finding the index of \"GG\" and extracting the \u221221 to \u22121 substring. Any sequence that satisfies this rule can be targeted for cleavage by Cas9. To create a new gRNA, simply replace the 20 bp protospacer sequence in pTargetF and coexpress with Cas9.</p> <p>The pTargetF plasmid expresses guide RNAs (gRNAs) for CRISPR/Cas9, combining a customizable 20 bp protospacer (which determines target specificity) with a constant scaffold region. To retarget Cas9 to a new genomic site, you simply replace the protospacer. Conveniently, pTargetF includes a SpeI site upstream of the protospacer, allowing efficient editing via EIPCR: PCR amplify the plasmid with primers encoding the new protospacer, digest with SpeI, and re-ligate to form the edited plasmid.</p>"},{"location":"construction/mutagenesis/#primer-design-and-strategy","title":"Primer Design and Strategy","text":"<p>The first step is to model your edited sequence. We want to replace the original cadA-targeting protospacer in pTargetF with a new protospacer targeting the cscR gene.</p> <p>Below is a portion of the cscR sequence with all potential PAM sites (NGG) highlighted. Any 20 bp sequence immediately upstream of a GG can serve as a candidate protospacer. Specialized software tools can help you pick optimal guides based on efficiency and off-target predictions, and in many cases, validated guides are available in public databases.</p> <p>Once you select your new protospacer, you replace the original cadA-targeting protospacer in pTargetF.</p> <p>Below, we show the pTargetF sequence before and after the change.  We also select forward and reverse anneal sequences flanking the site of modification.</p>"},{"location":"construction/mutagenesis/#original-targeting-cada","title":"Original (targeting cadA)","text":""},{"location":"construction/mutagenesis/#with-cscr-replaced","title":"With cscR replaced","text":"<p>Now that we\u2019ve modeled the edited region, we can design primers to build it. The forward primer includes everything from the SpeI site through the end of the forward annealing region. The reverse primer is the reverse complement of the sequence from the start of the reverse anneal to the end of the SpeI site. Add a 5\u2032 tail of 5 arbitrary bases to both primers to improve enzyme activity and allow for efficient restriction digestion.</p> <pre><code>Forward Primer (ol_protoF)  \n        SpeI  Protospacer         Forward Anneal  \n5\u2019-ccataACTAGTaacgcgtgaccgcgtattgcGTTTTAGAGCTAGAAATAGCAAG -3\u2019\n\nReverse Primer (ol_protoR)  \n        SpeI  Reverse Anneal (rc)  \n5\u2019-ctcagACTAGTattatacctaggactgagctag-3\u2019\n</code></pre> <p>Finally, we can write up our construction file.  As always, simulate your construction file to make sure it works before ordering oligos.</p> <pre>\nPCR       ol_protoF       ol_protoR       pTargetF      ipcr\nDigest    ipcr                            SpeI          speDig\nLigate    speDig                                        pTarget-cscR\n</pre> <p>Copy Example</p>"},{"location":"construction/mutagenesis/#2-quickchange-mutagenesis-using-pet-ins","title":"2) QuickChange Mutagenesis Using pET-INS","text":""},{"location":"construction/mutagenesis/#example-c96s-mutation-in-insulin","title":"Example: C96S Mutation in Insulin","text":"<p>Cysteine 96 in human insulin helps form disulfide bonds critical for protein folding. Mutating this residue to serine (C96S) can stabilize recombinant insulin analogs by reducing misfolding or aggregation. In this example, we\u2019ll use QuickChange mutagenesis to introduce the C96S mutation in the pET-INS plasmid.</p> <p></p> <p>Image adapted from Agilent Technologies.</p>"},{"location":"construction/mutagenesis/#strategy","title":"Strategy","text":"<p>QuickChange uses two overlapping primers to introduce a mutation into a plasmid:</p> <ul> <li>The mutation sits in the middle of each primer.</li> <li>The flanking regions must perfectly match the template DNA.</li> <li>After high-fidelity PCR, the full plasmid is synthesized but with nicks.</li> <li>DpnI is used to digest the methylated parental (template) DNA.</li> <li>The nicked product is repaired inside E. coli after transformation.</li> </ul> <p>Conceptually, this is like a Gibson assembly with one fragment, except ligation occurs in vivo.</p>"},{"location":"construction/mutagenesis/#mutation-design","title":"Mutation Design","text":"<ol> <li>Open <code>pET-INS.seq</code> and locate amino acid 96 in the INS coding sequence.</li> <li>Confirm it encodes Cysteine (TGC or TGT).</li> <li>Replace with a Serine codon, like AGC.</li> <li>Annotate the codon as <code>\"C96S\"</code>.</li> </ol>"},{"location":"construction/mutagenesis/#primer-design","title":"Primer Design","text":"<p>Choose ~20 bp of perfectly matched sequence flanking the mutation site for both directions. The mutation is centered in the oligos.</p>"},{"location":"construction/mutagenesis/#oligos","title":"Oligos","text":"<pre><code>Forward Primer (ol_C96S_F)\n          [anneal]  [MUTATED CODON]  [anneal]\n5\u2019-gaagcgtggcattgtggaacaaAGTtgtaccagcatctgctccctc-3\u2019\n\nReverse Primer (ol_C96S_R)\nReverse complement of forward primer\n5\u2019-gagggagcagatgctggtacaACTttgttccacaatgccacgcttc-3\u2019\n</code></pre>"},{"location":"construction/mutagenesis/#final-notes","title":"Final Notes","text":"<ul> <li>Perform DpnI digestion after PCR to eliminate the template plasmid.</li> <li>No ligase is required \u2014 the cell repairs the nicks.</li> <li>Very fast and easy to perform</li> <li>Ideal for single codon changes, but less robust than EIPCR for large insertions.</li> </ul>"},{"location":"construction/mutagenesis/#3-saturation-mutagenesis","title":"3) Saturation Mutagenesis","text":"<p>When you began the wetlab portion of the pP6 experiment, you used Golden Gate-style site-directed mutagenesis not to create a single edited clone, but an entire library of variants. This approach is called saturation mutagenesis.</p> <p>Instead of targeting one mutation, saturation mutagenesis introduces degenerate bases\u2014for example, <code>\"N\"</code> represents a mix of all four nucleotides (A, T, C, G). There are other codes like:</p> <ul> <li><code>\"K\"</code> = G or T</li> <li><code>\"S\"</code> = G or C</li> <li><code>\"W\"</code> = A or T  </li> </ul> <p>These are called IUPAC degeneracy codes.</p> <p>Designing these oligos follows the same workflow as any Golden Gate mutagenesis:</p> <ul> <li>Build a model of the final product with degenerate bases included.</li> <li>Define junctions and annealing regions.</li> <li>Simulate and confirm construct logic.</li> </ul> <p>\u26a0\ufe0f However, a few special rules apply for degenerate libraries:</p> <ul> <li>Do not place degeneracy at the 3\u2032 end of your oligos (the annealing region). This can prevent proper PCR priming.</li> <li>Avoid degeneracy at the sticky ends or within the junctions of Golden Gate primers. They must be precise for the assembly to work.</li> <li>It's best to place degenerate bases a few nucleotides away from the junction to reduce any context-dependent ligation bias.</li> </ul>"},{"location":"construction/mutagenesis/#example-pp6-library-oligos","title":"Example: pP6 Library Oligos","text":"<p>Here are the final oligos used for the pP6 linker library:</p> <pre><code>P6LibR2   CCAAAggtctcgTTATANNNNNNNNNNNNNNNNNTGTCAANNNNGAACCCAGGACTCCTCGAAGTC\nP6LibF2   CAGTAggtctcgATAATNNNNNNANNNNGTTAGTATTTCTCCTCGTCTAC\n</code></pre> <p>These primers:</p> <ul> <li>Introduce degeneracy to encode a 4-amino-acid linker between domains</li> <li>Conform to Golden Gate primer rules (prefix, BsaI, sticky, anneal)</li> <li>Place degeneracy well away from the junctions for optimal ligation efficiency</li> </ul> <p>You can simulate this library in C6-Tools to visualize possible sequence outcomes and confirm primer performance.</p>"},{"location":"construction/mutagenesis/#mutagenesis-quiz-build-a-t203x-egfp-variant-library","title":"Mutagenesis Quiz: Build a T203X EGFP Variant Library","text":"<p>In this quiz, you'll introduce a rational point mutation into a fluorescent protein gene to change its properties in a visible and meaningful way.</p>"},{"location":"construction/mutagenesis/#background","title":"Background","text":"<p>We're using pcDNA3-EGFP, a mammalian expression plasmid that produces Enhanced Green Fluorescent Protein (EGFP). This plasmid is commonly used for visualizing gene expression or localization in mammalian cells. </p> <p>The plasmid contains:</p> <ul> <li>A CMV promoter for expression in mammalian cells.</li> <li>An Ampicillin resistance gene and ColE1 origin for propagation in E. coli.</li> <li>The EGFP gene, which encodes a protein that fluoresces green when expressed and excited with blue light.</li> </ul> <p>In the lab, you'd build the plasmid in E. coli, purify plasmid DNA, and then transfect it into mammalian cells, where the protein is expressed and fluoresces.</p>"},{"location":"construction/mutagenesis/#goal","title":"Goal","text":"<p>A previous screen of a site-saturation mutagenesis library at position T203 found that the T203Y mutation (Emerald GFP) produced brighter and red-shifted fluorescence. But this mutation was discovered by making a degenerate library where all possible codons were tested.</p> <p>In this quiz, you will build the same library \u2014 not just a single mutant \u2014 using Golden Gate mutagenesis. You'll introduce an NNK codon at position 203 of EGFP to allow all 20 amino acids (and one stop) to be sampled.</p>"},{"location":"construction/mutagenesis/#tools","title":"Tools","text":"<ul> <li>\ud83e\uddec Genetic code table</li> <li>\ud83d\udce6 Benchling and ApE will translate sequences automatically \u2014 but you must start from the ATG of the ORF, not the start of the plasmid.</li> </ul>"},{"location":"construction/mutagenesis/#task","title":"Task","text":"<p>Use site-directed mutagenesis via Golden Gate assembly to mutate Threonine 203 to NNK in EGFP, generating a codon-randomized library at that site.</p> <p>You will:</p> <ul> <li>Locate T203 in the EGFP ORF</li> <li>Replace its codon with <code>NNK</code></li> <li>Design and annotate the product</li> <li>Simulate the construct and output a valid Construction File</li> </ul>"},{"location":"construction/mutagenesis/#files","title":"Files","text":"<ul> <li>You can find the plasmid here: Addgene #13031: pcDNA3-EGFP</li> <li>Click the \"View all sequences\" link on the Addgene plasmid page.</li> <li>Then click the GenBank download link.</li> <li>Open the downloaded <code>.gbk</code> file in ApE or Benchling to view the plasmid map and annotations.</li> <li>A copy of the plasmid map is also available in the tutorial\u2019s <code>assets</code> folder as: <code>addgene-plasmid-13031-sequence-305137.gbk</code>.</li> </ul> <p>\u26a0\ufe0f Important: The plasmid contains an internal BsaI site, which would interfere with assembly. To avoid this conflict, use BsmBI instead (recognition site: 5\u2032\u2013CGTCTC(N1/N5)\u20133\u2032).</p>"},{"location":"construction/mutagenesis/#guidelines","title":"Guidelines","text":"<p>This quiz builds on everything you\u2019ve learned so far. As you design your T203NNK library:</p> <ul> <li>Use Golden Gate mutagenesis with BsmBI on <code>pcDNA3-EGFP</code>.</li> <li>Replace only the codon for T203 with <code>NNK</code>, preserving the reading frame.</li> <li>As you prepare your product sequence in ApE or Benchling, annotate the edited codon as <code>\"T203NNK\"</code> to keep track of your mutation site.</li> <li>Choose a nearby 4 bp junction, the annealing regions, and design 2 Golden Gate oligos.</li> <li>Write up and simulate your construction file below.</li> <li>The simulator already has the sequence for pcDNA3-EGFP.</li> </ul> <p>Paste your Construction File (CF) below and click Simulate. You\u2019ll see the resulting sequences, and if your design is valid, it will complete the quiz.</p> Simulate <p></p>"},{"location":"construction/sequence_tools/","title":"Sequence Tools","text":""},{"location":"construction/sequence_tools/#introduction","title":"Introduction","text":"<p>Sequence editing tools are essential for molecular biology and bioinformatics, allowing researchers to manipulate and analyze DNA sequences effectively. These tools range from graphical interfaces designed for ease of use to powerful command-line utilities and programming libraries.</p>"},{"location":"construction/sequence_tools/#tools-overview","title":"Tools Overview","text":"Tool Name Pros Cons ApE (A Plasmid Editor) - Course demonstrations will be done in ApE.- Simple interface- Efficient auto-annotation- Supports multiple file formats - Lacks cloud collaboration features- Limited automation capabilities. Benchling - Real-time collaboration- Extensive documentation- Integrates well with other laboratory tools. - Requires an internet connection- Subscription required for advanced features. SnapGene - User-friendly- Excellent visualization tools- Supports automatic primer design and cloning workflows. - Paid software with limited free version capabilities. UGENE - Free- Supports a wide range of sequence analysis tools- Allows scripting. - Interface can be complex for beginners. Biopython - Highly customizable- Integrates well with other computational tools. - Requires programming knowledge. EMBOSS - Wide range of utilities for sequence alignment, translation, and annotation. - Command-line interface can be intimidating for beginners. Seqtk - Extremely fast- Suitable for large-scale datasets. - Limited functionality compared to larger toolkits. Geneious - Comprehensive features including primer design, alignment, and phylogenetics. - Paid software with a high subscription cost."},{"location":"construction/sequence_tools/#selection-guide","title":"Selection Guide","text":"<ul> <li>If you prefer a simple graphical tool, start with ApE.  </li> <li>If you need cloud-based collaboration, choose Benchling.  </li> <li>If you want advanced visualization and cloning workflows, consider SnapGene.  </li> <li>If you are comfortable with scripting, use Biopython or EMBOSS.  </li> <li>If you need high-performance sequence processing, try Seqtk.  </li> </ul> <p>This document will focus on ApE, Benchling, and Biopython, providing tutorials on how to get started and perform essential sequence operations.</p>"},{"location":"construction/sequence_tools/#ontology-of-operations","title":"Ontology of Operations","text":"<ul> <li>Search: Finding specific sequences or patterns within a larger sequence. Refer back to the tutorials for practical examples.</li> <li>Copy: Duplicating a sequence or a portion of it to the clipboard for further use.</li> <li>Paste: Inserting the content of the clipboard into your sequence.</li> <li>Reverse Complement: Generating the reverse complement of a DNA sequence.</li> <li>Translate: Converting a nucleotide sequence into its corresponding protein sequence using the genetic code.</li> <li>Annotate: Adding biological information to a sequence, such as gene names or functional regions.</li> <li>Digest: Cutting a DNA sequence at specific sites using restriction enzymes.</li> <li>Rotate: Shifting the sequence in a circular manner.</li> <li>Feature Management: The process of importing and managing custom features in tools like ApE and Benchling.</li> </ul>"},{"location":"construction/sequence_tools/#ape","title":"ApE","text":""},{"location":"construction/sequence_tools/#download-and-install-ape","title":"Download and Install ApE","text":"<p>Download and install ApE from the official website: ApE Download Page</p>"},{"location":"construction/sequence_tools/#update-features-and-enzymes-in-ape","title":"Update Features and Enzymes in ApE","text":"<p>To ensure ApE recognizes the latest feature annotations and enzyme files, follow these steps:</p>"},{"location":"construction/sequence_tools/#step-1-set-up-a-storage-folder","title":"Step 1: Set Up a Storage Folder","text":"<ol> <li>Create an empty folder on your computer to store the updated feature list.</li> </ol>"},{"location":"construction/sequence_tools/#step-2-configure-ape-settings","title":"Step 2: Configure ApE Settings","text":"<ol> <li>Open ApE and navigate to ApE &gt; Settings... </li> <li>Click the Files tab.  </li> <li>Under Default Feature Directory, click Move Directory, select the newly created folder, and click OK.  </li> <li>Repeat this for Default Enzymes Directory.  </li> <li>Click OK to close the settings window. ApE will generate default versions of these files in the folder.</li> </ol>"},{"location":"construction/sequence_tools/#step-3-download-the-features","title":"Step 3: Download the features","text":"<ul> <li>Download the updated files: Download Default Features</li> </ul>"},{"location":"construction/sequence_tools/#step-4-load-the-feature-library","title":"Step 4: Load the Feature Library","text":"<ol> <li>In ApE, go to Features &gt; Open Feature Library... </li> <li>Navigate to <code>default_features.txt</code> and select it.  </li> <li>Click OK to finalize.</li> <li>Download this test file: Download GenBank</li> <li>Open it in ApE and hit ctrl-k. You should see something like:</li> </ol> <p> Figure: Auto-annotation in ApE highlights recognized sequence features in color, providing visual cues for promoters, coding regions, and other functional elements. This aids quick sequence interpretation and editing.</p>"},{"location":"construction/sequence_tools/#performing-operations-in-ape","title":"Performing Operations in ApE","text":"<ul> <li>Search: Use Edit &gt; Find in the toolbar or press Command + F. To search both strands, check the Also find rev-com of string option. You can use N's as wildcards in your search. Choose to either select or highlight the sequence using the provided button options.</li> <li>Copy: Select the sequence using your mouse, then go to Edit &gt; Copy, or press Command + C. To copy the reverse complement, use Edit &gt; Copy Rev Com.</li> <li>Paste: Place your cursor where you want to insert the clipboard contents, then go to Edit &gt; Paste, or press Command + V.</li> <li>Reverse Complement: Select the sequence and use Edit &gt; Reverse-Complement to modify it directly. Alternatively, use Edit &gt; Copy Rev Com to copy the reverse complement to the clipboard without modifying the original sequence.</li> <li>Translate: Use ORFs &gt; Translate... to translate the highlighted sequence. Options allow displaying single-letter amino acids, triplet codes, and including/excluding the original DNA sequence.</li> <li>Annotate: Manually add a feature by highlighting a sequence, then go to Features &gt; New Feature to name it and assign a color. Press Command + K to auto-annotate all features in the Feature Library. Add new features under Features &gt; Edit Feature Library....</li> <li>Digest: Open Enzyme &gt; Enzyme Selector, select enzymes of interest, and click Highlight to mark their cut sites.</li> <li>Rotate: Place your cursor where you want the new origin, then go to Edit &gt; Set Origin. This function is only available when the sequence is marked as circular, indicated by the Linear/Circular toggle button in the editor window.</li> </ul> <p>You can turn off the double-stranded view under ApE &gt; Settings and uncheck the Inline Features option.</p>"},{"location":"construction/sequence_tools/#benchling","title":"Benchling","text":""},{"location":"construction/sequence_tools/#getting-started-with-benchling","title":"Getting Started with Benchling","text":"<ul> <li>Create an account on Benchling and log in.</li> <li>Familiarize yourself with the interface and available tools.</li> </ul>"},{"location":"construction/sequence_tools/#uploading-features-and-autoannotation","title":"Uploading Features and Autoannotation","text":"<ul> <li>Navigate to Settings \u2192 Feature Libraries.</li> <li>Click Upload Feature Library.</li> <li>Provide a <code>.csv</code> file where column 1 is the feature name and column 2 is the feature sequence. Ensure there are no extra spaces or formatting issues that could cause import errors.</li> <li>Use <code>default_features.txt</code> for your feature file as a reference for formatting.</li> <li>Save the library and use the Auto-annotate feature on a new sequence to apply the annotations.</li> </ul>"},{"location":"construction/sequence_tools/#performing-operations-in-benchling","title":"Performing Operations in Benchling","text":""},{"location":"construction/sequence_tools/#search","title":"Search","text":"<ol> <li>Open your sequence in Benchling.</li> <li>Click on the magnifying glass (\ud83d\udd0d) icon in the toolbar or press Ctrl + F (Cmd + F on Mac).</li> <li>Type the sequence or pattern you want to find.</li> <li>To search both strands, enable the \"Search reverse complement\" option.</li> <li>Matching sequences will be highlighted; click Next or Previous to navigate between results.</li> </ol>"},{"location":"construction/sequence_tools/#copy","title":"Copy","text":"<ol> <li>Click and drag to select a sequence region or use the sequence navigator.</li> <li>Right-click and select Copy, or press Ctrl + C (Cmd + C on Mac).</li> <li>The copied sequence can now be pasted into another sequence, document, or external program.</li> </ol>"},{"location":"construction/sequence_tools/#reverse-complement","title":"Reverse Complement","text":"<ol> <li>Select the sequence region you want to reverse complement.</li> <li>Click More Tools (\u2699\ufe0f) &gt; Reverse Complement in the toolbar.</li> <li>The sequence will be transformed in place.</li> </ol>"},{"location":"construction/sequence_tools/#translate","title":"Translate","text":"<ol> <li>Highlight the DNA sequence you wish to translate.</li> <li>Click More Tools (\u2699\ufe0f) &gt; Translate.</li> <li>Select the reading frame (e.g., Frame 1, 2, 3).</li> <li>The translated amino acid sequence will appear below the DNA.</li> </ol>"},{"location":"construction/sequence_tools/#annotate","title":"Annotate","text":"<ol> <li>Highlight a region of your sequence.</li> <li>Click Annotate in the toolbar.</li> <li>Enter a Feature Name, select a Feature Type, and assign a color.</li> <li>Click Save to apply the annotation.</li> </ol>"},{"location":"construction/sequence_tools/#digest","title":"Digest","text":"<ol> <li>Click More Tools (\u2699\ufe0f) &gt; Digest.</li> <li>Select the Restriction Enzymes you want to use.</li> <li>Click Digest to visualize the cut sites on your sequence.</li> </ol>"},{"location":"construction/sequence_tools/#rotate","title":"Rotate","text":"<ol> <li>Click More Tools (\u2699\ufe0f) &gt; Set Origin.</li> <li>Select a new position for the sequence origin.</li> <li>Click Apply to shift the sequence.</li> </ol>"},{"location":"construction/sequence_tools/#biopython","title":"Biopython","text":"<p>Biopython provides programmatic sequence editing capabilities. For practical examples, refer to the Colab notebook: Google Colab Biopython Tutorial. The Colab contains implementations of all described operations in Python.</p>"},{"location":"construction/sequencing_confirmation/","title":"Sequencing Confirmation","text":"<p>After you've completed your cloning, your next step is to verify the integrity of your plasmid. This tutorial walks through different sequencing strategies and how to choose and apply the right one for your purpose.</p>"},{"location":"construction/sequencing_confirmation/#choosing-the-right-strategy","title":"Choosing the Right Strategy","text":"<p>There are three main sequencing strategies available, each suited to different goals and budgets:</p> <ol> <li>Cycle sequencing (like you used in the pP6 experiment) gives a ~1 kb window of high-quality sequence starting about 50 bp downstream of a primer. It's ideal for checking a specific region of a plasmid\u2014like an insert or promoter.</li> <li>Full-plasmid sequencing from providers like Plasmidsaurus uses long-read nanopore technology to return the complete sequence of your plasmid. This is more expensive (~$15/sample), but you get the entire plasmid and can catch unexpected rearrangements or background DNA.</li> <li>NGS (Next-Generation Sequencing) is a high-throughput approach designed for analyzing complex populations. You PCR-amplify your targets with adapters and submit the pool for deep sequencing. This is powerful, but expensive, and more suitable for library screens than for single plasmid validation.</li> </ol> Method Cost/sample Output Best For Cycle sequencing ~$3.50 ~1 kb from a primer Targeted region confirmation Full plasmid (Plasmidsaurus) ~$15 Entire plasmid sequence Whole-plasmid verification, structural issues NGS (deep sequencing) $750+ Millions of short reads Large libraries, pooled clone analysis <p>\ud83d\udccc Only cycle sequencing requires you to choose or design a primer. Full plasmid and NGS options use standardized workflows.</p>"},{"location":"construction/sequencing_confirmation/#quiz-choosing-a-sequencing-method","title":"Quiz: Choosing a Sequencing Method","text":"<p>Scenario 1: You\u2019re confirming that a single new antibiotic resistance gene was cloned correctly into a known plasmid backbone. Which sequencing method should you use?</p> --Select-- Cycle sequencing Full plasmid (Plasmidsaurus) NGS <p></p> <p>Scenario 2: You\u2019ve made a library of 5,000 variants of a ribosome binding site in a plasmid and want to determine the distribution of sequences present. What\u2019s the right method?</p> --Select-- Cycle sequencing Full plasmid (Plasmidsaurus) NGS <p></p> <p>Scenario 3: You\u2019re validating the structure of a new multi-gene construct with internal repeats and want to ensure the whole thing is intact and mutation-free. Best method?</p> --Select-- Cycle sequencing Full plasmid (Plasmidsaurus) NGS <p></p> Check Answers"},{"location":"construction/sequencing_confirmation/#designing-your-primer-cycle-sequencing-only","title":"Designing Your Primer (Cycle Sequencing Only)","text":"<p>If you're using cycle sequencing, you must provide a primer. This primer must bind upstream of the region you wish to confirm.</p> <ul> <li>The sequencing read begins ~50 bp downstream of the primer.</li> <li>You can use standard primers (e.g., M13rev, G00101), but only if your target region lies ~50 bp downstream of their site.</li> <li>Otherwise, design a custom primer:</li> <li>Length: 18\u201325 bp</li> <li>GC content: ~40\u201360%</li> <li>Avoid long repeats or secondary structure</li> <li>Must match the strand in the direction you wish to read</li> </ul> <p>Important: Plasmid sequences are circular. In GenBank files, the \u201cstart\u201d of the sequence is arbitrary. A feature near the beginning (like the T7 promoter) may require you to rotate the sequence to design a primer \u201cupstream\u201d of it, even if that\u2019s technically the end of the GenBank string.</p>"},{"location":"construction/sequencing_confirmation/#quiz-primer-design-for-t7-ins","title":"Quiz: Primer Design for T7 + INS","text":"<p>Download the plasmid: \u2b07\ufe0f pET-INS.seq</p> <p>Your goal: Design a 20 bp oligo that will allow a sequencing read to start at the T7 promoter and cover the INS gene.</p> <p>Paste your oligo sequence below (5' to 3', exact match to template strand):</p> <p></p> Check Primer"},{"location":"construction/sequencing_confirmation/#defining-the-confirmation-target","title":"Defining the Confirmation Target","text":"<p>Before you can interpret your sequencing results, you need to define the confirmation target\u2014the specific region of the plasmid you care about confirming. The choice of this region depends on how much certainty you need about the sequence, and what can already be inferred from functional outcomes (e.g., antibiotic resistance, visible fluorescence, or selection as from an activity screen). As a rule of thumb, the confirmation target is a subsequence of the full plasmid model that includes:</p> <ul> <li>Any inserted or deleted regions</li> <li>Any modified regulatory elements (e.g., promoters, RBSs)</li> <li>Any junctions created by cloning</li> <li>Any regions you targeted for mutagenesis</li> </ul>"},{"location":"construction/sequencing_confirmation/#case-study-pet-ins","title":"Case Study: pET-INS","text":"<p>For the pET-INS plasmid:</p> <ul> <li>The kanamycin resistance (kanR) and the origin of replication (ori) are inherited from the original pET28a vector. Since you selected colonies on a kanamycin plate, these must be functional. Even if they contain silent mutations, they won't affect your experiment, so they don\u2019t need to be reconfirmed.</li> <li>The confirmation target is the T7 promoter, RBS, and INS gene, along with enough flanking sequence to include sites of oligo binding during construction.</li> </ul> <p>This entire block\u2014the T7 + RBS + INS insert\u2014is the confirmation region, and it is treated as a whole. The sequencing read must cleanly and correctly cover this entire region to confirm the plasmid\u2019s correctness.</p> <p>Once you\u2019ve defined your confirmation target, your task is to determine whether your sequencing read contains it accurately and completely. This involves aligning your read to the model plasmid and checking whether the confirmation region is covered and error-free.</p>"},{"location":"construction/sequencing_confirmation/#analyzing-sequencing-data","title":"Analyzing Sequencing Data","text":"<p>To evaluate your sequencing outcome, you\u2019ll align your sequencing read to the reference model and examine how well it covers your defined confirmation target.</p>"},{"location":"construction/sequencing_confirmation/#performing-an-alignment","title":"Performing an Alignment","text":"<p>Use ApE or Benchling to perform sequence alignment:</p> <ul> <li>In ApE: Open both the read and the model plasmid. Go to <code>Tools \u2192 Align Sequences...</code>, select both files, and click OK.</li> <li>In Benchling: Use the alignment tool in the side panel to align your sequencing read to the model plasmid.</li> <li>You can also use any of various webtools like https://en.vectorbuilder.com/tool/sequence-alignment.html</li> </ul> <p>Look for:</p> <ul> <li>Start of alignment: Does the read begin at the expected point downstream of your primer?</li> <li>Full coverage of the confirmation target</li> <li>Perfect match or any deviations</li> </ul> <p>If the confirmation target is entirely within the read, then it is 'perfect' and you are done with the analysis.  Otherwise, there may be a mutation present.</p>"},{"location":"construction/sequencing_confirmation/#types-of-sequence-deviations","title":"Types of Sequence Deviations","text":""},{"location":"construction/sequencing_confirmation/#point-mutations","title":"Point mutations","text":"<p>These are single base changes. In open reading frames (ORFs), they fall into three categories:</p> <ul> <li>Silent: The codon is changed, but the same amino acid is encoded.</li> <li>Missense: The codon is changed to encode a different amino acid.</li> <li>Nonsense: The codon is changed to a stop codon, truncating the protein.</li> </ul> <p>If you find a single base difference between your sequencing read and the confirmation target within an ORF, translate the surrounding region in both the read and the model to determine whether the mutation is silent, missense, or nonsense.</p> <p></p> <p>Figure: Example of a nonsense mutation. In the model, the codon TGC codes for cysteine (C). In the read, a point mutation changes it to TGA, a stop codon (*), truncating the protein. This is a single base change with a major functional consequence.</p>"},{"location":"construction/sequencing_confirmation/#indels","title":"Indels","text":"<p>Insertions or deletions (indels) can be especially problematic in ORFs. If not in multiples of 3, they cause frameshifts, scrambling the downstream protein sequence. Even a single base insertion or deletion can shift the reading frame, changing every amino acid after the mutation and often introducing a premature stop codon. Indels in regulatory regions or non-coding areas may have less dramatic effects but can still disrupt motifs or regulatory elements.</p> <p></p> <p>Figure: Example of an indel mutation. The model contains a region coding for multiple amino acids. In the read, this region is deleted, leading to a frameshift. All downstream codons are shifted, likely disrupting the entire ORF.</p> Deviation Type Description Effect in ORFs Effect in Regulatory Regions Effect in Non-Coding Exact Match No differences \u2705 Ideal \u2705 Ideal \u2705 Ideal Silent Mutation Codon changes, same amino acid Usually benign May affect motif behavior None Missense Codon changes, new amino acid May change function Not applicable None Nonsense Creates stop codon Likely disruptive Not applicable None Indel Insertion/deletion; may cause frameshift Frameshift if not multiple of 3; severe May disrupt motifs/regulatory elements Sometimes none Frameshift Insertion/deletion disrupting codons (not by 3) Severe Not applicable None Regulatory change Affects promoter, RBS, etc. Not applicable Can disrupt expression None Structural error Duplication, truncation, or wrong orientation Varies Varies Varies"},{"location":"construction/sequencing_confirmation/#quality-issues","title":"Quality Issues","text":"<p>Sometimes you can\u2019t interpret the read because:</p> <ul> <li>Ns or ambiguous bases: Signal dropout or primer failure</li> <li>Short reads: May not reach the confirmation target</li> <li>Mixed signals: More than one DNA template in the reaction</li> </ul> <p></p> <p>Figure: Sequencing trace types. Left: High-Quality Read \u2014 Tall, sharp peaks with clear base calls. Middle: Low-Quality Signal \u2014 Short, noisy peaks with Ns and base ambiguity. Right: Mixed Template \u2014 From around base 169, each position shows two well-resolved peaks, suggesting the presence of two DNA templates in the same prep. Mixed reads indicate either two different plasmids in the cell, or instability of the original plasmid.  Either way, it is problematic.</p>"},{"location":"construction/sequencing_confirmation/#final-call-categories","title":"Final Call Categories","text":"<p>You must assess the read and decide:</p> <ul> <li>Perfect: All of the confirmation region is covered with high-quality data, and there are no mismatches.</li> <li>Perfect Partial: What you can see is perfect, but part of the confirmation region is not covered due to read length or quality limitations.</li> <li>Mutant: Read has deviations in the confirmation target.</li> <li>Mixed Clone: Trace shows evidence of multiple sequence populations\u2014typically due to more than one plasmid being present in the miniprep prep.</li> <li>Failed: Poor quality read, unreadable, or no match to target.</li> </ul>"},{"location":"construction/sequencing_confirmation/#quiz-sequence-interpretation","title":"Quiz: Sequence InterpretationCase 1: missense_in_ORFCase 2: perfect_partialCase 3: pJ19Case 4: indel","text":"<p>Download the full quiz data set here:  </p> <p>\u2b07\ufe0f Download All Cases (ZIP)</p> <p>Each folder in the zip includes:</p> <ul> <li>A <code>.ab1</code> trace</li> <li>A <code>.seq</code> read</li> <li>A <code>.gb</code> model with the confirmation target annotated</li> </ul> <p>What kind of outcome is shown in this sequencing result?</p> <p> --Select scenario-- Perfect Perfect Partial Mixed Failed Silent Mutation Nonsense Mutation Missense Mutation Indel <p></p> <p></p> <p>Check Answer</p> <p>What kind of outcome is shown in this sequencing result?</p> <p> Perfect Perfect Partial Mixed Failed Silent Mutation Nonsense Mutation Missense Mutation Indel <p></p> <p></p> <p>Check Answer</p> <p>What kind of outcome is shown in this sequencing result?</p> <p> --Select scenario-- Perfect Perfect Partial Mixed Failed Silent Mutation Nonsense Mutation Missense Mutation Indel <p></p> <p></p> <p>Check Answer</p> <p>What kind of outcome is shown in this sequencing result?</p> <p> Perfect Perfect Partial Mixed Failed Silent Mutation Nonsense Mutation Missense Mutation Indel <p></p> <p></p> <p>Check Answer</p>"},{"location":"construction/simulation_tools/","title":"4. Simulation Tools","text":""},{"location":"construction/simulation_tools/#simulation-tools","title":"Simulation Tools","text":"<p>Several tools can automate molecular cloning workflows. ApE and Benchling offer graphical interfaces for simulating steps like PCR, Golden Gate, Gibson, and digestion reactions. Alternatively, C6-Tools provides a scripting-based approach using Construction File (CF) shorthand, and is available both as a web tool and as a Google Sheets plugin:</p> <p>\ud83d\udd17 Open C6-Tools in Google Sheets</p> <p>The Google Sheets version includes a library of DNA design functions that you can access directly from spreadsheet cells. These include methods for <code>PCR</code>, <code>Digest</code>, <code>Ligate</code>, <code>GoldenGate</code>, and <code>Gibson</code>, as well as functions for parsing and simulating CF scripts. Visit the linked page and follow the instructions to get started.</p>"},{"location":"construction/simulation_tools/#understanding-cf-syntax","title":"Understanding CF Syntax","text":"<p>The Construction File (CF) format is a streamlined way to describe molecular cloning procedures using a structured table-like syntax. Each line specifies either:</p> <ul> <li>An operation to perform (e.g., <code>PCR</code>)</li> <li>A sequence element involved in the operation (e.g., an <code>oligo</code> or <code>plasmid</code>)</li> </ul> <p>Each line begins with a keyword (like <code>PCR</code>, <code>oligo</code>, or <code>plasmid</code>) followed by a set of fields separated by either tabs or multiple spaces. These fields define the names and sequences needed for simulation.</p>"},{"location":"construction/simulation_tools/#pcr-line-breakdown","title":"PCR Line Breakdown","text":"<p>For example, the line:</p> <pre><code>PCR          exFor2      exRev2      pTemp1       pcrpdt2\n</code></pre> <p>...defines a PCR reaction using:</p> <ul> <li>a forward primer called <code>exFor2</code></li> <li>a reverse primer called <code>exRev2</code></li> <li>a circular DNA template called <code>pTemp1</code></li> <li>a product that will be named <code>pcrpdt2</code></li> </ul>"},{"location":"construction/simulation_tools/#naming-rules","title":"Naming Rules","text":"<p>Each name (or \"identifier\") you use for DNA sequences\u2014like primers, templates, or products\u2014needs to follow specific rules:</p> <ul> <li>You can use: letters, numbers, dashes (<code>-</code>), underscores (<code>_</code>), dots (<code>.</code>), plus signs (<code>+</code>), and backticks (<code>`</code>)</li> <li>Do not use: commas, spaces, quotes, parentheses, or other special symbols\u2014they can cause errors during simulation</li> <li>Names are case-sensitive: <code>pTemp1</code> and <code>ptemp1</code> would be treated as different sequences</li> </ul> <p>You will learn other operation types like <code>Digest</code> and <code>GoldenGate</code> later in the tutorial, and this tool below can simulate those too.  For now, focus on reading and writing PCR-related lines.</p>"},{"location":"construction/simulation_tools/#try-it-out","title":"Try it out","text":"<p>Now it\u2019s your turn to explore how CF syntax works in practice. The example below defines a PCR reaction using two primers and a circular DNA template. Try copying and pasting it into the form to simulate the result. Then, try breaking things on purpose\u2014like deleting the last 10 bases of a primer or giving two sequences the same name\u2014to see how the tool catches design errors and helps you debug. This is a quick way to test your understanding before moving on to more complex operations.</p> <pre>PCR          exFor2      exRev2      pTemp1       pcrpdt2\n\noligo        exFor2      ccataGAATTCCAGCGGATCGGATCGGCGAC\noligo        exRev2      cagatGGATCCCGGTTGTGCGGGCGGAACC\nplasmid      pTemp1      CTGGTGACCCAGCGGATCGGATCGGCGACCCAAAGCGCCTGGTTCCGCCCGCACAACCGCGA</pre> <p>Copy Example</p> <p>Paste your Construction File (CF) below and click Simulate. You\u2019ll see the resulting sequences, and if your design is valid, it will complete the quiz.</p> Simulate <p></p> <p>The C6 simulation algorithm inputs both the construction file and an (optional) list of sequences with their names. The algorithm will include both the sequences embedded in the CF as well as those in the separate list. In these tutorials, we have injected the plasmids named in the various examples into this list.  For other sequences, you will need to put them in the CF.</p>"},{"location":"construction/simulation_tools/#dna-autoannotation-and-simulation","title":"DNA Autoannotation and Simulation","text":"<p>The tutorials can also autoannotate your sequence, detect transcriptional units, and predict which proteins are potentially expressed or will not be expressed.  This can be helpful for detecting design errors.  This capability is only displayed on this page.</p> <p>Paste a DNA sequence below and click Annotate and Simulate.</p> Annotate and Simulate"},{"location":"planning/cfs_simulation/","title":"Simulation Tools: CFS &amp; C6","text":"<p>This page explains how to simulate DNA construction workflows using two tools: - CFS (Construction File Simulator) \u2014 a Java-based simulation engine. - C6 Tools \u2014 a spreadsheet-based interface using Google Sheets.</p>"},{"location":"planning/cfs_simulation/#cfs-construction-file-simulator","title":"\ud83e\uddea CFS (Construction File Simulator)","text":"<p>CFS is a Java tool that simulates a Construction File (CF) to verify correctness of molecular biology protocols like PCR, digestion, ligation, assembly, and transformation. It detects common design issues before you build.</p>"},{"location":"planning/cfs_simulation/#getting-started","title":"Getting Started","text":"<ol> <li>Install Java (JRE 8+).</li> <li>Download the <code>.jar</code> file from the Releases section.</li> <li>Extract <code>dist.zip</code>, if applicable.</li> </ol>"},{"location":"planning/cfs_simulation/#usage-options","title":"Usage Options","text":"<ul> <li>Double-click <code>ConstructionFileSimulator.jar</code> to launch the GUI.</li> <li>Drag-and-drop an experiment folder onto the GUI.</li> <li>Command line (GUI launch): <pre><code>java -jar ConstructionFileSimulator.jar\n</code></pre></li> <li>Command line (direct simulation): <pre><code>java -jar ConstructionFileSimulator.jar /path/to/experiment/folder\n</code></pre></li> </ul>"},{"location":"planning/cfs_simulation/#file-requirements","title":"File Requirements","text":"<p>A valid experiment folder must include: - A text-based Construction File - GenBank files for sequence definitions - A TSV file with part definitions (if needed)</p>"},{"location":"planning/cfs_simulation/#output","title":"Output","text":"<p>The simulator will display: - Each intermediate step (e.g., PCR product, digested fragment) - Final output sequences - Errors or misassemblies if present</p>"},{"location":"planning/cfs_simulation/#c6-tools-spreadsheet-based","title":"\ud83d\udcca C6 Tools (Spreadsheet-based)","text":"<p>C6 Tools is a Google Sheets-based simulation interface using built-in scripts.</p>"},{"location":"planning/cfs_simulation/#example-layout","title":"Example Layout","text":"<p>You define steps as a grid:</p> A B C D E F <code>PCR</code> <code>P6libF</code> <code>P6libR</code> <code>pTP1</code> 3583 <code>P6</code> <code>Assemble</code> <code>P6</code> <code>BsaI</code> <code>pP6</code> <code>Transform</code> <code>pP6</code> <code>Mach1</code> <code>Carb</code> <p>Supporting rows include definitions of primers and templates below.</p>"},{"location":"planning/cfs_simulation/#how-to-use","title":"How to Use","text":"<ol> <li>Fill in your construction steps as a grid (A6:F12 in this example).</li> <li>Run this in a new cell to parse:    <pre><code>=parseCF(A7:F12)\n</code></pre></li> <li>Simulate the build using:    <pre><code>=simCF(H8)\n</code></pre></li> </ol>"},{"location":"planning/cfs_simulation/#output_1","title":"Output","text":"<p>The simulation will populate: - Intermediate products - Final product - Sequence output or errors</p> <p>Use these tools to validate and troubleshoot your designs before going to the bench. They are critical for catching errors early and speeding up the design-build-test cycle.</p>"},{"location":"planning/design_principles/","title":"Experimental Design Principles","text":"<p>Construction Files, Genbank sequences, and LabSheets are a general-purpose toolkit for documenting synthetic biology experiments. They do not tell you what to build\u2014only how to record it. So the fundamental question at the start of every project is: What should you build and test?</p>"},{"location":"planning/design_principles/#types-of-experiments","title":"Types of Experiments","text":"<p>Most synthetic biology experiments fall into two broad categories:</p>"},{"location":"planning/design_principles/#1-prototyping","title":"1. Prototyping","text":"<p>In the prototyping stage, you are exploring new designs that haven't been tested in your system. You might have:</p> <ul> <li> <p>A gene from a database or literature</p> </li> <li> <p>A new combination of parts</p> </li> <li> <p>A hypothesis about how something will work in a cell</p> </li> </ul> <p>But no direct experience with the function in your hands.</p>"},{"location":"planning/design_principles/#questions-to-ask","title":"Questions to Ask:","text":"<ul> <li> <p>What proteins/RNAs need to be expressed?</p> </li> <li> <p>What regulatory elements do I need?</p> </li> <li> <p>What assay tells me if it works?</p> </li> <li> <p>What controls are required for interpreting results?</p> </li> <li> <p>How many variants can I build/test given assay throughput?</p> </li> </ul>"},{"location":"planning/design_principles/#2-optimization","title":"2. Optimization","text":"<p>Once a prototype is functional, optimization improves performance: yield, growth, stability, etc.</p>"},{"location":"planning/design_principles/#strategies","title":"Strategies:","text":"<ul> <li> <p>Promoter Swap: Replace a promoter with variants</p> </li> <li> <p>RBS Library: Tune translation rate</p> </li> <li> <p>Ortholog Scan: Swap homologous coding sequences</p> </li> <li> <p>Terminator Scan: Adjust transcript stability</p> </li> <li> <p>Part Combination Screens: Combine multiple part variants</p> </li> </ul> <p>In our example, Lycopene33 is an optimization experiment in which we replace the existing dxs gene in a multi-gene biosynthetic pathway with orthologous dxs genes from other organisms to assess the impact on pathway performance.</p> <p>The relationship between prototyping and optimization can be thought of as a progression: prototyping produces a first working construct, and optimization refines it for better performance.</p> <p> Figure: A decision tree illustrating the progression from untested design to prototype, and from prototype to systematic part tuning and performance analysis. Optimization is an iterative process\u2014improvements identified in each round are incorporated into the next cycle, refining the design over time. In contrast, prototyping is a more linear process aimed at achieving first functionality. </p>"},{"location":"planning/design_principles/#the-tprc-system","title":"The TP.RC System","text":"<p>To simplify modular cloning, we group parts into two classes: Traditionally, gene expression units are built using four modular parts: Promoter, RBS, CDS, and Terminator. Each of these must be mixed and matched individually during optimization, resulting in long repetitive assemblies. The TP.RC system simplifies this by collapsing the four parts into two composite modules: TP (Terminator-Promoter) and RC (RBS-CDS). This reduces the number of interchangeable parts, standardizes junctions, and enables efficient assembly of expression units using fewer, more functional blocks.</p> <p> Figure: The TP.RC model replaces traditional 4-part gene units with streamlined 2-part modules. Each TP and RC part corresponds to untranscribed and transcribed regions of DNA, respectively\u2014rather than neatly mapping to a single gene. This architecture enables construction of multicistronic operons by placing multiple RC units in sequence, and allows changes to transcriptional architecture via singular additions or removals of TP parts. The reduced part count simplifies optimization while preserving full design flexibility.</p>"},{"location":"planning/design_principles/#planning-an-optimization-experiment","title":"Planning an Optimization Experiment","text":"<p>In practice, optimization is often performed without a specific hypothesis about what part is limiting. Instead, it is a form of sensitivity analysis\u2014each position in a construct is systematically tested for influence on performance. Rather than identifying a bottleneck beforehand, you vary elements (e.g., promoters, RC units) at selected sites and measure the resulting impact. This allows you to discover which parts are rate-limiting or overly active and informs future engineering steps.</p> <p>The typical optimization workflow involves:</p> <ol> <li> <p>Selecting a position in the construct to diversify</p> </li> <li> <p>Choosing a part type to vary (e.g., promoter, RC unit)</p> </li> <li> <p>Designing a panel of alternative sequences</p> </li> <li> <p>Building variants using Construction Files</p> </li> <li> <p>Running assays and interpreting results</p> </li> <li> <p>Updating designs based on observed trends</p> </li> </ol> <p>These small focused scans yield interpretable results and inform future designs.</p>"},{"location":"planning/design_principles/#ortholog-scans-and-rc-replacement","title":"Ortholog Scans and RC Replacement","text":"<p>An ortholog scan is a type of RC swap. The goal is to replace an existing RBS-CDS module with alternative homologs of the same protein from other organisms. Each ortholog is paired with a designed RBS to form a new RC unit.</p> <p>In practice:</p> <ul> <li> <p>You identify target orthologs using BLAST</p> </li> <li> <p>Design or adapt RBSs</p> </li> <li> <p>Clone them into the backbone using Golden Gate or Gibson</p> </li> </ul> <p> Figure: A biosynthetic pathway made of multiple TP.RC units is shown. In this ortholog scan, a single RC unit is replaced with variants sourced from gorilla, orca, and alligator. Expression output (product titer) is quantified at right. The alligator ortholog significantly outperforms the others, demonstrating how targeted RC swaps can boost pathway productivity.</p>"},{"location":"planning/design_principles/#anatomy-of-tp-and-rc-parts","title":"Anatomy of TP and RC Parts","text":"<p>The TP.RC system follows a standardized layout compatible with the MoClo Golden Gate standard. Each part includes flanking type IIS restriction sites and 5 bp overhangs that define junctions and ensure consistent assembly order.</p> <p>The diagram below illustrates the structure of TP and RC parts, showing BsaI sites, MoClo overhangs, and internal linkers for amplification and sequencing.</p>"},{"location":"planning/design_principles/#tp-terminator-promoter-parts","title":"TP (Terminator-Promoter) Parts","text":"<p>These combine a terminator from the previous gene with a promoter for the next one. The TP unit terminates transcription upstream and initiates transcription downstream. The sequence is flanked by linkers and BsaI sites to facilitate cloning.  There is also a 3rd unique linker between the promoter and terminator that serves as a site for sequencing over the promoter-RBS junction in the final construct.</p>"},{"location":"planning/design_principles/#rc-rbs-cds-parts","title":"RC (RBS-CDS) Parts","text":"<p>These include a ribosome binding site and a coding sequence. The cassette is flanked by unique linker elements to facilitate modification of adjacent parts and terminated by BsaI sites on both ends.</p> <p>Each linker (sometimes also called a spacer) is a unique 20 bp DNA sequence chosen for its uniqueness and suitability for priming PCR. These regions are often derived from validated qPCR primer sets and placed at fixed positions in each part.</p> <p>These linkers allow:</p> <ul> <li> <p>Reliable cycle sequencing from fixed, well-placed anchor points</p> </li> <li> <p>Selective amplification of the backbone via PCR to modify individual parts</p> </li> <li> <p>Homology regions for Gibson, SOEing, or Yeast recombination-based cloning</p> </li> </ul> <p></p> <p>Figure: Layout of TP and RC parts showing the role of unique linkers and MoClo overhangs. Each part includes type IIS flanking sites and 5' overhangs for ordered assembly.</p>"},{"location":"planning/design_principles/#quiz-building-an-rc-part","title":"\ud83e\uddea Quiz: Building an RC Part","text":"Construct a Golden Gate-compatible RC Part <p>Using the specifications below, enter the full DNA sequence for a valid RC part:</p> <ul> <li><code>5\u2032 BsaI site</code>: <code>GGTCTC</code> (with 1 nt tail)</li> <li><code>Sticky ends</code>: <code>tact</code> (5\u2032) and <code>gctt</code> (3\u2032)</li> <li><code>5\u2032 Spacer</code>: <code>CAAATGTACGGCCAGCAACG</code></li> <li><code>RBS</code>: <code>gagaaagaggagaaatactag</code></li> <li><code>CDS</code>: <code>ATGGCGTCTGACAGGAGCGTAA</code></li> <li><code>3\u2032 Spacer</code>: <code>GCACACCGTGGAAACGGATG</code></li> <li>Add <code>5 bp tails</code> on both ends</li> </ul> Check Answer <p></p> <p>When designing synthetic biology experiments using the TP.RC system, you don\u2019t need to make early decisions about exactly how each part will be used. As long as you follow the conventions for TP and RC design\u2014using appropriate placed unique linkers, BsaI sites, and standardized overhangs\u2014you can easily mix and match parts later. RC and TP units can be swapped, reordered, added, or removed without redesigning the parts. This flexibility simplifies both prototyping and optimization workflows.</p> <p>There are multiple valid strategies for constructing TP and RC parts. You can order them as synthetic gene blocks (GBlocks) with overhangs and tails already included, clone them from genomic DNA or existing plasmids using primers that append the necessary BsaI sites, or obtain them through clonal gene synthesis. Regardless of the method, the outcome is the same: a reusable TP or RC module that integrates seamlessly into modular assemblies, enabling rapid iteration and design reuse.</p>"},{"location":"planning/inventory_labsheets/","title":"Inventory and LabSheets","text":"<p>At this stage, you\u2019ve designed your oligos, written construction files, and confirmed the molecular biology is theoretically sound. With the experimental design finalized, it\u2019s time to order materials and plan lab work. This includes selecting protocols, identifying required samples, and specifying where to find them.</p> <p>You will generate two key documents:</p> <ul> <li> <p>Inventory: Tracks all DNA samples and reagents used or created in the project.</p> </li> <li> <p>LabSheet: A lab-ready checklist detailing the experimental workflow.</p> </li> </ul>"},{"location":"planning/inventory_labsheets/#sample-identity-and-granularity","title":"Sample Identity and Granularity","text":"<p>While construct names like <code>pLYC2</code> refer to a designed DNA sequence, the inventory tracks physical samples\u2014things in tubes. If you pick multiple clones, perform retransformation, or prepare fresh minipreps, it's essential to use names that distinguish each version.</p> <p>A few naming examples: - <code>pLYC2</code> \u2014 refers to the theoretical DNA design. - <code>pLYC2 clone A</code> \u2014 a specific isolate from a transformation plate. - <code>pLYC2 clone A 2\u00b0</code> \u2014 a separate (secondary) prep or colony from the same clone lineage.</p> <p>In simple cases (e.g., only one clone, one miniprep), just using the construct name may be fine. But as soon as there are multiple samples that could plausibly differ, your naming must be specific enough to distinguish them. Inventory records must include all details needed to unambiguously identify each tube.</p> <p>Similarly, when documenting results (e.g., sequencing, assay data), always indicate which specific sample was used\u2014not just the construct name. The more complexity in your project, the more critical this becomes.</p> <p>Examples of the completed ones for lycopene33 are available:</p> <p>Inventory LabSheets</p> <p>To illustrate, consider the construction plans for the lycopene33 project:</p> <pre><code>PCR         GB5F     GB5R     pLYC72    back72\nGoldenGate  pTpDXS   back72   BsaI       ggTp\nTransform   ggTp     Mach1    Amp        37     pLYC76\n</code></pre> <p><pre><code>PCR         oAfDXSf  oAfDXSr  CP160629   pcrAf\nPCR         GB5F     GB5R     pLYC72    back72\nGoldenGate  pcrAf    back72   BsaI       ggAf\nTransform   ggAf     Mach1    Amp        37     pLYC77\n</code></pre> In a construction file (CF), the final item on each line (e.g., <code>ggTp</code>, <code>ggAf</code>, <code>pLYC76</code>, etc.) represents an output\u2014a DNA product that does not yet exist but will be generated during the experiment. Conversely, inputs include materials like primers, template plasmids, gene synthesis fragments, and genomic DNA (e.g., <code>GB5F</code>, <code>pLYC72</code>, <code>CP160629</code>, <code>oAfDXSf</code>). These are either already in your inventory or will be shortly after ordering.</p> <p>Let\u2019s focus on the inputs. Some are carryovers from previous experiments and are already cataloged. Their locations can be found in the project folder\u2019s inventory files:</p> <ul> <li><code>pLYC72</code>: Prototype plasmid \u2192 Box33 / B2</li> <li><code>CP160629</code>: Genomic DNA from Aliivibrio fischeri \u2192 Box33 / B1</li> </ul> <p>This notation means: Row B (second row, starting from A), Column 2 (counting from 1) in a box labeled <code>Box33</code>.</p> <pre><code>&gt;&gt;construct    1           2           3     4     5     6\nA\nB              CP160629    pLYC72\nC\nD\n</code></pre> <p>The remaining inputs\u2014four oligos and one gene synthesis\u2014will arrive lyophilized in labeled screw-cap tubes. Though they\u2019re not yet in the inventory, we\u2019ll assign them storage positions in advance. While there\u2019s no strict rule for box arrangement, grouping similar items (e.g., oligos in Row A) makes retrieval easier:</p> <ul> <li><code>GB5F</code> \u2192 Box33 / A1</li> <li><code>GB5R</code> \u2192 Box33 / A2</li> <li><code>oAfDXSf</code> \u2192 Box33 / A3</li> <li><code>oAfDXSr</code> \u2192 Box33 / A4</li> <li><code>pTpDXS</code> \u2192 Box33 / B3</li> </ul> <pre><code>&gt;&gt;construct    1           2           3           4           5     6\nA              GB5F        GB5R        oAfDXSf     oAfDXSr\nB              CP160629    pLYC72     pTpDXS\nC\nD\n</code></pre> <p>Note: The <code>&gt;&gt;construct</code> label reflects the name used in construction files. Each construct name maps to a specific DNA sequence but doesn't include metadata like concentration, purity, or tube labeling. To find usable materials, match the name under <code>construct</code> with your file, then check label and concentration details to choose the best sample.</p> <p>Now that the stage is set, let\u2019s plan the actual lab work. Construction files (CFs) are organized in chronological order, where later steps often depend on earlier ones. In both CFs, the first operation is a PCR, so our first lab session will begin with setting up those reactions.</p> <p>Reviewing both CFs, we extract all PCR steps:</p> <pre><code>PCR  GB5F     GB5R     pLYC72   back72\nPCR  oAfDXSf  oAfDXSr  CP160629  pcrAf\nPCR  GB5F     GB5R     pLYC72   back72\n</code></pre> <p>The first and third steps are identical\u2014no need to repeat the reaction. A single PCR yields far more material than needed, so we only need to run two PCRs:</p> <pre><code>PCR  GB5F     GB5R     pLYC72   back72\nPCR  oAfDXSf  oAfDXSr  CP160629  pcrAf\n</code></pre> <p>These PCRs are independent and can be run in parallel. We\u2019ll document this in a single PCR LabSheet for our first lab session.</p> <p>The PCR LabSheet will guide you through this workflow:</p> <ol> <li> <p>Fetch all required materials.</p> </li> <li> <p>Resuspend and dilute DNA samples as needed.</p> </li> <li> <p>Prepare PCR reactions with: water, buffer, dNTPs, primer1, primer2, template, and polymerase.</p> </li> <li> <p>Run the appropriate thermocycler program.</p> </li> <li> <p>Return all materials to their proper storage.</p> </li> </ol> <p>The LabSheet will be structured accordingly in the following sections:</p> <ul> <li> <p>Sources</p> </li> <li> <p>Dilutions</p> </li> <li> <p>Reactions</p> </li> <li> <p>Program</p> </li> <li> <p>Destinations</p> </li> </ul>"},{"location":"planning/inventory_labsheets/#sources","title":"Sources","text":"<p>Before setting up PCRs, collect all required DNA materials. Some items may already be in the inventory, while others will arrive lyophilized and need to be resuspended and labeled. Stock oligos are resuspended to 100 \u00b5M; PCR dilutions are typically 10 \u00b5M. Use existing dilutions if available; otherwise, make new ones from stock. For plasmids, use either a miniprep or a dilution (if prior dilution exists and is effective). Be sure to specify the clone being used when applicable. If there are multiple clones, retransforms, or separate preps, include that information (e.g., clone A, clone A 2\u00b0) so the sample can be uniquely identified.</p> <pre><code>label       side-label             construct      clone   concentration   location\nGB5F        GB5F                   GB5F                   lyophilized     \u2013\nGB5R        GB5R                   GB5R                   lyophilized     \u2013\noAfDXSf     oAfDXSf                oAfDXSf                lyophilized     \u2013\noAfDXSr     oAfDXSr                oAfDXSr                lyophilized     \u2013\npTpDXS      pTpDXS                 pTpDXS                 lyophilized     \u2013\npLYC72     pLYC72-A              pLYC72        A       miniprep        Box33/B2\nAf gen.     Aliivibrio fischeri    CP160629               miniprep        Box33/B1\n</code></pre>"},{"location":"planning/inventory_labsheets/#dilutions","title":"Dilutions","text":"<p>Dilution is required for any oligos without existing 10 \u00b5M tubes. Resuspend each oligo stock using the nmol value written on the tube (add 10 \u00b5L per nmol). Dilute to working concentration as needed.</p> <pre><code>label           side-label         construct      concentration\nGB5F            GB5F               GB5F           100 \u00b5M\nGB5R            GB5R               GB5R           100 \u00b5M\noAfDXSf         oAfDXSf            oAfDXSf        100 \u00b5M\noAfDXSr         oAfDXSr            oAfDXSr        100 \u00b5M\n10uM GB5F       10uM GB5F          GB5F           10 \u00b5M\n10uM GB5R       10uM GB5R          GB5R           10 \u00b5M\n10uM oAfDXSf    10uM oAfDXSf       oAfDXSf        10 \u00b5M\n10uM oAfDXSr    10uM oAfDXSr       oAfDXSr        10 \u00b5M\npTpDXS          pTpDXS             pTpDXS         miniprep\n</code></pre>"},{"location":"planning/inventory_labsheets/#reactions","title":"Reactions","text":"<p>Each PCR to be performed is defined in the table below. Use label names that fit on the PCR tube caps\u2014short, unique, and easy to recognize.</p> <pre><code>label   primer1         primer2         template        product\nb72     10uM GB5F       10uM GB5R       pLYC72         back72\nAf      10uM oAfDXSf    10uM oAfDXSr    Af gen.         pcrAf\n</code></pre>"},{"location":"planning/inventory_labsheets/#program","title":"Program","text":"<p>Not all PCRs use the same thermocycler program. When creating a LabSheet, we define the first attempt program for each PCR based on the expected product size. Actual success may vary, and adjustments like annealing temperature tweaks can be made in follow-up experiments and documented in the experimental issue.</p> <p>At the planning stage, the main variable to consider is product length. Using C6-Tools, we calculate:</p>"},{"location":"planning/inventory_labsheets/#pcr-product-sizes","title":"PCR Product Sizes","text":"Product Size (bp) pcrAF 1,989 back72 14,055 <p>These products differ significantly in size, so we refer to the PrimeStar GXL cycling program chart to select the appropriate thermocycler settings.</p>"},{"location":"planning/inventory_labsheets/#primestar-gxl-decision-chart","title":"PrimeStar GXL Decision Chart","text":"Program Size Range PG2K55 Up to 2 kb PG4K55 2\u20134 kb PG6K55 4\u20136 kb PG8K55 6\u20138 kb PGXL4 &gt;8 kb <p>PrimeStar GXL is our standard polymerase for cloning due to its high fidelity and ability to amplify long templates (up to ~30 kb). Other polymerases (e.g., Phusion) can be used, but would require selecting a compatible protocol and explicitly writing that into the LabSheet and thermocycler software.</p>"},{"location":"planning/inventory_labsheets/#assigned-programs","title":"Assigned Programs","text":"<pre><code>protocol: PrimeStar\n\nlabel   program\nAf      PG2K55\nB72     PGXL4\n</code></pre>"},{"location":"planning/inventory_labsheets/#destinations","title":"Destinations","text":"<p>Some samples go back into inventory; others can be discarded. Any tubes listed in the Sources section are returned to their original storage, so they don\u2019t need to be listed again. Reaction tubes (e.g., PCR, digestion, ligation, transformation) are temporary and get discarded\u2014these do not need destination entries.</p> <p>Oligo stocks (100 \u00b5M) should always be saved and listed in destinations. Diluted oligos (10 \u00b5M) can be discarded unless you plan to reuse them\u2014it's easy to remake them from the 100 \u00b5M stock. Later in the experiment, you\u2019ll generate cleaned-up PCR products (e.g., via Zymo cleanup); these should be saved until the project is complete, for troubleshooting. You\u2019ll also generate minipreps; you won\u2019t know how many in advance, but all minipreps that contribute to sequencing should be saved.</p> <p>For the lycopene33 project, we\u2019ll discard the 10 \u00b5M dilutions. The new inventory destinations are:</p> <pre><code>label       location    side-label   construct   concentration\nGB5F        Box33/A1    GB5F         GB5F        100 \u00b5M\nGB5R        Box33/A2    GB5R         GB5R        100 \u00b5M\noAfDXSf     Box33/A3    oAfDXSf      oAfDXSf     100 \u00b5M\noAfDXSr     Box33/A4    oAfDXSr      oAfDXSr     100 \u00b5M\npTpDXS      Box33/B3    pTpDXS       pTpDXS      miniprep\n</code></pre> <p>Now we can finalize the LabSheet and add it to the project folder. There\u2019s no fixed format or file type required, but spreadsheets tend to be the most practical. I often include extra notes or protocol guidance depending on the audience\u2014for example, the pP6 labsheets included extensive documentation. When making sheets for myself, I typically just include the tables, as I already know what to do. Don\u2019t forget to update your Box33 inventory file.</p>"},{"location":"planning/inventory_labsheets/#gel-and-zymo-labsheets","title":"Gel and Zymo Labsheets","text":"<p>PCR is just the beginning. After running a PCR, I usually follow up with a gel to assess success. If the results look good, I proceed with a Zymo cleanup. These steps are not dictated by the construction file\u2014other options exist. Gels are purely analytical and can be replaced by dye-binding assays or other quantification methods. Similarly, alternative DNA purification methods exist besides Zymo columns.</p> <p>Our next labsheets will document gel runs and Zymo cleanups. These are straightforward:</p> <ul> <li> <p>Each PCR product gets one row in the gel sheet and one in the Zymo sheet.</p> </li> <li> <p>On the gel sheet, list the expected DNA sizes.</p> </li> </ul> <pre><code>reaction    size    product\nAf          1989    pcrAf\nB72         14055   back72\n</code></pre> <p>For the Zymo sheet, you\u2019ll record each cleaned-up product and assign a tube label and inventory destination. These go into 1.5 mL tubes, with both a top and side label.</p> <pre><code>reaction    label   side_label     elution_volume  construct   destination\nAf          zAf     zAF pcrAf      25 uL           pcrAF       Box33/C1\nb72         zB72    zB72 back72    25 uL           back72      Box33/C2\n</code></pre>"},{"location":"planning/inventory_labsheets/#assembly-labsheets","title":"Assembly Labsheets","text":"<p>Assembly labsheets (Gibson or Golden Gate) include:</p> <ul> <li>Sources</li> <li>Reactions</li> <li>Program</li> </ul> <p>Sources consist of cleaned-up PCR products (Zymo samples) and any Gblocks or synthetic plasmids that go directly into the assembly.</p> <p>For lycopene33, we plan two Golden Gate reactions that can be performed in parallel:</p> <pre><code>GoldenGate  pTpDXS   back72   BsaI   ggTp\nGoldenGate  pcrAf    back72   BsaI   ggAf\n</code></pre> <p>Sources for these assemblies:</p> <pre><code>label     side-label      construct   clone   concentration   location\nzAf       zAF pcrAf       pcrAF       -       zymo            Box33/C1\nzB72      zB72 back72     back72      -       zymo            Box33/C2\npTpDXS    pTpDXS          pTpDXS      -       miniprep        Box33/B3\n</code></pre> <p>Golden Gate reactions use the <code>main/GG1</code> thermocycler program:</p> <pre><code>program: main/GG1\n</code></pre>"},{"location":"planning/inventory_labsheets/#transformation-picking-miniprepping-and-sequencing-labsheets","title":"Transformation, Picking, Miniprepping, and Sequencing Labsheets","text":"<p>These next steps happen on a per-sample basis. For lycopene33, we have 2 assembly reactions, so we\u2019ll:</p> <ul> <li> <p>Transform each assembly.</p> </li> <li> <p>Pick 4 colonies from each.</p> </li> <li> <p>Miniprep all resulting colonies.</p> </li> </ul> <p>Sequencing plans are context-dependent. If the modified plasmid region is under 800 bp, a single Sanger read may cover the entire region. To prepare, identify existing oligos that can sequence through your region of interest. You may need to order new primers if none exist.</p> <p>In the TP.RC system, each part is flanked by unique linker sequences, which provide good priming sites for sequencing. Sequencing read quality typically becomes reliable ~50 bp downstream of the primer\u2019s 3\u2032 end\u2014plan primer locations accordingly.</p> <p>You may need multiple reads to cover the entire region. Consider:</p> <ul> <li> <p>Function matters: If your construct is functionally confirmed, you may tolerate silent mutations.</p> </li> <li> <p>Read efficiency: A partial but perfect read may be enough for confidence.</p> </li> <li> <p>Cost: If more than 3 reads are required, it may be cheaper to sequence the full plasmid instead of using multiple cycle sequencing reactions.</p> </li> </ul>"},{"location":"planning/inventory_labsheets/#assay-labsheets","title":"Assay Labsheets","text":"<p>Until now, we\u2019ve focused only on labsheets for the fabrication phase. Eventually, you\u2019ll also perform assays to determine whether your DNA constructs are functional. Assay design is highly experiment-specific.</p> <p>For lycopene, visual inspection (e.g., colony redness) can be informative. You might also run an acetone extraction and measure color intensity using a spectrophotometer. There\u2019s no standard format for an assay labsheet, but it should clearly outline the protocol steps, including:</p> <ul> <li> <p>Required materials and equipment</p> </li> <li> <p>Measurement procedure</p> </li> <li> <p>Data to be recorded</p> </li> </ul> <p>Be sure to include positive and negative controls:</p> <ul> <li> <p>For optimization, wild-type (unmodified) cells make a good negative control.</p> </li> <li> <p>A prototype plasmid (e.g., pLYC72) serves as a strong positive control.</p> </li> </ul> <p>These controls help you compare your new designs directly against known standards.</p> <p>Also consider replicates:</p> <ul> <li> <p>Technical replicates: Repeat the measurement from the same culture to estimate measurement error (e.g., split one culture into multiple wells).</p> </li> <li> <p>Biological replicates: Pick multiple clones from a transformation plate. These may differ due to mutation or background plasmid, so expect variability.</p> </li> </ul> <p>Standard deviation from technical replicates reflects measurement noise. However, if biological replicates yield similar results, that provides strong support for a consistent and intended phenotype.</p> <p>By now, you\u2019ve planned your experimental workflow from design through fabrication and into functional testing. Your inventory and labsheets are not just planning tools\u2014they are your lab notebook. As experiments unfold, update them directly with any deviations. Six months from now, when questions arise, this is where you\u2019ll look to recall exactly what was done, which samples were used, and how things were carried out. Keep them clear, complete, and current to ensure your work remains reproducible and understandable well into the future.</p>"},{"location":"planning/oligo_design/","title":"Choosing a Fabrication Strategy","text":"<p>Once you've finalized your RC part design (e.g., RBS.CDS), it's time to decide how you'll turn that design into actual DNA. This section walks you through the decision process for choosing a fabrication strategy and explains how to encode that strategy in a Construction File (CF).</p>"},{"location":"planning/oligo_design/#step-1-organize-your-source-sequences","title":"\ud83e\uddec Step 1: Organize Your Source SequencesTpDXS RC Part","text":"<p>Before starting oligo design, ensure your GenBank files are saved and annotated. These should live in the <code>Maps/</code> folder of your GitHub repo.</p> <p>For the Lycopene33 example, we\u2019ll focus on an RC part derived from the dxs ortholog of:</p> <p>Trueperella pyogenes strain TP1 GenBank: CP033902.1 Coordinates: 656655\u2013658523 NCBI Link</p> <p>You\u2019ve already discussed this sequence, selected a suitable RBS, and formatted it as a standardized RC part following TP.RC conventions. A visual reminder of the completed part is shown below:</p> <p>The corresponding DNA sequence files is included in the example Maps folder for reference.</p> <ul> <li>CP033902.seq: The raw sequence of the region of the Trueperella genome containing the dxs CDS and flanking sequences</li> <li>gTpDXS.seq: A GBlock encoding an RC (rbs.cds) part encoding the Trueperella sequence with restriction sites removed</li> <li>pTpDXS.seq: A clonal gene synthesis plasmid encoding the restriction site-free part</li> </ul>"},{"location":"planning/oligo_design/#step-2-choose-a-fabrication-strategy","title":"\ud83e\udded Step 2: Choose a Fabrication Strategy","text":"<p>There are three main fabrication routes based on the type of DNA product you'll use:</p>"},{"location":"planning/oligo_design/#summary-table","title":"\ud83d\udccc Summary Table","text":"Strategy DNA Input When to Use Gene Synthesis Clonal plasmid Long, complex sequences or many internal sites gBlocks dsDNA fragment Mid-sized parts, fast delivery, no template Oligo-Based PCR Short oligos You have a template and want to modify or amplify a region"},{"location":"planning/oligo_design/#oligo-based-cloning-from-genomic-dna","title":"Oligo-Based Cloning from Genomic DNA","text":"<p>If you have access to a genomic or plasmid DNA source for your gene, you can use oligo-directed PCR to amplify your RC part directly. This is fast and inexpensive, and works well for shorter parts that do not contain internal type IIS restriction sites.</p> <p>CF Example (PCR-based cloning with Golden Gate): <pre><code>PCR oTpDXSf oTpDXSr CP033902 pcrTp\nPCR GB5F GB5R pLYC72 back72\nGoldenGate pcrTp back72 BsaI ggTp\nTransform ggTp Mach1 Amp 37 pLYC76\n</code></pre> With these oligos: <pre><code>oligo oTpDXSf  ccataGGTCTCaTACTgtcatgctttcgatcagtgg\noligo oTpDXSr  cagttGGTCTCtAAGCcctataggcggccagctgtgc\noligo GB5F     ccataGGTCTCaGCTTTGATCGATTCAACCTCTGATCA\noligo GB5R     cagttGGTCTCtAGTACCTCTAAACACAACGACAACAG\n</code></pre></p> <p>\u26a0\ufe0f In this case, the TpDXS gene contains an internal BsaI site, so Golden Gate using the native sequence is not viable. You could remove the site using SOEing, but a cleaner solution is to use gene synthesis.</p>"},{"location":"planning/oligo_design/#gibson-assembly-from-gblocks","title":"Gibson Assembly from gBlocks","text":"<p>If your gene contains internal type IIS sites but is less than ~1.5 kb, a synthesized gBlock fragment can be used as input to Gibson assembly. This avoids issues with restriction sites and is faster than full clonal synthesis.</p> <p>CF Example (gBlock with Gibson): <pre><code>PCR YB5F YB5R pLYC72 yback72\nGibson gTpDXS yback72 ggTp\nTransform ggTp Mach1 Amp 37 pLYC76\n</code></pre> With these oligos: <pre><code>oligo YB5F  gcacagctggccgcctataggGCTTTGATCGATTCAACCTCTGATCA\noligo YB5R  ccactgatcgaaagcatgacAGTACCTCTAAACACAACGACAACAG\n</code></pre></p> <p>\u26a0\ufe0f This approach is not suitable for TpDXS, which is over 1.5 kb and exceeds the length limit for standard gBlock synthesis. While the internal BsaI site could be removed, the part is too long for this route.</p>"},{"location":"planning/oligo_design/#golden-gate-assembly-from-gene-synthesis","title":"Golden Gate Assembly from Gene Synthesis","text":"<p>If your gene is long, contains problematic restriction sites, or you want to future-proof it with clean, modular parts, clonal gene synthesis is the most robust option. Vendors deliver your sequence in a plasmid, which can be used directly in a Golden Gate reaction if the vector and backbone have compatible antibiotic markers. Note that if you want to do Gibson on this material, you will need to PCR it out to get a linear fragment without the rest of the plasmid backbone.</p> <p>CF Example (Gene synthesis with Golden Gate): <pre><code>PCR GB5F GB5R pLYC72 back72\nGoldenGate pTpDXS back72 BsaI ggTp\nTransform ggTp Mach1 Amp 37 pLYC76\n</code></pre> With these oligos: <pre><code>oligo GB5F ccataGGTCTCaGCTTTGATCGATTCAACCTCTGATCA\noligo GB5R cagttGGTCTCtAGTACCTCTAAACACAACGACAACAG\n</code></pre></p> <p>\u27a1\ufe0f This is the approach we selected for TpDXS in this tutorial. Since it contains an internal BsaI site, gene synthesis allows us to remove the site and reuse the part in future Golden Gate builds.</p>"},{"location":"planning/oligo_design/#fabrication-decision-tree","title":"Fabrication Decision Tree","text":"<pre><code>[Start]\n   |\n   |-- Is the DNA sequence available to you (e.g., genomic or plasmid)?\n   |      |-- Yes\n   |      |     |-- Does it contain internal BsaI/BsmBI sites?\n   |      |           |-- Yes --&gt; Use gene synthesis or gBlock\n   |      |           |-- No  --&gt; Use oligo-based PCR cloning\n   |      |\n   |      |-- No\n   |           |-- Is the part short (&lt;1.5 kb)?\n   |                  |-- Yes --&gt; Order gBlock\n   |                  |-- No  --&gt; Order gene synthesis\n</code></pre>"},{"location":"planning/oligo_design/#choosing-golden-gate-vs-gibson","title":"Choosing Golden Gate vs. Gibson","text":"<p>Your fabrication strategy will influence which assembly chemistry is most appropriate, but the final decision also depends on how many parts you're combining and how reusable you want them to be.</p>"},{"location":"planning/oligo_design/#use-golden-gate-when","title":"Use Golden Gate when:","text":"<ul> <li>You're swapping or inserting a single cassette like a TP or RC part</li> <li>You have compatible overhangs and modular templates</li> <li>You want to reuse parts across builds</li> </ul>"},{"location":"planning/oligo_design/#use-gibson-when","title":"Use Gibson when:","text":"<ul> <li>You're assembling multiple parts in a single reaction (e.g., multiple cassettes)</li> <li>You\u2019re using gBlocks or PCR fragments with custom homology</li> <li>You need flexibility in junction design</li> </ul> <p>\ud83d\udca1 Even if you're using Gibson now, always design parts to be Golden Gate\u2013ready by removing internal BsaI/BsmBI sites. This keeps your options open for future modular optimization.</p>"},{"location":"planning/oligo_design/#step-3-finalizing-your-project-files","title":"\ud83d\uddc2\ufe0f Step 3: Finalizing Your Project Files","text":"<p>Once your strategy is selected, be sure to collect and organize the following in your <code>Maps/</code> folder:</p> <ul> <li>Annotated GenBank files for precursor and product plasmids  </li> <li>Sequence files used in the design (e.g., gBlocks, source genomes)  </li> <li>Construction Files for each plasmid  </li> <li>A consolidated oligo list (e.g., <code>lycopene33 - Oligos.txt</code>)</li> </ul> <p>For the Lycopene33 example:</p> <ul> <li>2 Construction Files: <code>pLYC76</code> (synthesis) and <code>pLYC77</code> (PCR-based)</li> <li>2 final plasmid maps</li> <li>1 synthesized gene map (<code>pTpDXS.seq</code>)</li> <li>1 genomic region map from A. fischeri (<code>CP160629.seq</code>)</li> <li>4 oligos</li> </ul>"},{"location":"planning/project_ispA/","title":"Ortholog Scan Project \u2014 ispA","text":"<p>This capstone exercise guides you through designing and documenting a complete cloning project centered on ispA, a key enzyme in the isoprenoid biosynthesis pathway. You\u2019ll build an ortholog expression panel in the context of plasmid pLYC72. This gene presents more complexity than previous examples\u2014biochemical differences among orthologs can influence the outcome, making your selection and rationale especially meaningful.</p>"},{"location":"planning/project_ispA/#project-overview","title":"Project Overview","text":"<p>Your goal is to follow the full cloning pipeline we've developed throughout the tutorial series. You\u2019ll prepare a complete project folder for an experiment called <code>lycopene34</code>, which includes design files, construction plans, lab documents, and a short writeup.</p> <p>Although this exercise is built around ispA, the tutorial doubles as a model for how to present any cloning-based project. You\u2019re encouraged to customize or extend it depending on your interests, as long as the documentation standards are met.</p>"},{"location":"planning/project_ispA/#key-elements","title":"Key Elements","text":"<p>Your <code>lycopene34</code> project folder should include:</p> <ul> <li>Construction File(s) covering all planned builds</li> <li>Inventory, Oligos, and LabSheets</li> <li>Annotated GenBank files</li> <li>A <code>Docs/</code> folder with a written summary (as a <code>README.md</code>, Word doc, or PDF)</li> </ul> <p>The summary should explain:</p> <ul> <li>What the project is about</li> <li>The biology and context of the ispA gene</li> <li>Why you chose your orthologs (biochemical rationale, functional hypotheses, etc.)</li> <li>Any literature you consulted</li> </ul> <p>Use this document to guide the reader through the logic and goals of your experiment.</p> <p>For a reference format, see the example Docs folder from the <code>lycopene33</code> project. The lycopene33 README offers only a minimal discussion of ortholog selection. A more thorough analysis will require digging into the biochemistry of ispA and understanding how functional diversity informs design.</p>"},{"location":"planning/project_ispA/#notes","title":"Notes","text":"<ul> <li>Tools like BLAST, Benchling, ApE, and C6-Tools are useful for ortholog selection and design.</li> <li>Use C6-Tools or CFS to simulate your Construction Files to catch errors.</li> <li>This project is your chance to demonstrate what you've learned\u2014how to plan and document a cloning experiment, how to design and simulate constructs, and how to connect biological rationale to your choices. Your submission should reflect a clear understanding of the experimental goal, how your design supports it, and the biochemical implications of your choices.</li> </ul>"},{"location":"planning/project_ispA/#submission","title":"Submission","text":"<p>Submit a zipped copy of your completed <code>lycopene34</code> project folder.</p> <p>All students, regardless of project topic, are expected to document their projects in this format. The writeup should be appropriate to your specific experiment and guide the reader through your design and decisions.</p>"},{"location":"planning/project_setup/","title":"Project Setup and Nomenclature","text":"<p>This guide outlines conventions for setting up and organizing a synthetic biology project. These conventions are intended to support clarity, reproducibility, and collaboration. The approach described here emphasizes a consistent, pre-planned structure for working with DNA and experiment metadata. While documentation systems vary across labs, any good system should have a clear scope, support structured naming, and promote project-wide consistency over time.</p>"},{"location":"planning/project_setup/#defining-a-project","title":"Defining a Project","text":"<p>A project is an independent, long-term research effort with a clear scientific or engineering goal. Each project should have a unique, single-token name (e.g., <code>lycopene</code>) that will be used consistently across documentation, file structures, plasmid names, and experiment records. Avoid informal or overlapping nicknames to ensure records remain searchable and unambiguous over time.</p> <p>Projects are generally defined by scope: they may focus on a distinct application, scientific question, or system. They are often aligned with specific funding sources, collaborations, or distinct groups of people. For example:</p> <p>Project: <code>lycopene</code> Goal: Maximize lycopene production in E. coli by tuning the metabolic pathway.</p> <p>This is distinct from other efforts that may be running in parallel, such as:</p> <p>Project: <code>stickbug</code> Goal: Build a surface-display system in Bacillus subtilis to test adhesion strength on plastic, glass, and food packaging materials.</p> <p>Although these projects may share some techniques or tools, they target different applications and will generate separate materials and documentation.</p>"},{"location":"planning/project_setup/#defining-an-experiment","title":"Defining an Experiment","text":"<p>An experiment is a specific, bounded effort to test or implement one part of a larger project. Experiments are sequential and named using the project name followed by a number \u2014 for example, <code>lycopene33</code> is the 33rd experiment within the <code>lycopene</code> project.</p> <p>Experiments are how you break a big project into manageable, testable chunks. A good experiment name reflects the sequence of work, not its content. Content details go inside the folder and issue description. Example:</p> <p>Experiment: <code>lycopene33</code> Subgoal: Find the optimum promoter strength for controlling the dxs gene in the lycopene-producing plasmid.</p> <p>This experiment supports the overarching goal of the <code>lycopene</code> project but is only one step in a longer sequence. Other experiments might focus on cloning alternative enzymes, testing carbon sources, or optimizing growth conditions.</p> <p>This structured naming enables automation, versioning, and filtering. It also helps collaborators and future users understand how each piece fits into the broader effort.</p>"},{"location":"planning/project_setup/#design-names-vs-physical-samples","title":"Design Names vs. Physical Samples","text":"<p>In this tutorial, a name like <code>pLYC2</code> refers to a designed DNA sequence\u2014a digital object defined in a GenBank file or construction plan. That sequence is the reference point. It may not yet exist, it may exist in multiple forms, or it may prove unstable and never assemble successfully. Regardless, the name refers to the intended design, not a physical tube.</p> <p>Historically, names like pBR322 typically referred to a physical plasmid that had been isolated and shared\u2014a specific lineage of DNA passed between labs. Its exact sequence might be assumed but rarely directly confirmed. Today, with reliable full-plasmid sequencing and gene synthesis, we don\u2019t need to rely on inherited samples; we can recreate constructs directly from sequence. That shifts the baseline: names refer to sequence-defined designs, and physical instances are treated as separate, trackable entities.</p> <p>In this system:</p> <ul> <li>A construct is the designed DNA sequence.</li> <li>A clone is a single isolate that may (or may not) match that design.</li> <li>A sample is a physical preparation or culture of a clone.</li> </ul> <p>Later tutorials will explain how to label and track clones and samples. For now, the key principle is that your naming starts from a digital sequence object. That foundation supports clearer documentation, reproducibility, and experimental interpretation\u2014especially when things don\u2019t go as planned.</p>"},{"location":"planning/project_setup/#plasmid-naming-conventions","title":"Plasmid Naming Conventions","text":"<p>Plasmids are named using a lowercase \u201cp\u201d and a project-specific prefix. Use sequential numbers:</p> <ul> <li>Format: <code>pLYC1</code>, <code>pLYC2</code>, ...</li> <li>Keep the length 4-6 characters to balance uniqueness with the ability to write it on a tube cap</li> <li>Do not use descriptive names like <code>StrongPromoterGGPPS-pLYC22</code>.</li> </ul> <p>Descriptive names, while initially helpful, tend to grow unwieldy and ambiguous. For example, what begins as 'StrongPromoterGGPPS-pLYC22' may later include more variables, making names long and inconsistent. Short names like pLYC22 can be reliably printed on tubes and cross-referenced with detailed annotations in maps and documentation.</p>"},{"location":"planning/project_setup/#naming-synthetic-dnas","title":"Naming Synthetic DNAs","text":"<p>Synthetic DNAs include oligos, gBlocks, and synthesized plasmids. Like plasmids, naming consistency here is vital. Prefixes help clarify type and origin at a glance, which is especially useful when scanning inventory files or browsing digital folders.</p> <ul> <li>Oligos: Use <code>o&lt;PROJECT&gt;</code> prefix, e.g., <code>oLYC1</code>, <code>oLYC2</code></li> <li>GBlocks: Use <code>g&lt;PROJECT&gt;</code> prefix, e.g., <code>gLYC1</code></li> <li>Clonal Plasmids from synthesis: Follow plasmid naming conventions</li> <li>Oligo Pools: Optional <code>l&lt;PROJECT&gt;</code> prefix, e.g., <code>lLYC1</code></li> </ul>"},{"location":"planning/project_setup/#numbers-are-cheap-collisions-are-expensive","title":"Numbers are Cheap; Collisions are Expensive","text":"<p>When you\u2019re designing a project, mistakes and revisions are inevitable. You might design an oligo or gBlock, give it a name, and even order it \u2014 only to later realize it needs to change. That\u2019s fine. But once a name has been used in any persistent context \u2014 committed to GitHub, sent to synthesis, or written on a tube \u2014 you should treat it as permanent.</p> <p>Don\u2019t overwrite old names with new sequences or meanings. For example, if you redesign an oligo originally labeled <code>oBYC14</code> but keep the same name, it\u2019s easy to forget which version is in the freezer \u2014 or worse, trust the wrong sequence in simulation or documentation. This is how errors propagate.</p> <p>Collisions aren\u2019t limited to oligos. The same principle applies to files, plasmids, gBlocks, and strain names. Once something has a name in the repo, that name should refer to exactly one version of a real thing.</p> <p>So don\u2019t recycle. If you revise a design, just increment to the next number. It\u2019s cheap to make <code>oBYC15</code>. It\u2019s expensive to spend hours debugging a mix-up caused by duplicate names.</p> <p>Unique names for unique things \u2014 always.</p>"},{"location":"planning/project_setup/#folder-structure","title":"Folder Structure","text":"<p>On your computer, organize files by project and subfolders:</p> <p>To see a concrete example of this structure in practice, visit the example project directory in the course GitHub repository: cloning-tutorials/examples/lycopene </p> <p>All data should reside in a structured directory named exactly after the project. This top-level folder will house all planning documents, experimental results, and inventories. <pre><code>lycopene/\n\u251c\u2500\u2500 Docs/\n\u251c\u2500\u2500 Experiments/\n\u2514\u2500\u2500 Inventory/\n</code></pre></p> <ul> <li>Docs: Emails, publication notes, project overview</li> <li>Experiments: Each experiment has its own folder (<code>lycopene1</code>, <code>lycopene2</code>, ...)</li> <li>Inventory: Track all physical materials, organized by freezer (Minus20, Minus80, Fridge)</li> </ul> <p>In the <code>lycopene</code> example:</p> <ul> <li> <p><code>Docs/README.md</code> could contain a summary of the project goal or a link to relevant papers.</p> </li> <li> <p><code>Experiments/lycopene33/</code> holds folders like <code>Construction</code> and <code>Maps</code> where you'll see placeholders for your design and genbank files.</p> </li> </ul> <p>Example Experiment folder structure: <pre><code>lycopene33/\n\u251c\u2500\u2500 Construction/\n\u251c\u2500\u2500 Maps/\n\u251c\u2500\u2500 Sequencing/\n\u251c\u2500\u2500 Assays/\n\u2514\u2500\u2500 LabSheets/\n</code></pre></p> <p>This layout mirrors the workflow of a synthetic biology experiment\u2014from planning (Construction), to execution (Maps, Sequencing), to analysis (Assays), and finally lab-specific logistics (LabSheets).</p>"},{"location":"planning/project_setup/#file-types-and-conventions","title":"File Types and Conventions","text":"<ul> <li>Construction files: <code>.txt</code></li> <li>DNA sequences: TSV format (IDT-style) or annotated Genbank files (<code>.seq</code>, <code>.gb</code>, <code>.ape</code>)</li> <li>Oligos under 60bp: 25nm scale; 60+bp: 100nm</li> <li>All naming and file conventions should match what is physically labeled in the lab.</li> </ul> <p>Proper formats reduce ordering errors, improve readability, and allow automated tools to validate or simulate designs. Genbank files should include full annotations for every promoter, CDS, terminator, origin, and sequencing primer site. TSV files should use standard fields as required by synthesis companies (e.g., IDT). </p> <p>Each sequence should only exist once in the repository. Avoid duplicating the same DNA sequence across multiple files or folders. Duplicates can easily drift apart \u2014 differing in name, annotation, or actual sequence \u2014 which leads to confusion and possible experimental error. Instead, reference the original file consistently throughout Construction Files and documentation.</p> <p>Following this structure allows for efficient collaboration, easier debugging, and better long-term data management.</p>"},{"location":"planning/project_setup/#optional-github-integration","title":"Optional: GitHub Integration","text":""},{"location":"planning/project_setup/#who-should-use-github","title":"Who Should Use GitHub","text":"<p>If you are a BioE 140L student, you can ignore this entire GitHub section \u2014 it\u2019s optional for your course. You will work locally on your computer and submit a zipped version of your project folder at the end of the term.</p> <p>For all other users (iGEM project leads, master's students, PhD students, or postdocs), you are expected to use GitHub to manage your project. You do not need to create a repository yourself \u2014 your instructor will create one for you using an academic GitHub account and invite you as a collaborator. This ensures the project is properly managed and free under academic terms.</p>"},{"location":"planning/project_setup/#what-belongs-in-the-repo","title":"What Belongs in the Repo","text":"<p>Your GitHub repository is not your scratchpad. Tools like Benchling, ApE, or Google Drive are perfect for developing ideas, storing fragments, and iterating freely \u2014 and many institutions require you to retain all such records. That creative mess is essential, but it doesn\u2019t belong in the repo.</p> <p>The repository is where your clean, intentional work goes. It should contain the design files for constructs you intend to order or assemble, the protocols you plan to follow, and the experiments you are committing to carry out. Committing these to GitHub is the first step in making your work real \u2014 it marks your intention and becomes the basis for syncing with what actually happens in the lab.</p>"},{"location":"planning/project_setup/#working-with-github","title":"Working with GitHub","text":"<p>Once your account is added to the repo, you\u2019ll be able to:</p> <ul> <li> <p>View your project from any browser</p> </li> <li> <p>Clone the repo to your computer</p> </li> <li> <p>Add new files, make edits, and sync them back to GitHub</p> </li> </ul>"},{"location":"planning/project_setup/#getting-started-with-github-desktop","title":"Getting Started with GitHub Desktop","text":"<p>If you are unfamiliar with GitHub, you do not need to learn command-line Git. Instead, use GitHub Desktop, a free graphical application.</p> <p>To get started:</p> <ol> <li> <p>Install GitHub Desktop.</p> </li> <li> <p>Visit your repository page (you will receive a link, click it when you see it because they expire).</p> </li> <li> <p>Click the green \"Code\" button and select \"Open with GitHub Desktop\".</p> </li> <li> <p>Follow prompts to clone the repo to your computer.</p> </li> <li> <p>Make edits as usual, then use the GitHub Desktop interface to commit and push changes.</p> </li> </ol> <p></p> <p>To learn the essential GitHub vocabulary and actions, refer to this focused introduction: GitHub: Hello World Guide It explains key concepts like \u201ccloning a repository,\u201d \u201ccommitting changes,\u201d and \u201cpushing updates.\u201d There are also many video tutorials online, and tools like ChatGPT can help if you get stuck.</p> <p>This tutorial site is itself hosted in a GitHub repository. You can view the course repo here: cloning-tutorials GitHub repo And the example project directory: examples/</p>"},{"location":"planning/project_setup/#using-github-issues-to-track-experiments","title":"Using GitHub Issues to Track Experiments","text":"<p>Each experiment (e.g., <code>lycopene33</code>) should have a corresponding GitHub Issue in your repository, which you can find by clicking the \u201cIssues\u201d tab at the top of the repo page (see screenshot above).</p> <ul> <li> <p>Add dated updates describing what you did in lab on a given day, including links to data files or images, and what you observed</p> </li> <li> <p>Upload photos of plates, gels, or cultures</p> </li> <li> <p>Record observations, commentary, and troubleshooting</p> </li> <li> <p>Discuss results or link to analysis charts</p> </li> </ul> <p>The first block in each issue should clearly explain the goal of the experiment. The writing should assume that another student may be reading it later, so:</p> <ul> <li> <p>Use proper names (e.g., <code>pLYC33</code> instead of \u201cthe plasmid\u201d)</p> </li> <li> <p>Avoid internal shorthand that wouldn\u2019t be clear to others</p> </li> <li> <p>Be specific about which clone or construct is being used</p> </li> </ul> <p>Although your repo may be private now, it may be made public in the future. Write with that audience in mind.</p> <p>An example issue for <code>lycopene33</code> is provided in the cloning repo:  lycopene33 issue</p>"},{"location":"planning/sequence_analysis/","title":"Sequence Retrieval and Analysis","text":"<p>In this tutorial, you will learn how to retrieve the sequence of a gene from another organism and prepare it for cloning. Our goal is to perform an ortholog scan of the dxs gene as part of the Lycopene33 optimization experiment. We will search for alternative versions of dxs from different species, extract their RBS.CDS sequences, and prepare those sequences to build RC parts that match the TP.RC part architecture.</p> <p>The process includes:</p> <ul> <li> <p>Identifying orthologs via BLAST</p> </li> <li> <p>Extracting upstream and downstream flanking sequences</p> </li> <li> <p>Verifying gene boundaries</p> </li> <li> <p>Preparing the sequence for cloning</p> </li> </ul>"},{"location":"planning/sequence_analysis/#step-by-step-workflow","title":"Step-by-Step Workflow","text":""},{"location":"planning/sequence_analysis/#1-identify-your-starting-sequence","title":"1. Identify Your Starting Sequence","text":"<p>Begin with a known working version of the dxs gene from E. coli MG1655. You\u2019ll need the CDS (coding DNA sequence), and ideally the 200 bp upstream (pre) and downstream (post) flanking sequences. These will help identify the ribosome binding site and define PCR primers if you\u2019re cloning from genomic DNA.</p>"},{"location":"planning/sequence_analysis/#2-translate-the-cds-to-protein","title":"2. Translate the CDS to Protein","text":"<p>Using a sequence editor such as ApE, paste in the dxs CDS and use the \"Translate\" function to convert it to its corresponding amino acid sequence.</p>"},{"location":"planning/sequence_analysis/#3-run-a-blastp-search","title":"3. Run a BLASTP Search","text":"<p>BLASTP is a search tool that compares your protein sequence to a vast database of known protein sequences maintained by NCBI. Nearly all public genomic and protein data are included in this database, and BLASTP has indexed these sequences in a way that allows it to quickly find similar entries.</p> <p>Go to BLASTP and:</p> <ul> <li>Paste in your protein sequence (e.g., the translated dxs from E. coli).</li> <li>Decide how broadly to search. You have several options:</li> <li>Option 1: Leave the organism box blank to search across all known species. This is useful for broad ortholog discovery.</li> <li>Option 2: Enter a species, genus, or higher-level taxon (e.g., Arthrobacter, Firmicutes) to limit your search.</li> <li>Option 3: If you're cloning from a specific DNA source (e.g., genomic DNA in your freezer), constrain your search to that species.</li> <li>Option 4: If you're synthesizing all sequences, a broad search is fine\u2014you don\u2019t need to limit to organisms with accessible DNA.</li> <li>Click BLAST to begin the search.</li> </ul> <p>When results appear, look for hits with the correct annotation (e.g., \u201c1-deoxy-D-xylulose-5-phosphate synthase\u201d). If the organism name seems unfamiliar, check whether it\u2019s a renamed or synonymous species\u2014taxonomy often evolves over time.</p>"},{"location":"planning/sequence_analysis/#4-select-a-divergent-protein-sequence","title":"4. Select a Divergent Protein Sequence","text":"<p>Sequence identity is a percentage score indicating how similar two proteins are based on their aligned amino acid sequences.</p> <p>Review the BLASTP results and avoid picking a 100% identity hit \u2014 those are usually redundant and uninformative. Instead, choose a result with high but not identical similarity (typically in the 70\u201395% identity range). Historically, a sequence identity of 95% or higher has been considered \"substantially identical\" in legal and patent contexts, potentially affecting novelty. Meanwhile, sequences around 70% identity are often functionally similar, though they may differ in properties like substrate specificity.</p> <p>In choosing which hits to pursue:</p> <ul> <li> <p>Avoid very high identity hits unless you're testing subtle variations.</p> </li> <li> <p>Prefer hits that retain the correct annotation (e.g., \u201c1-deoxy-D-xylulose-5-phosphate synthase\u201d), even at lower identities. These may be identified by more sophisticated gene prediction tools than BLAST alone.</p> </li> <li> <p>Consider building a phylogenetic tree to select hits from distinct clades. This helps you sample evolutionary space broadly and then refine with follow-up experiments.</p> </li> <li> <p>Consider using newer bioinformatics or AI tools.  This is a rapidly developing research topic.</p> </li> </ul> <p>Ultimately, the performance of orthologs in a heterologous host (like E. coli) is influenced by many factors \u2014 expression level, folding, temperature, pH, codon usage, RNA structure, and unknown interactions. Empirically testing a diverse panel is often the best approach.</p>"},{"location":"planning/sequence_analysis/#5-use-tblastn-to-find-the-dna","title":"5. Use TBLASTN to Find the DNA","text":"<p>To proceed with cloning or part design, you\u2019ll need the actual DNA sequence of the ortholog \u2014 including the untranslated upstream region if you're capturing the native ribosome binding site. While one option is to reverse-translate the protein sequence and design an RBS using a prediction algorithm, a more reliable strategy \u2014 especially when transferring genes from one prokaryote to another \u2014 is to use the native DNA sequence. This native sequence has already been shaped by evolutionary selection to function in its original context and is more likely to express successfully in E. coli than a synthetic design. Additionally, if you plan to amplify the sequence from genomic DNA or an existing plasmid, you must use the actual sequence so that your primers anneal correctly. </p> <p>In some cases, the protein\u2019s NCBI entry may include a direct link to the gene or CDS that encodes it. If not, you can find the encoding DNA using a second BLAST search \u2014 specifically, TBLASTN \u2014 that takes your protein query and returns matching DNA hits.</p> <p>Go to TBLASTN and:</p> <ul> <li> <p>Paste in the protein sequence from the previous step.</p> </li> <li> <p>Run the search.</p> </li> </ul> <p>Look for a match with near 100% identity \u2014 this ensures you\u2019re retrieving the exact DNA sequence that encodes your selected protein, not just a similar ortholog. Unlike the initial BLASTP search, where sequence variation was valuable, here we want the specific nucleotide sequence that produced the protein you selected, since this is the actual DNA you\u2019ll need for synthesis or PCR. Click the link for the matching hit, then follow the GenBank link to access the full nucleotide record.</p>"},{"location":"planning/sequence_analysis/#6-extend-the-genomic-region","title":"6. Extend the Genomic Region","text":"<p>In the GenBank page, adjust the displayed sequence region to obtain 5' and 3' UTR:</p> <ul> <li> <p>Extend ~200 bp upstream and ~200 bp downstream from the gene (CDS) hit.</p> </li> <li> <p>Use the \u201cChange region shown\u201d box to set the coordinates.</p> </li> </ul> <p>Click Update View, then download the GenBank file using Send to &gt; File &gt; GenBank (full record).</p>"},{"location":"planning/sequence_analysis/#7-confirm-the-gene-boundaries","title":"7. Confirm the Gene Boundaries","text":"<ul> <li> <p>Ensure the CDS starts with ATG, GTG, or TTG.</p> </li> <li> <p>Confirm it ends with TAA, TAG, or TGA.</p> </li> <li> <p>Check that the orf is in the forward direction and not reverse complemented</p> </li> <li> <p>Translate the orf and confirm it matches your expectations.</p> </li> </ul> <p>Extract the pre, CDS, and post regions and paste them into your working spreadsheet.</p> <p>Also record the GenBank accession number and source organism.</p> <p>Extract the pre, CDS, and post regions and paste them into your working spreadsheet. Also record the GenBank accession number and source organism.</p> <p>We recommend organizing this data in a spreadsheet, such as Google Sheets, similar to the format shown in the video. The sheet should include columns for:</p> <ul> <li> <p>Organism name</p> </li> <li> <p>Whether an ortholog is present</p> </li> <li> <p>The 200 bp pre (upstream) region</p> </li> <li> <p>The CDS</p> </li> <li> <p>The 200 bp post (downstream) region</p> </li> <li> <p>Accession number</p> </li> </ul> <p>Here is an example of what the spreadsheet might look like:</p> <pre><code>organism    dxs?    pre200  CDS post200 accession\nE. coli MG1655  yes ttggtcattaag    atgagt  tccctactcc  CP032667.1\n</code></pre> <p>This spreadsheet can live outside of your GitHub repo (e.g., in Google Drive). While tools like Benchling or C6-tools may be used for sequence design and analysis, the essential outputs \u2014 Construction Files, LabSheets, and final sequence files \u2014 must be included in the GitHub repository. Any other design or analysis materials may be linked from your GitHub issues or stored separately, but we recommend downloading and archiving them in your <code>Docs/</code> folder for long-term preservation.</p> <p>For BioE 140L students: download your final Google Sheet when done and include it in your project folder as a backup.</p>"},{"location":"planning/sequence_analysis/#video-walkthrough","title":"Video Walkthrough","text":""},{"location":"planning/sequence_analysis/#from-ortholog-sequence-to-rc-part","title":"From Ortholog Sequence to RC Part","text":"<p>Once you\u2019ve retrieved the ortholog sequence and its surrounding context (pre200, CDS, and post200), the next step is to construct an RC part that conforms to the TP.RC format used throughout this tutorial.</p> <p>Here\u2019s how to do it:</p>"},{"location":"planning/sequence_analysis/#1-identify-the-rbs-region","title":"1. Identify the RBS Region","text":"<p>The ribosome binding site (RBS) is generally found within the final 30 bp of the pre200 region. It usually appears 8\u201315 bp upstream of the start codon (ATG, GTG, or TTG) and resembles a Shine-Dalgarno\u2013like sequence such as <code>AGGAGG</code>. You'll want to include this entire RBS and its precise spacing to the start codon in your part.</p>"},{"location":"planning/sequence_analysis/#2-choose-a-5-linker","title":"2. Choose a 5\u2032 Linker","text":"<p>The linker is a 20 bp sequence upstream of the RBS that will serve as the forward PCR priming site and provide standard flanking homology. Search within the pre200 region, typically between \u2212100 and \u221215 relative to the start codon, for a well-behaved primer binding sequence (good GC content, no hairpins, balanced melting temp, etc.). This will become your 5\u2032 linker. The RBS is then defined as the sequence between the 5\u2032 linker and the start codon.</p>"},{"location":"planning/sequence_analysis/#3-choose-a-3-linker","title":"3. Choose a 3\u2032 Linker","text":"<p>For the 3\u2032 linker, look for a 20 bp sequence downstream of the CDS within the post200 region. This should lie beyond the stop codon and meet similar criteria for a good primer binding site.</p>"},{"location":"planning/sequence_analysis/#4-build-the-rc-part","title":"4. Build the RC Part","text":"<p>Once you\u2019ve identified:</p> <p>Once you\u2019ve defined your 5\u2032 linker, RBS, CDS, and 3\u2032 linker, you now have everything needed to construct an RC part compatible with the TP.RC system.</p> <p>The design and construction process is the same as described in the Design Principles tutorial. There, you practiced building an RC part using known sequences and assembling them into a standard format. In this case, you\u2019ll apply that same process using the ortholog data you\u2019ve just collected.</p> <p>To recap, your RC part will contain:</p> <ul> <li> <p>A 5\u2032 BsaI recognition site followed by a sticky end (<code>TACT</code>)</p> </li> <li> <p>The 5\u2032 linker sequence</p> </li> <li> <p>The RBS sequence</p> </li> <li> <p>The full CDS (starting with ATG/GTG/TTG, ending in a stop codon)</p> </li> <li> <p>The 3\u2032 linker sequence</p> </li> <li> <p>A 3\u2032 sticky end (<code>GCTT</code>) followed by the reverse BsaI recognition site</p> </li> </ul> <p>Make sure the full sequence has no internal BsaI sites. This is critical for Golden Gate assembly, as internal BsaI sites will cause unwanted cuts. If you're ordering a synthetic fragment (e.g., GBlock or clonal synthesis), you can eliminate all internal BsaI, BsmBI, and other Type IIS or common restriction sites (e.g., BglBrick, BioBrick) via silent mutations. C6-Tools include a <code>remove_sites</code> function to automate this cleanup.</p> <p>If you're cloning from genomic DNA, internal BsaI sites must be removed during cloning. A single site can often be mutated using SOEing or Gibson assembly with an altered primer. But if multiple sites are present, synthesis is usually easier and more reliable. Alternatively, you can choose orthologs that don\u2019t contain problematic sites to avoid complications altogether.</p> <p>You can create this RC part in multiple ways:</p> <ul> <li> <p>Synthetic gene block (GBlock) ordered with BsaI sites and tails</p> </li> <li> <p>PCR from genomic or plasmid DNA using primers that extend the linkers and BsaI sites and 5' tails</p> </li> <li> <p>Clonal synthesis through a gene synthesis vendor</p> </li> </ul> <p>Refer back to the RC part design quiz in the previous tutorial if you need a refresher on format logic. Once built, these RC parts can be mixed and matched in your construct to evaluate ortholog performance.</p>"},{"location":"tools/feature_extractor/","title":"GenBank/APE Feature Extractor","text":"<p>This tool allows you to drag and drop  <code>.seq</code>, <code>.gb</code>, <code>.gcc</code>, <code>.str</code>, <code>.genbank</code>, or <code>.ape</code> files and extract features (name, color, sequence) into the ApE-compatible TSV format.</p> Feature Extractor Upload a File Drop your file here or click to upload Add a Feature Manually Name: Sequence: Type: Color: Add Feature Collected Features Download Features Save to Library"},{"location":"tools/feature_manager/","title":"Feature Manager","text":"<p>This tool manages your locally stored features extracted from GenBank/APE files or added manually. All features are stored in your browser's localStorage.</p> Saved Features Delete All Features Download Features"},{"location":"tools/inventory_manager/","title":"Inventory Manager Tool","text":"<p>This tool lets you upload inventory files in TSV or CSV format and search for stored samples based on metadata such as construct, label, and concentration.</p> <p>Upload Inventory Folder: </p> <p>Or Upload Individual Files: </p> <p> Search Clear</p>"},{"location":"tools/inventory_manager/#instructions","title":"Instructions","text":"<ol> <li>Click Choose Folder to upload <code>.csv</code> or <code>.tsv</code> files that describe inventory boxes.</li> <li>Each file should contain grids labeled with headers such as <code>&gt;construct</code>, <code>&gt;label</code>, <code>&gt;concentration</code>, and others.</li> <li>Data is organized into a 2D plate format (e.g. rows A\u2013J and numbered columns).</li> <li>After loading, use the form to search for samples by construct and any other fields.</li> <li>Search results will show matching samples, including their box and well positions.</li> </ol> <p>This tool runs in your browser and works offline. Inventory data is stored locally and can be cleared with the Clear button.</p>"},{"location":"tools/oligo_finder/","title":"Oligo Finder Tool","text":"<p>This tool allows you to upload a directory of oligonucleotide files and enter a DNA sequence to identify matching oligos that will anneal to the template.</p> <p> </p> <p> Analyze Clear</p>"},{"location":"tools/oligo_finder/#instructions","title":"Instructions","text":"<ol> <li>Click Choose Folder to upload <code>.txt</code> or <code>.tsv</code> files containing your oligo list.</li> <li>You may select a single file, a folder containing files, or a folder with nested folders containing files.</li> <li>Each file should contain lines with <code>name&lt;TAB&gt;sequence</code>, where:</li> <li><code>name</code> includes only letters, numbers, underscores, dashes, or dots.</li> <li><code>sequence</code> includes valid IUPAC DNA codes (A, T, C, G, N, R, Y, etc.).</li> <li>Enter a target DNA sequence in the text box.</li> <li>Click Analyze to find oligos with 3\u2032 matches that anneal to your sequence.</li> <li> <p>Use Clear to reset the stored oligo data.</p> </li> <li> <p>\u26a0\ufe0f This tool only checks for forward strand matches. To check for reverse strand annealing, input the reverse complement of your target sequence.</p> </li> </ol> <p>This tool runs entirely in your browser and works offline. No data is sent over the internet. Extracted oligo data is saved in your browser's storage and will persist across sessions unless you clear it using the Clear button. \u26a0\ufe0f This tool only searches for oligos that anneal to the forward strand. To check the reverse strand, input the reverse complement of your target sequence.</p>"},{"location":"tools/supersimulator/","title":"Super Simulator","text":"<p>\\</p>"},{"location":"tools/supersimulator/#supersimulator","title":"SuperSimulator","text":"<p>This tool lets you simulate a molecular biology construction file (CF), view the result, and auto-annotate the final product.</p>"},{"location":"tools/supersimulator/#step-1-paste-your-construction-file","title":"Step 1: Paste Your Construction File","text":"<p>Simulate CF</p> <p></p>"},{"location":"tools/supersimulator/#step-2-auto-annotate-output","title":"Step 2: Auto-Annotate Output","text":"<p>Annotate and Simulate</p>"},{"location":"tools/tabular_simulator/","title":"Tabular Simulator","text":""},{"location":"tools/tabular_simulator/#tabular-simulator","title":"Tabular Simulator","text":"\ud83e\uddec Edit Your Construction File \ud83e\uddeb Injected Sequences Clear All Simulate"},{"location":"wetlab/assembly/","title":"Assembly","text":"<p>In molecular cloning, \u201cassembly\u201d refers to joining two or more DNA molecules together into one. Two of the most common methods are Golden Gate Assembly and Gibson Assembly\u2014together they cover nearly all modern cloning needs.</p>"},{"location":"wetlab/assembly/#assembly-methods-overview","title":"Assembly Methods Overview","text":"<p>Golden Gate Assembly uses a type IIS restriction enzyme (e.g., BsaI, BsmBI, BbsI) to cut DNA at defined locations and generate sticky ends. These are then joined by T4 DNA Ligase.</p> <p>Gibson Assembly uses an exonuclease to chew back DNA ends, allowing single-stranded overlaps to anneal. A polymerase fills in gaps and a ligase seals the nicks.</p> <p>Both methods:</p> <ul> <li>Are performed in a single tube (one-pot)</li> <li>Run in a thermocycler</li> <li>Require specific enzyme buffers and careful setup</li> </ul>"},{"location":"wetlab/assembly/#what-were-doing-here","title":"What We're Doing Here","text":"<p>In the pP6 experiment, we only have one DNA fragment: the linear PCR product from earlier. Our goal is to re-circularize it by joining its ends together using Golden Gate.</p> <p>This works because the PCR primers added BsaI recognition sites, which generate complementary sticky ends at each end of the linear product.</p>"},{"location":"wetlab/assembly/#golden-gate-diagram","title":"Golden Gate Diagram","text":"<p>Figure: Schematic of the pP6 assembly process. The plasmid pJ12 is first amplified by PCR using primers that introduce BsaI sites and overhangs. The resulting linear product is then re-circularized via Golden Gate Assembly. This is a special case of Golden Gate Assembly, also referred to as enzymatic inverse PCR (EIPCR), where the input and output are the same plasmid sequence in linear and circular forms, respectively.</p> <p>In the pP6 experiment, we only have a single linear DNA molecule\u2014the full plasmid amplified by PCR. The primers introduce BsaI sites at both ends. When digested, the ends form compatible overhangs that allow the DNA to ligate back into a circle. This is a special case of Golden Gate where the product is a re-circularized version of the input.</p> <p> Figure: The linear PCR product is digested by BsaI to expose sticky ends. These are self-compatible and ligate to form a circular plasmid.</p>"},{"location":"wetlab/assembly/#reaction-setup","title":"Reaction Setup","text":"<p>Setting up a Golden Gate reaction is similar to setting up PCR. You pipette reagents in order from top to bottom, adding enzymes last to avoid denaturing them in pure water or incomplete mixtures.</p> Volume Reagent Tube Label 6 \u00b5L ddH\u2082O (white rack) W____ 1 \u00b5L 10\u00d7 T4 Ligase Buffer (red) L____ 2 \u00b5L z79 (your cleaned PCR DNA) 0.5 \u00b5L T4 DNA Ligase 0.5 \u00b5L BsaI <ul> <li>Label your reaction tube with your assigned code (e.g., <code>a79</code>).</li> <li>Place all reactions from your section together in a single thermocycler block.</li> </ul>"},{"location":"wetlab/assembly/#thermocycler-program","title":"Thermocycler Program","text":"<p>We use the program GG1, which alternates between:</p> <ul> <li>37\u00b0C (cutting by BsaI)</li> <li>16\u00b0C (ligation by T4 Ligase)</li> </ul> <p>The final steps:</p> <ul> <li>Extended 37\u00b0C incubation</li> <li>65\u00b0C heat inactivation</li> </ul>"},{"location":"wetlab/assembly/#lab-sheet-overview","title":"Lab Sheet Overview","text":"Label Fragment Product a79 P6 pP6 <p>The Label is what you write on your PCR tube. P6 refers to the PCR product you're assembling. Once the reaction is complete, the product is a circularized plasmid called pP6, ready for transformation.</p>"},{"location":"wetlab/assembly/#scaling-the-reaction","title":"Scaling the Reaction","text":"<p>You can scale this up or down depending on your needs, but:</p> <ul> <li>Final buffer concentration must be 1\u00d7</li> <li>Avoid excessive DNA concentrations that may inhibit ligation</li> </ul> <p>Typical scale is 10 \u00b5L, matching what\u2019s needed for competent cell transformation.</p>"},{"location":"wetlab/assembly/#quiz-golden-gate-assembly","title":"\ud83e\uddea Quiz: Golden Gate Assembly1\ufe0f\u20e3 Assembly Purpose2\ufe0f\u20e3 Reaction Setup","text":"<p>What is the goal of the Golden Gate Assembly in the pP6 experiment?</p>  To prepare DNA for sequencing  To combine multiple DNA fragments into one plasmid  To circularize a linear DNA fragment using its self-compatible ends  To amplify a gene using PCR <p></p> <p>Which of the following is acceptable when setting up a Golden Gate reaction?</p>  Adding the enzyme first before any buffer or water  Setting up the reaction in a standard Eppendorf tube  Not mixing your reaction after setup  Mixing the reaction thoroughly once everything has been added <p></p> Check Answers"},{"location":"wetlab/bestp/","title":"BestP: Measuring Fluorescence","text":""},{"location":"wetlab/bestp/#overview","title":"Overview","text":"<p>The BestP experiment marks a shift from building DNA to measuring its activity. The goal is to assign a quantitative value\u2014Relative Promoter Units (RPU)\u2014to each promoter you identified in pP6. This allows us to compare their strengths under consistent conditions.</p>"},{"location":"wetlab/bestp/#why-rpu","title":"Why RPU?","text":"<p>Different experiments can yield different fluorescence values due to instrument settings, media conditions, or cell growth. To standardize promoter activity, we compare each sample\u2019s fluorescence to a reference promoter: J23101, a commonly used medium-strength promoter from the Anderson library. Its activity is defined as 1 RPU.</p>"},{"location":"wetlab/bestp/#reference-plasmids","title":"Reference Plasmids","text":"<p>We use three plasmids from the Anderson promoter library:</p> <ul> <li>pJ12 \u2013 Contains J23112, a very weak promoter</li> <li>pJ01 \u2013 Contains J23101, the standard reference</li> <li>pJ19 \u2013 Contains J23119, a very strong promoter</li> </ul> <p>Each has the same vector backbone and reporter gene (amilGFP) as your pP6 clones, ensuring fair comparison.</p>"},{"location":"wetlab/bestp/#experimental-workflow","title":"Experimental Workflow","text":"<p>You'll choose 4 pP6 clones to characterize\u2014either your own from sequencing or others from the TPcon6B box. You'll also measure the reference plasmids above. Here\u2019s the full procedure:</p>"},{"location":"wetlab/bestp/#step-1-transformation","title":"Step 1: Transformation","text":"<p>Transform all 7 plasmids (4 pP6 clones + pJ12, pJ01, pJ19) using a single aliquot of 100 \u03bcL competent cells. Use 16 \u03bcL of cells + KCM + 0.5 \u03bcL of plasmid DNA per transformation.</p> <ul> <li>Plate the transformations and label clearly with your assigned number</li> <li>Use carbencillin selection</li> <li>No rescue step is needed</li> </ul>"},{"location":"wetlab/bestp/#step-2-picking","title":"Step 2: Picking","text":"<p>Pick 4 colonies per plasmid into a 24-well block:</p> <ul> <li>Add 4 mL of 2YT + carb to each well</li> <li>Pick in a left-to-right order to match data entry format</li> <li>Label with an airpore sheet</li> <li>Grow overnight in the multitron shaker</li> <li>Refrigerate plates and upload a photo (name it <code>BestP-XX</code>)</li> </ul>"},{"location":"wetlab/bestp/#step-3-measurement","title":"Step 3: Measurement","text":"<p>Measure both fluorescence and OD\u2086\u2080\u2080 for all samples using a plate reader:</p> <ul> <li>Transfer 100 \u03bcL from each culture into a black-walled Tecan plate (2 technical replicates per sample)</li> <li>Use fluorescein settings to read amilGFP</li> <li>Save data to the USB stick</li> </ul>"},{"location":"wetlab/bestp/#step-4-data-entry","title":"Step 4: Data Entry","text":"<p>Paste your raw OD and fluorescence readings into the provided spreadsheet. The sheet will:</p> <ul> <li>Calculate normalized fluorescence (per OD unit)</li> <li>Average technical and biological replicates</li> <li>Compute final RPU values with error bars</li> </ul> <p>You\u2019ll report these results to the main BestP Results sheet to help build a complete picture of the promoter library.</p>"},{"location":"wetlab/bestp/#example-results","title":"Example Results","text":"Promoter RPU Error pJ01-C (J23101) 1.00 \u00b10.02 45C 0.037 \u00b10.003 7C 0.679 \u00b10.012 8A 1.045 \u00b10.019 <p>Our ultimate goal with BestP is to measure the RPU of each pP6 clone and compare it to pJ19 to see if we have discovered a promoter with comparable or even greater activity. The strongest hits from this screen will move forward into the next stage of the project, where we\u2019ll develop each into a part family. This is the final quality control step before we commit to that process.</p>"},{"location":"wetlab/bestp/#quiz-bestp-and-rpu-measurement","title":"\ud83e\uddea Quiz: BestP and RPU Measurement","text":"1\ufe0f\u20e3 What is RPU? <p>What does RPU stand for, and why is it used?</p>  Relative Protein Units; to measure cell growth  Reference Promoter Units; to normalize fluorescence data  Relative Promoter Units; to standardize promoter activity across conditions  Ribosomal Production Units; to calculate expression efficiency <p></p> 2\ufe0f\u20e3 RPU Calculation <p>If pJ01 gives a fluorescence value of 3033, and your pP6 clone gives 9213, what is the RPU of your pP6 clone?</p>  9213 \u00f7 3033 = ~3.0  9213 \u2212 3033 = 6179  3033 \u00f7 9213 = ~0.33  3033 \u2212 9213 = -6180 <p></p> 3\ufe0f\u20e3 Controlling Variables <p>Why are all reference and test plasmids built on the same vector backbone?</p>  To simplify miniprepping  To avoid needing a control lane on a gel  To ensure differences in fluorescence come only from promoter activity  To save cost in plasmid construction <p></p> 4\ufe0f\u20e3 Experimental Consistency <p>Which of the following would invalidate your RPU comparison?</p>  Using a different volume of media across wells  Growing cells overnight in the same incubator  Picking colonies in left-to-right order  Using the same airpore sheet for all blocks <p></p> Check Answers"},{"location":"wetlab/cleanup/","title":"Zymo Cleanup","text":"<p>After confirming your PCR reaction on a gel, the next step is to purify the DNA. This is essential for most cloning workflows, especially Golden Gate and restriction enzyme-based cloning. Although it is optional for Gibson, cleanup helps remove components from the PCR that may interfere with downstream steps.</p>"},{"location":"wetlab/cleanup/#why-cleanup-is-necessary","title":"Why Cleanup Is Necessary","text":"<p>PCR reactions contain:</p> <ul> <li>Unreacted dNTPs</li> <li>Active polymerase</li> <li>Buffers and salts</li> </ul> <p>These can interfere with cloning enzymes, particularly enzymes like BsaI that generate sticky ends. Polymerase can fill in sticky overhangs, preventing proper ligation. Cleanup eliminates these components.</p>"},{"location":"wetlab/cleanup/#how-it-works","title":"How It Works","text":"<p>Figure: Stepwise diagram of silica column cleanup showing binding, washing, and elution. DNA binds to the pink resin in the column, contaminants are washed away, and purified DNA is eluted into a clean tube.</p> <p>DNA binds to silica in the presence of a chaotropic salt\u2014usually guanidinium thiocyanate\u2014found in Zymo's ADB buffer. This same chemical also denatures proteins like polymerases.</p> <p>The basic workflow:</p> <ol> <li>Mix PCR product with ADB buffer</li> <li>Pass through a silica column by centrifugation</li> <li>Wash the column with 70% ethanol (provided as PE or Wash buffer)</li> <li>Dry the column by spinning</li> <li>Elute DNA with water or EB Buffer</li> </ol> <p>EB is preferred because it's a dilute Tris buffer. Pure water can absorb CO\u2082 and become slightly acidic, which may reduce recovery of DNA.</p> <p>Be mindful: know where your DNA is at each step. Many errors involve discarding the DNA by accident.</p>"},{"location":"wetlab/cleanup/#zymo-vs-other-kits","title":"Zymo vs. Other Kits","text":"<p>We use the Zymo DNA Clean &amp; Concentrator-5 kit because it allows elution in as little as 6 \u00b5L, which is sometimes useful for concentrating the DNA. However, there are many equivalent products on the market.</p> <p>Popular Alternative: Qiagen QIAquick Gel Extraction Kit (purple column) </p> <ul> <li>Typically used to extract DNA from excised gel slices  </li> <li>Requires special buffer if binding from a gel  </li> <li>Similar silica-based chemistry</li> </ul> <p>Note: for small DNA fragments (&lt;250 bp), improve binding by mixing 1 part ADB + 3 parts isopropanol before loading.</p>"},{"location":"wetlab/cleanup/#lab-sheet-overview","title":"Lab Sheet Overview","text":"<p>Title: TPcon6-P6: Zymo Location of PCR product: Enzyme freezer, PCR rack labeled \u201cto Zymo\u201d</p> Reaction Tube Label Side Label Elution Volume Destination 79 z79 P6 z79 25 \u00b5L zymos1/___ <p>Each PCR reaction you process will yield a new labeled Eppendorf tube with your cleaned-up DNA.</p>"},{"location":"wetlab/cleanup/#step-by-step-regular-zymo-cleanup","title":"Step-by-Step: Regular Zymo Cleanup","text":"<p>This protocol removes polymerase, dNTPs, salts, and oligos from your PCR. It also works for cleaning up restriction digests.</p> <ol> <li>Add 180 \u00b5L of Zymo ADB buffer (brown bottle) to your PCR reaction.</li> <li>Transfer the mixture to a Zymo column (small clear tube labeled for cleanup).</li> <li>Spin at full speed for 15 seconds, discard the flow-through.</li> <li>Add 200 \u00b5L of PE Buffer to the column.</li> <li>Spin at full speed for 15 seconds, discard the flow-through.</li> <li>Add another 200 \u00b5L of PE Buffer.</li> <li>Spin at full speed for 15 seconds, discard the flow-through.</li> <li>Spin at full speed for 90 seconds to dry the column, discard flow-through.</li> <li>Place the column in a clean 1.5 mL Eppendorf tube. Add the elution volume (see lab sheet) of EB Buffer or water directly to the center of the column matrix. Avoid letting liquid stick to the walls.  </li> <li>Spin at full speed for 45 seconds to collect your purified DNA.</li> </ol>"},{"location":"wetlab/cleanup/#quiz-zymo-cleanup","title":"\ud83e\uddea Quiz: Zymo Cleanup","text":"1\ufe0f\u20e3 Why Cleanup? <p>Why is it important to clean up a PCR reaction before cloning?</p>  To increase the fluorescence of the DNA  To convert DNA to RNA  To shorten the DNA for easier ligation  To remove enzymes and reagents that could interfere with cloning steps <p></p> 2\ufe0f\u20e3 ADB Buffer <p>What is in the ADB buffer that causes DNA to bind to the silica column?</p>  Guanidinium thiocyanate  Urea  Antibodies  Sodium bicarbonate <p></p> 3\ufe0f\u20e3 Common Cleanup Errors <p>Select all common mistakes to avoid during a Zymo cleanup:</p>  Trying to purify very short DNA fragments without modifying the protocol  Forgetting to add ADB buffer before binding  Eluting into the collection tube instead of a clean Eppendorf  Discarding your eluted DNA, thinking it\u2019s waste <p></p> Check Answers"},{"location":"wetlab/gel/","title":"Gel Electrophoresis","text":"<p>After PCR, it\u2019s important to confirm that the reaction worked by checking for the presence and size of the product. We do this by running a small portion of each PCR reaction on an analytical agarose gel.</p>"},{"location":"wetlab/gel/#why-we-run-a-gel","title":"Why We Run a Gel","text":"<p>PCR can fail in a variety of ways (no product, wrong size, smearing, etc.). Running a gel lets us visually check:</p> <ul> <li>Whether a product was formed</li> <li>Whether it\u2019s the correct size (~3583 bp for pP6)</li> <li>Whether there\u2019s nonspecific amplification</li> </ul> <p>This is an analytical gel, meaning we are only checking\u2014not purifying\u2014the DNA.</p>"},{"location":"wetlab/gel/#what-is-a-gel","title":"What Is a Gel?","text":"<p>Agarose gel electrophoresis separates DNA fragments by size. DNA is negatively charged and moves toward the red (positive) electrode when voltage is applied.</p> <ul> <li>\"Run to red\": always load your DNA at the black (negative) electrode end.</li> <li>DNA travels through a gel matrix\u2014smaller pieces move faster.</li> <li>A loading dye is added to weigh down the sample and track progress visually.</li> </ul> <p>Gels are made from agarose, a gelling agent purified from seaweed. To prepare a gel, agarose is dissolved in 1\u00d7 TAE buffer at 1% weight/volume by heating (typically in a microwave until boiling), then poured into a mold with combs to form wells. After it sets, we store the gels in bulk in a sealed container in the fridge. In lab, you\u2019ll cut a section from a pre-made gel with enough wells for your samples.</p> <p>TAE stands for Tris-Acetate-EDTA. It is a buffer that maintains pH and ionic strength during electrophoresis. Standard 1\u00d7 TAE contains 40 mM Tris, 20 mM Acetate, and 1 mM EDTA at pH 8.3.</p>"},{"location":"wetlab/gel/#lab-sheet-overview","title":"Lab Sheet Overview","text":"<p>Title: TPcon6-P6: Gel (79) Location of PCR products: Enzyme freezer, PCR rack labeled \u201cto Gel\u201d</p>"},{"location":"wetlab/gel/#sample-setup","title":"Sample Setup","text":"<p>You\u2019ll set up one lane for each PCR product. In this case, you're preparing one labeled sample:</p> Label Size Product 79 3583 P6"},{"location":"wetlab/gel/#to-prepare-your-gel-samples","title":"To prepare your gel samples:","text":"<ol> <li>Add 8 \u00b5L of loading dye (tube labeled \u2018load\u2019) to a new PCR tube.</li> <li>Add 3 \u00b5L of PCR product to the tube, mix, and quick spin.</li> </ol>"},{"location":"wetlab/gel/#marker-sample-1-per-section","title":"Marker Sample (1 per section):","text":"<ol> <li>Add 8 \u00b5L of loading dye to a tube of marker (yellow), mix, and spin.</li> </ol>"},{"location":"wetlab/gel/#running-the-gel","title":"Running the Gel","text":"<p>If others in your lab section are also ready to run a gel, set up one gel for the group: 4. Cut a gel slab with enough wells for all samples plus 1 for marker and a few extras. 5. Place the gel in the rig. Fill with 1\u00d7 TAE buffer to just cover it. 6. Brace the gel with a plastic wedge to keep it from floating. 7. Label all samples on a strip of paper and arrange tubes in loading order. 8. Using a P20 set to 9 \u00b5L, load each sample into a well carefully. Avoid puncturing the wells\u2014if you do, restart that lane.</p>"},{"location":"wetlab/gel/#electrophoresis","title":"Electrophoresis","text":"<ol> <li>Attach the lid and power leads: \"run to red\".</li> <li>Run at 175 volts for ~10 minutes, or until the front (blue) dye band is 2/3\u20133/4 down the gel.</li> </ol>"},{"location":"wetlab/gel/#imaging-the-gel","title":"Imaging the Gel","text":"<ol> <li>Transfer the gel to the imager and place a sample label strip above it.</li> <li>Take a picture with your phone through the orange filter.</li> <li>Name the image file by date and time (e.g., <code>2022_05_23-10am.png</code>) and upload it to:</li> </ol> <p>Google Drive Upload Folder</p>"},{"location":"wetlab/gel/#quiz-gel-electrophoresis","title":"\ud83e\uddea Quiz: Gel Electrophoresis","text":"1\ufe0f\u20e3 Purpose of Running a Gel <p>Why do we run an agarose gel after PCR?</p>  To sequence the amplified DNA and analyze the base composition  To purify the PCR product for downstream cloning steps  To amplify the DNA a second time in a gel matrix  To confirm that the PCR reaction worked as expected <p></p> 2\ufe0f\u20e3 Running the Gel <p>What does \"run to red\" mean in gel electrophoresis?</p>  Start the gel run using the maximum voltage setting  Load DNA at the red (positive) electrode side  DNA migrates toward the red (positive) electrode  Use red dye to visualize the DNA in the gel <p></p> 3\ufe0f\u20e3 Purpose of Loading Dye <p>Why is loading dye added to PCR samples before running them on a gel?</p>  To increase DNA yield during electrophoresis  To bind to DNA and make it heavier  To reduce voltage needed for migration  To weigh down the sample and help track it during electrophoresis <p></p> Check Answers"},{"location":"wetlab/gel/#pp6-2022-2-gel-course-video","title":"\ud83c\udfa5 pP6-2022-2-Gel \u2014 Course Video","text":"<p>Open pP6-2022-2-Gel in Canvas (CalNet login)</p>"},{"location":"wetlab/intro/","title":"1. pP6 Experiment Introduction","text":""},{"location":"wetlab/intro/#pp6-intro-finding-strong-promoters-in-e-coli","title":"pP6 Intro: Finding Strong Promoters in E. coli","text":""},{"location":"wetlab/intro/#goal-of-the-experiment","title":"Goal of the Experiment","text":"<p>The goal of this experiment is to build new DNA control sequences called promoters that drive very strong gene expression. You will create a collection of bacteria, each with a different promoter, and then pick the brightest green colonies. Finally, you will measure how strong those promoter parts are and compare them to other sequences we already know.</p>"},{"location":"wetlab/intro/#background-transcription-in-e-coli","title":"Background: Transcription in E. coli","text":"<p> Figure: Transcription in E. coli. RNA polymerase binds the promoter at the -35 and -10 sites, initiates at +1, and transcribes a coding sequence (CDS) into mRNA with an RBS. The transcript ends at a terminator sequence.</p> <p>When RNA polymerase binds to a promoter in E. coli, it begins transcription at the +1 position, synthesizing an mRNA strand. This mRNA includes a ribosome binding site (RBS) and a coding sequence (CDS). The -10 and -35 sequences upstream of the +1 site strongly influence transcription strength.</p>"},{"location":"wetlab/intro/#the-j23100-promoter-family","title":"The J23100 Promoter Family","text":"<p>Years ago, a standard set of synthetic promoters was developed by mutating a parent sequence called J23119. This set, known as the J23100 promoter family, provides a spectrum of expression strengths and has proven very useful for fine-tuning gene expression.</p> <p>These promoters are ideal when you want to scan through different expression levels of the same gene using well-characterized sequences. Each member of the family was created by introducing mutations into the -35 and -10 boxes of J23119, while keeping the flanking sequence constant.</p> <p> Figure: The J23100 promoter family. Variants were created by mutating the -35 and -10 regions while keeping flanking sequences constant. Fluorescence and sequence alignment show relative expression strengths.</p>"},{"location":"wetlab/intro/#why-build-new-promoter-libraries","title":"Why Build New Promoter Libraries?","text":"<p>Although the J23100 family is widely used, it has some limitations:</p> <ul> <li>All promoters share a nearly identical sequence backbone, making them prone to homologous recombination when used together in a single plasmid.</li> <li>Repeating these sequences interferes with PCR-based edits and makes cloning less reliable.</li> </ul> <p>To overcome these issues, we aim to build multiple promoter families with similar activity ranges\u2014but based on entirely distinct sequences. These new libraries can be used together safely in the same construct and facilitate more advanced synthetic biology designs.</p>"},{"location":"wetlab/intro/#the-pp6-library-design","title":"The pP6 Library Design","text":"<p>The pP6 experiment is designed to generate a sixth-generation promoter library following this strategy.</p> <p>We retain only the minimal motifs required for strong \u03c3\u2077\u2070 recognition and randomize all other surrounding bases. This allows us to create new promoters that are strong, functional, and non-redundant.</p> <ul> <li>Fix the -35 and -10 consensus motifs.</li> <li>Randomize all other positions.</li> </ul> <p> Figure: \u03c3\u2077\u2070 consensus promoter. The sigma factor of RNA polymerase recognizes the -35 (TTGACA) and -10 (TATAAT) boxes and initiates transcription at the +1 site. This image shows the promoter region unwound and engaged by polymerase.</p> <p>We also add 4 random bases upstream and downstream, yielding 31 degenerate positions in total.</p>"},{"location":"wetlab/intro/#construction-file","title":"Construction File","text":"<p>We use a \"construction file\" to formally describe how DNA parts are assembled. Each line represents a biochemical reaction step using standardized syntax.</p> <p>The pP6 promoter library is built using a two-step process involving PCR and Golden Gate assembly.</p> <p>We will use a technique called EIPCR (Enzymatic Inverse PCR), which involves amplifying the entire plasmid by PCR. Each PCR primer includes a constant 3\u2032 annealing region and a 5\u2032 overhang containing degenerate bases (the N's).  The 'N' effectively means \"pick a random base from A, T, C, or G for this position\". This introduces variability into the unconserved promoter regions:</p> <p>Primers: <pre><code>&gt;P6libF2\nCAGTAggtctcgATAATNNNNNNANNNNGTTAGTATTTCTCCTCGTCTAC\n\n&gt;P6libR2\nCCAAAggtctcgTTATANNNNNNNNNNNNNNNNNTGTCAANNNNGAACCCAGGACTCCTCGAAGTC\n</code></pre></p> <p>Construction of pP6</p> <pre><code># PCR reaction\n# step      primer1     primer2     template     product\nPCR         P6libF2     P6libR2     pJ12         P6\n\n# Golden Gate assembly\n# step          dna         enzyme     product\nGoldenGate      P6          BsaI       pP6\n</code></pre>"},{"location":"wetlab/intro/#expected-outcome","title":"Expected Outcome","text":"<p>The product of the reaction is a circular plasmid with a unique randomized promoter upstream of an amilGFP reporter.</p> <p>During transformation, typically only 1 plasmid molecule enters a cell, confers resistance, and results in a colony on your petri dish. Thus, each colony on your transformation plate represents a unique promoter. When exposed to blue light, colonies fluoresce with varying intensity depending on promoter strength.</p> <p> Figure: A pP6 transformation plate under blue light, showing colonies that express varying levels of GFP due to differences in promoter strength. The highlighted region is zoomed in to reveal diverse green intensities among clones, even though all share the core consensus motif. This illustrates the wide range of activities produced by flanking sequence variation\u2014J23119 is unusually strong for this pattern.</p>"},{"location":"wetlab/intro/#picking-colonies-and-sequencing","title":"Picking Colonies and Sequencing","text":"<p>You\u2019ll select the brightest colonies (most green) for follow-up:</p> <ol> <li>Grow in liquid culture</li> <li>Miniprep DNA</li> <li>Submit for sequencing</li> <li>Analyze the sequence to identify the promoter</li> </ol> <p>Note: Smaller, slow-growing colonies might encode the strongest promoters. Don\u2019t skip them!</p>"},{"location":"wetlab/intro/#getting-started","title":"Getting Started","text":"<ol> <li> <p>Download the pP6 lab sheets and sequences: Google Drive - pP6 Materials</p> </li> <li> <p>Make a copy of this spreadsheet: pP6 LabSheet Workbook</p> </li> <li> <p>Fill in your name and ID, and print the lab worksheets.  You may also use your phone, tablet, or notebook.  You could also write out your own notes instead.</p> </li> <li> <p>Read the tutorial, take the quiz, and watch the demo videos before each lab activity.</p> </li> </ol>"},{"location":"wetlab/intro/#all-demo-videos","title":"All Demo Videos","text":"<p>All the videos are available in Media Gallery on Bcourses:</p> <ul> <li>pP6-2022-1-PCR  </li> <li>pP6-2022-2-Gel  </li> <li>pP6-2022-3-Zymo  </li> <li>pP6-2022-4-Assembly  </li> <li>pP6-2022-5-Transformation  </li> <li>pP6-2022-6-Pick  </li> <li>pP6-2022-7-Miniprep  </li> <li>pP6-2022-8-Sequencing  </li> <li>pP6-2022-9-Sequence Analysis</li> </ul>"},{"location":"wetlab/intro/#next","title":"Next","text":"<p>When you're ready, proceed to the Pipetting tutorial to learn how to use a micropipette correctly before starting wetlab work.</p>"},{"location":"wetlab/intro/#quiz-promoter-engineering-concepts","title":"\ud83e\uddea Quiz: Promoter Engineering Concepts","text":"1\ufe0f\u20e3 Fixed Motifs <p>Which promoter elements are fixed in each synthetic promoter?</p>  Only the +1 site  The entire promoter  -35, -10, and +1  Just the -10 box <p></p> 2\ufe0f\u20e3 Randomized Regions <p>What part of the promoter is randomized?</p>  The entire gene  The ribosome binding site  The flanking regions around -35, -10, +1  The coding sequence <p></p> 3\ufe0f\u20e3 Why Not J23100? <p>Why are J23100-family promoters avoided in pP6 for multi-gene constructs?</p>  They are too weak  They don't work in E. coli  Their sequences are too similar, causing recombination  They lack RBS elements <p></p> Check Answers"},{"location":"wetlab/miniprep/","title":"Miniprep: Plasmid DNA Purification","text":"<p>Once you\u2019ve picked and grown up an isolated colony, you now have a saturated culture containing billions of identical cells. Each cell carries multiple copies of the plasmid, and a miniprep allows you to extract and purify that plasmid DNA.</p>"},{"location":"wetlab/miniprep/#why-miniprep","title":"Why Miniprep?","text":"<ol> <li>Storage \u2014 Purified plasmid can be stored at -20\u00b0C indefinitely.</li> <li>DNA as a Building Block \u2014 You often need clean DNA to build or clone further constructs.</li> <li>Sequencing \u2014 Verifying the plasmid sequence requires pure template.</li> <li>Transformation into Other Cells \u2014 Requires isolated DNA.</li> <li>General Use \u2014 Quantification, restriction mapping, and other analytical methods.</li> </ol>"},{"location":"wetlab/miniprep/#overview","title":"Overview","text":"<p> Figure: Components of the Qiagen QIAprep Spin Miniprep Kit. Blue columns, labeled buffers, and RNase A tube shown.</p> <p>This procedure is similar to the Zymo cleanup, but starts with a bacterial culture. We use the Qiagen QIAprep Spin Miniprep Kit, which uses silica column purification via guanidinium-silica chemistry. (This is not interchangeable with Qiagen anion-exchange kits.)</p> <p>The protocol below is adapted from Qiagen's handbook, which includes detailed guidance, reagent preparation, and troubleshooting. \ud83d\udcc4 Download the full handbook (PDF)</p>"},{"location":"wetlab/miniprep/#the-qiagen-miniprep-procedure","title":"The Qiagen Miniprep Procedure","text":"<p> Figure: Overview of the miniprep workflow \u2014 cells are lysed, debris is removed, DNA binds to a spin column, and is then washed and eluted.</p>"},{"location":"wetlab/miniprep/#reagents","title":"\ud83e\uddea Reagents","text":"<ul> <li>P1 Buffer (with RNase A)</li> <li>P2 Buffer (NaOH/SDS)</li> <li>N3 Buffer (Acidic, with guanidinium)</li> <li>PB Buffer (protein/endotoxin removal)</li> <li>PE Buffer (70% ethanol)</li> <li>EB Buffer (elution)</li> </ul>"},{"location":"wetlab/miniprep/#alkaline-lysis","title":"\ud83e\uddeb Alkaline Lysis","text":"<ol> <li>Pellet 1\u20135 mL saturated culture in a microcentrifuge tube.</li> <li>Resuspend in 250 \u00b5L P1 (RNase A must be added).</li> <li>Lyse by adding 250 \u00b5L P2, mix gently (do not vortex).</li> <li>Neutralize with 350 \u00b5L N3. Invert to mix thoroughly.</li> <li>Spin 5 min at max speed to pellet debris.</li> </ol>"},{"location":"wetlab/miniprep/#column-binding-and-wash","title":"\ud83e\uddfc Column Binding and Wash","text":"<ol> <li>Transfer supernatant to a blue QIAprep column, spin 15 s.</li> <li>Add 500 \u00b5L PB Buffer, spin.</li> <li>Add 750 \u00b5L PE Buffer, spin.</li> <li>Discard flowthrough, then spin again 90 s to dry.</li> </ol>"},{"location":"wetlab/miniprep/#elution","title":"\ud83d\udca7 Elution","text":"<ol> <li>Place column in a new 1.5 mL microcentifuge tube. Add 50 \u00b5L EB (or water, pH 7\u20138.5) to center of membrane.</li> <li>Spin 45 s to elute DNA.</li> </ol> <p>Note: Avoid ethanol contamination from PE \u2014 spin thoroughly before eluting.</p>"},{"location":"wetlab/miniprep/#lab-sheet-notes","title":"Lab Sheet Notes","text":"<ul> <li>Clearly label both the top and side of each tube with clone ID (e.g. <code>pP6-79A</code>).</li> <li>Store the labeled miniprep tubes in the <code>minis1</code> box.</li> <li>Record miniprep location in the box (e.g., <code>E3</code>) on your lab sheet.</li> <li>Minipreps are retained for future use and must be properly inventoried.</li> </ul>"},{"location":"wetlab/miniprep/#kit-notes","title":"Kit Notes","text":"<ul> <li>Add RNase A to P1 before use; store in the fridge thereafter.</li> <li>Add ethanol to PE buffer before first use. Waft the open tube to confirm ethanol has been added. A checkmark on the cap typically indicates ethanol has been added.</li> <li>P2 buffer may precipitate when cold; ensure it is a clear liquid before use. Gently warm it (e.g., in the microwave) to fully dissolve any precipitate.</li> <li>Buffers P2, N3, and PB contain irritants \u2014 wear gloves, goggles, and labcoat (as always).</li> <li>Be mindful of contamination on your gloves. This procedure can be messy; crusty debris from bottle rims can transfer to gloves and contaminate your samples. Rinse your gloves at the sink if you suspect it.</li> </ul>"},{"location":"wetlab/miniprep/#quiz-miniprep","title":"\ud83e\uddea Quiz: Miniprep","text":"1\ufe0f\u20e3 Elution Contents <p>What is in the tube after elution from the miniprep column?</p>  All nucleic acids present in the original cell  Guanidinium chloride, plasmid DNA, and ethanol  RNA, chromosomal DNA, proteins, and water  Water and purified plasmid DNA <p></p> 2\ufe0f\u20e3 Avoiding Errors <p>Which of these are good miniprep practices?</p>  Using more than 5 mL of cells  Leaving supernatant after pelleting  Skipping RNase in P1  Incomplete cell resuspension  Using cold, precipitated P2  Using the wrong neutralization buffer  Skipping gentle mixing before spinning  Over-vortexing the lysate  Washing the column with water  Doing washes in the wrong order  Using PE without ethanol  Not drying the column  Eluting on the side of the tube  Throwing away your DNA  Eluting into the collection tube  Having a great time (the only right answer)  Eluting with PE buffer <p></p> Check Answers"},{"location":"wetlab/pcr/","title":"3. Polymerase Chain Reaction","text":""},{"location":"wetlab/pcr/#polymerase-chain-reaction","title":"Polymerase Chain Reaction","text":"<p>In this step, you\u2019ll perform a PCR reaction to generate a pool of DNA molecules, each containing a different variant of a synthetic promoter.</p> <p>This protocol uses PrimeSTAR GXL DNA Polymerase and the PG4K55 thermal cycler program. You\u2019ll use degenerate primers that introduce many random bases, meaning each DNA product will contain a different promoter sequence that nobody has created before you.</p>"},{"location":"wetlab/pcr/#what-youre-doing","title":"What You\u2019re Doing","text":"<p>In this step, you're performing an EIPCR (Error-prone Inverse PCR) reaction using the plasmid pJ12 as a template. The goal is to replace the weak promoter in pJ12 with a library of randomized sequences using specially designed degenerate primers.</p> <p>This reaction produces a linear ~3.6 kb PCR product with terminal BsaI sites, which will later be closed into a circular plasmid by Golden Gate assembly.</p>"},{"location":"wetlab/pcr/#primers-used","title":"Primers Used","text":"<p>The primers introduce BsaI sites and randomized sequence regions. N represents a position where any base could be present. These are generated by mixing the bases during oligo synthesis.</p>"},{"location":"wetlab/pcr/#forward-primer-p6libf2","title":"Forward Primer (P6LibF2)","text":""},{"location":"wetlab/pcr/#reverse-primer-p6libr2","title":"Reverse Primer (P6LibR2)","text":""},{"location":"wetlab/pcr/#pcr-around-pj12-plasmid","title":"PCR around pJ12 plasmid","text":"<p>Figure: This experiment uses PCR to amplify the entire pJ12 plasmid using primers that face outward and include BsaI sites with degenerate bases. The result is a linear PCR product that still contains all original plasmid features (amilGFP, bla, ori), flanked by randomized promoter regions near each end.</p> <p>The lowercase <code>ggtctc</code> sequence in each primer is the recognition site for the BsaI enzyme. This allows the PCR product to be seamlessly ligated back into a circular plasmid in a later step.</p>"},{"location":"wetlab/pcr/#pcr-product-map","title":"PCR Product Map","text":""},{"location":"wetlab/pcr/#reading-the-lab-sheet","title":"Reading the Lab Sheet","text":"<p>The PCR lab sheet is your step-by-step guide for this experiment. It has several blocks, each representing different parts of the setup process. You\u2019ll need to read each one carefully and fill in values as you go.</p>"},{"location":"wetlab/pcr/#sources","title":"Sources","text":"<p>This first table tells you which DNA tubes to fetch before beginning the reaction. You\u2019ll get these from the pink 'Training1' box in the freezer.</p> Reagent Label Concentration Location Primer (F) F# 10 \u03bcM Training1/A* Primer (R) R# 10 \u03bcM Training1/B* Template (pJ12) T# dil 20\u00d7 Training1/C* <p>You\u2019ll record the tube numbers from these sources and refer to them later when setting up the reaction. Be sure to write your assigned number as the label (e.g., <code>79</code>) on the PCR tube cap.</p>"},{"location":"wetlab/pcr/#pcr-samples","title":"PCR Samples","text":"<p>This next table shows the PCR reactions you need to set up. In this experiment, you are setting up a single reaction.</p> Label Primer 1 Primer 2 Template Product 79 F# R# T# 3583 bp <ul> <li>The <code>Label</code> is what you write on your PCR tube.</li> <li>The <code>Product</code> indicates the expected PCR product size.</li> <li>You substitute the F#, R#, and T# values based on the tubes you fetched.</li> </ul>"},{"location":"wetlab/pcr/#reaction-setup","title":"Reaction Setup","text":"<p>Use this table to pipette the components into your PCR tube in the order shown:</p> Volume Reagent Tube Label 32 \u00b5L ddH\u2082O (white rack) W____ 10 \u00b5L 5\u00d7 PrimeSTAR GXL Buffer (green cap) B____ 4 \u00b5L PrimeSTAR dNTP Mixture (2.5 mM each, yellow cap) D____ 1 \u00b5L 10 \u00b5M Primer 1 (from above) F____ 1 \u00b5L 10 \u00b5M Primer 2 (from above) R____ 1 \u00b5L pJ12 Template DNA (from above) T____ 1 \u00b5L PrimeSTAR GXL DNA Polymerase (cold block) \u2014 <p>After adding all components in order:</p> <ol> <li>Mix the tube by slamming on the bench.</li> <li>Briefly spin down to collect the liquid at the bottom.</li> <li>Load into the thermocycler.</li> </ol>"},{"location":"wetlab/pcr/#pcr-program-pg4k55","title":"PCR Program: PG4K55","text":"<p>Run the PG4K55 program. It has already been programmed into the thermocyclers, so you just need to run it. You should NOT add or edit the programs in the thermocycler. PG4K55 was designed for ~4 kb products with a 55\u00b0C annealing temperature:</p> <pre><code>Initial Denaturation:   98\u00b0C for 2 min\n30 cycles:\n  Denaturation:         98\u00b0C for 10 sec\n  Annealing:            55\u00b0C for 15 sec\n  Extension:            68\u00b0C for 4 min\nFinal Extension:        68\u00b0C for 5 min\n</code></pre>"},{"location":"wetlab/pcr/#quiz-pcr-and-promoter-engineering","title":"\ud83e\uddea Quiz: PCR and Promoter Engineering","text":"1\ufe0f\u20e3 PCR Purpose <p>What is the purpose of PCR in this experiment?</p>  To amplify the GFP gene  To generate a randomized promoter library using degenerate primers  To purify the pJ12 plasmid  To linearize the vector for digestion <p></p> 2\ufe0f\u20e3 Randomized Bases <p>Why do the primers include randomized bases?</p>  To create variable protein sequences  To improve PCR yield  To make sequencing easier  To allow different promoter variants to be introduced <p></p> 3\ufe0f\u20e3 Inverse PCR Strategy <p>Why is inverse PCR used in this experiment?</p>  It amplifies just the promoter region  It helps insert a new gene downstream of the terminator  It amplifies the entire plasmid while introducing a new promoter region  It produces single-stranded DNA <p></p> Check Answers"},{"location":"wetlab/pcr/#pp6-2022-1-pcr-course-video","title":"\ud83c\udfa5 pP6-2022-1-PCR \u2014 Course Video","text":"<p>Access note: Course videos are restricted to UC\u00a0Berkeley BioE\u00a0140L and iGEM students via CalNet. If you have access, you can watch the embedded player below or open it in Canvas. You can also find this item in the course Media Gallery under the title pP6-2022-1-PCR.</p> <p>Open pP6-2022-1-PCR in Canvas (CalNet login)</p>"},{"location":"wetlab/pick/","title":"Colony Picking","text":"<p>After plating your transformation and incubating overnight, if everything goes well you will see colonies that look something like this:</p> <p> Figure: Results from two students' pP6 transformations under blue light illumination to excite amilGFP. Left: an ideal plate with many green colonies. Right: a minimally usable plate. The zoomed region shows a green colony (a true pP6 transformant) surrounded by smaller white \"satellite colonies\"\u2014non-transformed cells growing in an antibiotic-depleted zone. Only the green colony contains the plasmid and is ampicillin-resistant.</p>"},{"location":"wetlab/pick/#what-are-you-looking-for","title":"What Are You Looking For?","text":"<p>In the pP6 experiment, you're trying to identify the strongest promoter variants. These drive expression of amilGFP, which fluoresces green.  </p> <ul> <li>Bright green colonies indicate successful assembly of a strong promoter driving GFP.  </li> <li>Colonies with no fluorescence are likely the template plasmid (pJ12) or inactive variants.</li> </ul> <p>Some bright colonies are so strong that you can see yellowish color even without blue light. These are your best candidates.</p> <p>Each visible spot on the plate arises from a single bacterium that landed there and divided repeatedly. To ensure you're picking a true single clone, choose well-isolated, round colonies that are clearly separated from their neighbors.  </p> <ul> <li>Avoid picking colonies that are touching or very close together  </li> <li>Avoid elongated or smeared colonies, which may indicate mixed or unhealthy growth  </li> </ul> <p>Picking refers to using a sterile tool (usually a toothpick or pipette tip) to transfer a single colony to a liquid culture. Inoculating means introducing that colony into fresh media to grow overnight.</p> <p> Figure: Use a sterile toothpick to gently touch a green colony, then inoculate 4 mL of media by dropping the toothpick into a labeled snap-cap tube.</p>"},{"location":"wetlab/pick/#protocol","title":"Protocol","text":"<p>Follow your lab sheet and the steps below:</p> <p>Step 1: Identify the brightest green colonies under blue light and mark them on the plate.</p> <p>Step 2: Label snap-cap tubes for up to 4 clones with your assigned ID number and a letter. For example: <code>pP6-79A</code>, <code>pP6-79B</code>, etc.</p> <p>Step 3: Add 4 mL of 2YT + Carb (from fridge) into each tube.</p> <p>Step 4: Pick each marked colony using a sterile toothpick and inoculate it by dropping the toothpick directly into the labeled tube (do not remove the toothpick).</p> <p>Step 5: Cover the tube and grow in the shaking incubator overnight.</p> <p>Step 6: Wrap the agar plate with parafilm and place it upside-down in the fridge for recordkeeping.</p> <p>Step 7: Upload a photo of your plate under blue light to this folder: Google Drive Folder Name the image as: <code>pP6-79</code> (with your number)</p> <p>Step 8: Document your picks. Why did you choose each clone? (e.g., \"very green and slow growing\")</p>"},{"location":"wetlab/pick/#example","title":"Example","text":"clone_id why was it chosen? 79A It was exceptionally green and slow growing 79B Brightest colony on the plate"},{"location":"wetlab/pick/#quiz-colony-picking","title":"\ud83e\uddea Quiz: Colony Picking","text":"1\ufe0f\u20e3 Picking Strategy <p>Which colony is most likely to contain the strongest promoter and should be picked?</p>  A white colony near the edge of the plate  The largest colony on the plate  A large, bright green colony in a dense cluster  A small, isolated, bright green colony <p></p> 2\ufe0f\u20e3 Colony Isolation <p>Why is it important to choose a well-separated colony?</p>  It ensures the colony is round  It increases the transformation efficiency  It ensures the picked colony comes from a single clone  It improves antibiotic resistance <p></p> 3\ufe0f\u20e3 Sample Labeling <p>What does the label <code>pP6-37C</code> indicate?</p>  It is the third colony picked by the student assigned number 37 for the pP6 experiment  It represents the colony with the third highest green fluorescence intensity on the plate  It is the 37th colony selected across all students in this year\u2019s lab  It refers to a pP6 plate that was incubated at 37\u00b0C and produced a colony labeled \"C\" <p></p> Check Answers"},{"location":"wetlab/pipetting/","title":"Pipetting","text":"<p>Recombinant DNA technology is technically easy to do once you have mastered a few basic manual procedures. The most essential of these is the transfer of specified volumes of liquid accurately and cleanly from one container to another. In molecular biology, we frequently work with microliter (\u00b5L) volumes, often using multi-step protocols where precision and care are essential.</p>"},{"location":"wetlab/pipetting/#micropipette-basics","title":"Micropipette Basics","text":"<p>Micropipettes are precision tools used to measure and transfer small volumes of liquid, typically between 0.5 \u00b5L and 1000 \u00b5L. Each pipette is optimized for a specific volume range and should only be used within that range for accurate results.</p> <p>Common pipette sizes:</p> <ul> <li>P10: 0.5\u201310 \u00b5L</li> <li>P20: 0.5/2\u201320 \u00b5L</li> <li>P200: 20\u2013200 \u00b5L</li> <li>P1000: 100\u20131000 \u00b5L</li> </ul> <p>Both the P10 and P20 can be used to deliver 0.5 \u00b5L, though accuracy at this volume depends more on careful technique than on the specific pipette. You\u2019ll will always visually confirm how far the liquid rides up the tip to know things went right, and this is most important with the smaller volumes.</p> <p>Each pipette uses tips that must be changed between uses to avoid contamination.</p>"},{"location":"wetlab/pipetting/#lts-vs-universal-tips","title":"LTS vs. Universal Tips","text":"<p>In this lab, we use LTS (LiteTouch System) pipettes and tips. Unlike universal-fit pipettes, LTS tips require less force to attach and eject and help reduce repetitive strain. LTS pipettes have a cylindrical shaft with a defined stop, making tip seating more consistent. Do not attempt to use universal tips with LTS pipettes\u2014they will not seal properly and will result in inaccurate volumes.</p>"},{"location":"wetlab/pipetting/#how-to-pipette","title":"How to Pipette","text":"<ol> <li>Set the volume using the adjustment dial. Ensure it is within the specified range.</li> <li>Attach a sterile tip securely by pressing the pipette into the tip box and gently twisting.</li> <li>Press the plunger to the first stop before inserting into the liquid.</li> <li>Immerse the tip just below the surface of the liquid (2\u20133 mm), then slowly release the plunger to draw up the sample.</li> <li>Transfer the liquid by touching the pipette tip to the side of the destination container and pressing the plunger to the second stop.</li> <li>Eject the tip into the waste bin using the ejector button.</li> </ol> <p>Figure: Forward pipetting sequence using a micropipette. Steps: (1) Press plunger to first stop. (2) Insert tip into liquid. (3) Slowly release plunger to draw up liquid. (4) Dispense by pressing to first stop. (5) Press to second stop to expel remaining liquid. Always eject tips between uses to prevent contamination. Image credit: Jeremy Seto, bio-oer GitHub repository</p>"},{"location":"wetlab/pipetting/#best-practices","title":"Best Practices","text":"<ul> <li>Always hold the pipette vertically when drawing up liquid.</li> <li>Change tips between samples to avoid cross-contamination.</li> <li>Never turn the volume dial outside of the pipette\u2019s range.</li> <li>Never lay a pipette sideways with liquid inside.</li> </ul>"},{"location":"wetlab/pipetting/#preventing-contamination","title":"Preventing Contamination","text":"<p>Contamination is one of the most common issues in molecular biology labs.</p> <p>Key guidelines:</p> <ul> <li>One tip = one sample. Never reuse a tip between samples.</li> <li>Avoid touching the tip to anything other than the intended liquid and container.</li> <li>Never pipette without a tip\u2014this will contaminate the pipette barrel.</li> <li>Always prep your workspace before picking up a tip:<ul> <li>Label tubes</li> <li>Open caps</li> <li>Arrange tubes in racks</li> <li>Uncap reagents if needed</li> </ul> </li> </ul> <p>Trying to do setup with a tip already on risks cross-contamination.</p> <p>Hold large pipettes like the P1000 vertically when pipetting. If held at an angle, liquid can run up into the barrel and damage the internal mechanism. You may also see an apparent air gap in the tip, which is not a real issue\u2014it's just gravity acting on a larger volume.</p>"},{"location":"wetlab/pipetting/#reading-the-display","title":"Reading the Display","text":"<p>The display on a pipette shows the set volume. On a P20, for example, \"200\" means 20.0 \u00b5L, while on a P1000, it would mean 200 \u00b5L. Make sure you understand what each digit represents based on the pipette type.</p>"},{"location":"wetlab/pipetting/#when-things-go-wrong","title":"When Things Go Wrong","text":"<p>Signs you\u2019ve pipetted incorrectly:</p> <ul> <li>Air bubbles in the tip</li> <li>Liquid stuck in the tip</li> <li>Inconsistent volumes across replicates</li> <li>Droplets left on the outside of the tip</li> </ul> <p>If you see any of these, discard the tip and try again carefully.</p>"},{"location":"wetlab/pipetting/#what-youll-practice-and-demonstrate","title":"What You'll Practice and Demonstrate","text":"<p>As part of pipetting training, you will perform the following steps and demonstrate them to your instructor:</p> <ol> <li>Transfer 1 mL of water from a conical tube to a 1.5 mL microcentrifuge tube using a P1000.</li> <li>Transfer 50 \u00b5L of pink solution from a microcentrifuge tube to a 0.2 mL PCR tube using a P200.</li> <li>Transfer 0.5 \u00b5L of viscous blue glycerol solution into the same 0.2 mL PCR tube using a P20.</li> <li>Close the 0.2 mL PCR tube once (repeated openings damage the seal and can cause leakage during thermocycling).</li> <li>Mix the solution by inverting and slamming the tube on the bench upside down.</li> <li>Perform a quick spin to collect liquid at the bottom of the tube.</li> </ol> <p>Follow all pipetting best practices and contamination precautions during this demo.</p>"},{"location":"wetlab/pipetting/#quiz-pipetting-basics","title":"\ud83e\uddea Quiz: Pipetting Basics","text":"1\ufe0f\u20e3 Pipette Selection <p>Which pipette could you use to accurately measure 0.5 \u00b5L?</p>  P1000  P200  P20  Any pipette over 0.5 \u00b5L <p></p> 2\ufe0f\u20e3 Pipetting Sequence <p>What is the correct sequence for forward pipetting?</p>  Insert tip \u2192 press plunger to second stop \u2192 draw liquid \u2192 dispense to first stop  Press plunger to first stop \u2192 insert tip \u2192 release plunger \u2192 dispense to second stop  Press to second stop \u2192 insert tip \u2192 release plunger \u2192 dispense to first stop  Insert tip \u2192 press to first stop \u2192 release in air \u2192 dispense to second stop <p></p> 3\ufe0f\u20e3 Pipette Handling <p>Why should you never lay a pipette down with liquid inside?</p>  It damages the tip  It breaks the plunger  Liquid can enter the barrel and damage the mechanism  It wastes reagent <p></p> 4\ufe0f\u20e3 Pipette Display <p>On a P1000, a display of \u201c200\u201d means what volume?</p>  200 \u00b5L  20.0 \u00b5L  2.00 \u00b5L  0.200 \u00b5L <p></p> 5\ufe0f\u20e3 Troubleshooting <p>What should you do if you see an air bubble in the tip?</p>  Dispense anyway\u2014bubbles are normal  Increase the volume and retry  Discard the tip and repeat the step  Shake the pipette to dislodge it <p></p> Check Answers"},{"location":"wetlab/sequencing/","title":"Cycle Sequencing","text":"<p>After you\u2019ve picked colonies and completed your minipreps, you\u2019ve finished the fabrication phase. The next question: what did you actually make? This tutorial will guide you through how to determine if your plasmid contains the correct sequence.</p>"},{"location":"wetlab/sequencing/#what-is-cycle-sequencing","title":"What Is Cycle Sequencing?","text":"<p>Cycle sequencing, also often called Sanger sequencing, uses DNA polymerase and chain-terminating nucleotides (ddNTPs) to create truncated DNA fragments, each ending in a labeled base. These fragments are then separated by capillary electrophoresis to reveal the DNA sequence.</p> <p></p> <p>Figure: Cycle sequencing overview. Fluorescently-labeled ddNTPs stop extension at every base type. The resulting DNA fragments are separated and analyzed.</p>"},{"location":"wetlab/sequencing/#why-not-just-sequence-the-whole-plasmid","title":"Why Not Just Sequence the Whole Plasmid?","text":"<p>Full-plasmid sequencing services (e.g., Plasmidsaurus) cost ~$15/sample and return the entire sequence. This is useful in some cases, but often overkill. In the pP6 experiment, we only care about a small variable region between two restriction sites. A single cycle sequencing read (~$3.50) is sufficient.</p>"},{"location":"wetlab/sequencing/#cycle-sequencing-details","title":"Cycle Sequencing Details","text":"<p>In cycle sequencing, only one primer is used, which means the amplification is linear rather than exponential like in PCR. The read typically starts about 20\u201350 bp downstream of the primer, and you'll usually get around 400\u20131000 bp of usable sequence, depending on the quality of the reaction.</p> <p>Each ddNTP is fluorescently labeled with a distinct color. After PCR-like cycling, the products are run through capillary electrophoresis.</p> <p> Figure: Example of a traditional sequencing gel, where each lane contains fragments ending in a specific base. The band pattern reveals the sequence of the DNA strand. This image is adapted from Edvotek\u2019s excellent DNA sequencing tutorial, which we recommend if you\u2019d like a deeper dive into how the chemistry works.</p>"},{"location":"wetlab/sequencing/#from-data-to-interpretation","title":"From Data to Interpretation","text":"<p>From the sequencing facility, you get:</p> <ul> <li>A <code>.txt</code> file containing the base calls (the 'read')</li> <li>An <code>.ab1</code> chromatogram file (shows raw fluorescent data), the 'trace'</li> </ul> <p>You can view both in ApE or Benchling. ApE will also annotate known features if you hit <code>ctrl-K</code> with a feature database installed.</p>"},{"location":"wetlab/sequencing/#step-by-step-how-to-sequence-your-pp6-clone","title":"Step-by-Step: How to Sequence Your pP6 Clone","text":""},{"location":"wetlab/sequencing/#choosing-a-primer","title":"Choosing a Primer","text":"<p>The sequence you read will start ~20\u201350 bp downstream of your primer. So, you must choose a primer upstream of the region you want to check. For pP6, we use the standard primer G00101.</p>"},{"location":"wetlab/sequencing/#when-to-use-other-sequencing-options","title":"When to Use Other Sequencing Options","text":"Method Cost/sample Output Use Case Cycle sequencing ~$3.50 ~1 kb from a primer Quick check of a region Full plasmid ~$15 Entire plasmid Final confirmation, mutation scan Deep sequencing $750+ Millions of reads Libraries, high-throughput work"},{"location":"wetlab/sequencing/#what-to-do-with-your-pp6-sequencing-result","title":"What to Do With Your pP6 Sequencing Result","text":"<p>Once your sequencing data is returned (usually in 1\u20132 days), you will:</p>"},{"location":"wetlab/sequencing/#1-download-your-result","title":"1. Download your result","text":"<ul> <li>Search for your assigned number (e.g., <code>79</code>) in this shared folder: \ud83d\udcc2 pP6 Sequencing Data Folder</li> </ul>"},{"location":"wetlab/sequencing/#2-check-for-the-expected-pp6-architecture","title":"2. Check for the Expected pP6 Architecture","text":"<p>Before comparing your entire sequence to the model, begin by checking for key features within your read:</p>"},{"location":"wetlab/sequencing/#step-1-look-for-the-bseri-promoter-bseri-pattern","title":"\ud83d\udd0d Step 1: Look for the BseRI \u2192 Promoter \u2192 BseRI Pattern","text":"<p>This is the core region you\u2019re sequencing. You're looking for the structure:</p> <pre><code>BseRI \u2192 variable promoter region \u2192 BseRI\n</code></pre> <p>If this pattern is intact, your clone is a candidate hit. If not, it\u2019s likely not usable, but it may still be worth investigating as an example of unexpected outcomes. Reads from this experiment sometimes contain odd duplications, deletions, or recombinations due to the N-rich promoter region.</p>"},{"location":"wetlab/sequencing/#step-2-use-ape-to-confirm-key-features","title":"\ud83e\uddec Step 2: Use ApE to Confirm Key Features","text":"<p>Open your <code>.seq</code> file and <code>pP6.seq</code> in ApE. You can download the model file here: \ud83d\udcc4 pP6.seq If your feature database is installed, hit <code>ctrl-K</code> to light up key landmarks such as:</p> <ul> <li>BseRI restriction sites (you should see exactly 2)</li> <li>consensus promoter pattern: NNNNTTGACANNNNNNNNNNNNNNNNNTATAATNNNNNNANNNN</li> <li>T4 terminator</li> </ul> <p>Use the feature list at the top of ApE to verify that all these landmarks are present, appear once, and are in the correct order.</p>"},{"location":"wetlab/sequencing/#step-3-align-the-read-to-the-model","title":"\ud83e\uddea Step 3: Align the Read to the Model","text":"<p>To verify flanking sequence accuracy: - Select your sequence in ApE - Go to Tools \u2192 Align with another sequence... - Choose <code>pP6.seq</code> - Look for 100% identity near and around the promoter region</p> <p>A clean alignment confirms no point mutations or context disruption.</p>"},{"location":"wetlab/sequencing/#quick-checklist","title":"\u2705 Quick Checklist","text":"<ul> <li>[ ] Contains two BseRI sites</li> <li>[ ] Includes the UBER promoter motif between them</li> <li>[ ] Promoter is not duplicated, reversed, or truncated</li> <li>[ ] Contains expected T4 terminator site</li> <li>[ ] Alignment shows clean sequence on both sides</li> </ul> <p>Use this structure to decide if your clone is usable or just interesting. Add your findings to the worksheet in the next step.</p>"},{"location":"wetlab/sequencing/#3-confirm-if-your-clone-is-a-good-read","title":"3. Confirm if your clone is a good read","text":"<ul> <li>Is the read clean, free of noise or ambiguous calls?</li> <li>How long is the high-quality portion with no N's \u2014 100 bp (low quality), 800 bp (good), 1000 bp (great)?</li> </ul> <p>A high-quality read should give you several hundred bases of clean, mappable sequence. The more of the surrounding context you can confirm, the better.</p>"},{"location":"wetlab/sequencing/#4-search-for-the-target-motif","title":"4. Search for the target motif","text":"<ul> <li>Look for this key motif in your read:      <pre><code>GAGGAGTCCTGGGTTCNNNNTTGACANNNNNNNNNNNNNNNNNTATAATNNNNNNANNNNGTTAGTATTTCTCCTC\n</code></pre></li> <li>If it's found and the read is clean, mark your clone as usable.</li> </ul>"},{"location":"wetlab/sequencing/#5-fill-out-the-worksheet","title":"5. Fill out the worksheet","text":"<p>Go to: \ud83d\udcdd pP6 Clones Worksheet</p> <p>For each clone that has a clean and analyzable read, enter the following information:</p> <ul> <li>clone_id \u2014 Your assigned clone label (e.g., <code>79A</code>)</li> <li>read_name \u2014 The filename of your <code>.seq</code> file (e.g., <code>62-pP6-14B_F08_054.seq</code>)</li> <li>date_sequenced \u2014 The name of the sequencing folder (e.g., <code>2022_04_24</code>)</li> <li>canonical \u2014 Mark \"yes\" if the read matches the model sequence (<code>pP6.seq</code>) across the entire promoter region with no mutations or rearrangements. Otherwise, \"no\".</li> <li>usable \u2014 Mark \"yes\" if the expected UBER promoter motif is found and intact, even if the rest of the plasmid has issues. Otherwise, \"no\".</li> <li>cassette \u2014 Paste the actual sequence you matched that corresponds to the expected promoter region.</li> <li>Notes \u2014 Summarize what you observed.</li> </ul>"},{"location":"wetlab/sequencing/#example-annotations","title":"\ud83e\uddea Example Annotations","text":"clone_id canonical usable cassette Notes 14A yes yes GAGGA...CTC Perfect match 14B no no Pcon region is shortened, no UBER present 14C no yes GAGGA...CTC Additional BseRI sites included, but Pcon site is fine 14D no no Contamination, matches pTP1 14E no yes GAGGA...CTC Extra BseRI and BsaI sites, but promoter is fine <p>Remember: usable means the promoter is intact and could be moved forward into our development pipeline. Canonical means it's a perfect match to what we designed.</p> <p>You don\u2019t need perfection to keep a clone \u2014 but you do need to understand it.</p>"},{"location":"wetlab/sequencing/#6-close-out-the-experiment-with-your-supervisor","title":"6. Close out the experiment with your supervisor","text":"<ul> <li>Discard cleanup DNA and used plates</li> <li>Discard clones with bad reads</li> <li>Clean and bleach culture block</li> <li>Confirm image/data uploads</li> <li>Move good clones (\"hits\") to TPcon6B box</li> <li>Your pP6 work is complete when hits are logged and uploaded</li> </ul> <p>\ud83c\udf89 That\u2019s it! You\u2019ve finished the pP6 experiment!</p> <p>But there's one final question: we know the promoter works and we've seen that it's green \u2014 but how strong is it, exactly?</p> <p>The pP6 hits you've found vary a lot in brightness. To move from a qualitative observation (\"looks bright\") to a quantitative measurement, your next tutorial \u2014 BestP \u2014 will walk you through how to assess promoter strength using fluorescence activity assays.</p>"},{"location":"wetlab/sequencing/#quiz-sequencing","title":"\ud83e\uddea Quiz: Sequencing","text":"1\ufe0f\u20e3 Why Sequence? <p>Which of the following is not a reason to sequence your pP6 clone?</p>  To find out what promoter you have made  To confirm that the assembly chemistry reclosed the circle properly  To confirm the quality of your miniprep DNA  To quantify the promoter activity of your hit <p></p> 2\ufe0f\u20e3 Usable Clones <p>What makes a clone \u201cusable\u201d?</p>  It perfectly matches the pP6 model  The T4 terminator is present and annotated  The BseRI promoter cassette is intact  There are no ambiguous base calls in the read <p></p> 3\ufe0f\u20e3 Feature Identification <p>What ApE feature helps you quickly check for key sequences?</p>  Exporting to PDF  Ctrl-K to show annotated features  Viewing the GC content  Showing enzyme cut sites <p></p> 4\ufe0f\u20e3 What to Look For <p>What are you primarily trying to verify in your sequencing read?</p>  That the promoter region is intact and in the correct context  That the plasmid has no mutations  That the plasmid contains the origin and antibiotic resistance  That your read is longer than 800 bp regardless of sequence <p></p> Check Answers"},{"location":"wetlab/transformation/","title":"Transformation","text":"<p>After assembly, the circular plasmid has been generated, but it is mixed with other DNAs\u2014some incomplete or mutant. By passing the material through cells, we isolate a single one of these sequences and amplify it a billion-fold.</p> <p>Transformation is the process in which a bacterium takes up DNA from the environment. While some bacteria (like B. subtilis) do this naturally, E. coli requires preparation to become \u201ccompetent.\u201d</p> <p>There are two common methods:</p>"},{"location":"wetlab/transformation/#electroporation","title":"\ud83d\udd0c Electroporation","text":"<p>Electroporation involves preparing cells in salt-free, ice-cold water or 10% glycerol and shocking them with a brief electric pulse in a special cuvette. This creates pores in the membrane, allowing DNA to enter. It is:</p> <ul> <li>~100\u00d7 more efficient than heat shock</li> <li>More expensive (cuvettes are single-use)</li> <li>Sensitive to salt contamination</li> <li>Ideal for library transformations needing high colony counts</li> </ul>"},{"location":"wetlab/transformation/#heat-shock-used-in-pp6","title":"\ud83c\udf21\ufe0f Heat Shock (used in pP6)","text":"<p>We use the TSS method for heat shock, where cells are suspended in a PEG-salt mix. You add DNA and a small amount of KCM buffer, chill, then heat shock at 42\u00b0C for 90 seconds. \ud83d\udcc4 Full TSS protocol</p> <p>TSS cells can be frozen in aliquots and remain competent for years. TSS cells are easier to work with during transformation and are well-suited for routine cloning workflows.</p> <p>In dilute conditions, as in pP6, most cells take up just one plasmid, resulting in unique colonies.</p>"},{"location":"wetlab/transformation/#rescue-step","title":"Rescue Step?","text":"<p>Some antibiotics (e.g., kanamycin, chloramphenicol) block translation immediately. To survive, cells must first express the resistance gene\u2014this requires a rescue step (1 hour outgrowth in rich media before plating).</p> <p>Ampicillin, used in pP6, is different: it kills only actively growing cells. Cells recover naturally after transformation, so no rescue is required.</p>"},{"location":"wetlab/transformation/#amp-vs-carbenicillin","title":"Amp vs. Carbenicillin","text":"<p>Both are \u03b2-lactam antibiotics. The bla gene on pP6 confers resistance to both.</p> <ul> <li>Ampicillin breaks down when heated (e.g., during plate pouring)</li> <li>Carbenicillin is more stable, so we use Carb in practice</li> </ul> <p>Cells without plasmid die at 5 \u00b5g/mL; with plasmid, they survive over 1000 \u00b5g/mL\u2014a wide window for selection.</p>"},{"location":"wetlab/transformation/#transformation-efficiency","title":"Transformation Efficiency","text":"<p>Transformation efficiency measures how effectively DNA is taken up and expressed by cells. It's typically calculated as: CFU/\u00b5g DNA = (Colonies on plate) \u00f7 (amount of plasmid DNA in \u00b5g) Our heat shock competent cells typically yield around 10\u2076 CFU/\u00b5g DNA. With electroporation, efficiencies as high as 10\u00b9\u00b9 CFU/\u00b5g DNA can be achieved.  </p> <p>This varies based on:</p> <ul> <li>Method (electroporation \u226b heat shock)</li> <li>Competency of the cells</li> <li>DNA purity and volume</li> <li>Handling technique</li> </ul> <p>Don\u2019t worry about calculating it for pP6, but understand that low DNA input typically gives 1 DNA per cell, which is ideal when selecting single clones.</p>"},{"location":"wetlab/transformation/#handling-competent-cells","title":"Handling Competent Cells","text":"<p>Competent cells are fragile. To maintain their viability:</p> <ul> <li>Keep them cold at all times (on ice or in a cold block).</li> <li>Do not pipette vigorously. Stir gently with the tip, then pipette up and down once or twice carefully.</li> <li>Avoid bubbles\u2014they indicate lysis.</li> <li>Aliquot immediately after prep\u2014cells degrade with freeze-thaw cycles.</li> <li>Do not re-freeze thawed competent cells\u2014even one additional freeze-thaw cycle can dramatically reduce their transformation efficiency.</li> </ul> <p>Note: You will not make your own competent cells. We prepare large batches once a year using the TSS method and store them at -80\u00b0C. Your instructor or supervisor will provide a frozen aliquot when needed.</p>"},{"location":"wetlab/transformation/#plating-techniques","title":"Plating Techniques","text":"<p>Once transformation is complete, you\u2019ll plate your cells using one of two methods:</p> <p>1. Glass beads:</p> <ul> <li>Pour the transformation mix onto the plate.</li> <li>Add ~5\u201310 sterile glass beads.</li> <li>Gently shake the plate in a circular motion (avoid sloshing).</li> <li>Pour off the beads into the discard jar.</li> </ul> <p>2. Metal spreader:</p> <ul> <li>Use a sterile spreader. These can be disposable plastic, reusable metal or glass wands, or made by bending a glass pipette. We use bent coat hangers shaped into a triangle\u2014they cool quickly, are unbreakable, and can be reused indefinitely.</li> <li>Flame sterilize, cool briefly.</li> <li>Spread the liquid evenly by rotating the plate under the spreader.</li> <li>Don't gouge the agar.</li> </ul> <p>Invert the plate (lid on the bottom) and place it in the incubator (not a shaker)</p>"},{"location":"wetlab/transformation/#labeling-and-inventory","title":"Labeling and Inventory","text":"<p>Be consistent and thorough:</p> <ul> <li>Write label, date, and your name on the plate bottom (not the lid since those can fall off).</li> <li>Match plate name to your sample ID and lab sheet entry (e.g., <code>pP6-79</code>).</li> <li>Return any used DNA tubes to their storage rack and note usage if needed.</li> </ul>"},{"location":"wetlab/transformation/#quiz-transformation","title":"\ud83e\uddea Quiz: Transformation","text":"1\ufe0f\u20e3 What is transformation? <p>What happens to cells during transformation?</p>  They divide rapidly  They take up new DNA  Their plasmids are destroyed <p></p> 2\ufe0f\u20e3 Transformation Efficiency <p>Which method gives the highest transformation efficiency?</p>  Heat shock  Electroporation  Glass beads <p></p> 3\ufe0f\u20e3 Purpose of Antibiotic <p>Why do we add an antibiotic after transformation?</p>  To help cells grow  To kill cells without the plasmid  To improve plasmid uptake <p></p> 4\ufe0f\u20e3 Rescue Step <p>Is a rescue step needed for ampicillin selection?</p>  Yes, cells must recover before selection  No, they can be plated directly <p></p> 5\ufe0f\u20e3 Best Practices <p>Check all best practices for successful transformation:</p>  Keep competent cells cold  Avoid freeze-thaw cycles  Invert plates when incubating  Vortex competent cells vigorously <p></p> Check Answers"}]}