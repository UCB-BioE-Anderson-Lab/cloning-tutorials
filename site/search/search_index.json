{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Synthetic Biology Project Tutorials","text":"<p>Welcome to the Synthetic Biology Project Tutorials, a modular series of interactive guides covering both hands-on molecular cloning and high-level project planning. These tutorials build from DNA fundamentals to advanced techniques in cloning design, sequence analysis, experimental execution, and data management.</p>"},{"location":"#part-1-cloning-techniques","title":"Part 1: Cloning Techniques","text":"<ol> <li> <p>DNA Basics    Learn about DNA structure, reverse complement operations, strandedness, plasmids, and genomes.</p> </li> <li> <p>Sequence Editing Tools    Learn to use a sequence editor (ApE, Benchling, or other tools) for finding subsequences, reverse complementing, and translating DNA.</p> </li> <li> <p>PCR Product Prediction    Manually predict PCR products using a sequence editor and understand the concept of annealing regions.</p> </li> <li> <p>PCR Simulation    Simulate the PCR reaction to reinforce concepts.</p> </li> <li> <p>Basic Cloning    Walk through traditional cloning steps.</p> </li> <li> <p>Gibson Assembly    Introduction to Gibson Assembly for seamless cloning.</p> </li> <li> <p>Golden Gate Cloning    Learn Golden Gate cloning methods.</p> </li> <li> <p>Short Parts Construction    Constructing and designing short parts and mutagenesis.</p> </li> <li> <p>Sequencing Analysis    Learn to analyze sequencing results.</p> </li> </ol>"},{"location":"#part-2-project-design-and-experiment-planning","title":"Part 2: Project Design and Experiment Planning","text":"<ol> <li> <p>Project Setup and Nomenclature    Learn how to structure a project, name experiments, and organize your working directory.</p> </li> <li> <p>Design Principles    Understand how to think about synthetic biology experiments from the ground up.</p> </li> <li> <p>Sequence Retrieval and Analysis    Use BLAST and other tools to find, analyze, and align DNA sequences for cloning.</p> </li> <li> <p>Oligo and GBlock Design    Design primers and synthetic fragments for amplification and cloning.</p> </li> <li> <p>Cloning Strategy &amp; Construction Files    Build and document your cloning plans using standardized Construction Files.</p> </li> <li> <p>Inventory and File Organization    Organize physical and digital materials using structured naming and box mapping.</p> </li> <li> <p>Simulation &amp; Pre-experiment Checklist    Validate your designs before executing them using construction simulators.</p> </li> <li> <p>Experimental Execution    Go from plan to bench with step-by-step guidance and documentation practices.</p> </li> <li> <p>Data Management and Analysis    Manage, annotate, and interpret your results.</p> </li> <li> <p>Narrative Writing and Reflection    Write concise experiment descriptions and answer guiding questions to explain your design.</p> </li> </ol> <p>Each tutorial includes step-by-step instructions, videos, and interactive examples.</p>"},{"location":"about/","title":"About","text":"<p>The about page</p>"},{"location":"dna_basics/","title":"DNA Basics and Molecular Biology Refresher","text":""},{"location":"dna_basics/#dna-structure-and-the-reverse-complement-function","title":"DNA Structure and the Reverse Complement Function","text":"<p>DNA is a double-stranded molecule arranged in an antiparallel fashion, meaning one strand runs in the 5' to 3' direction while its complementary strand runs in the 3' to 5' direction. The two strands are held together by base pairing: Adenine (A) pairs with Thymine (T), and Cytosine (C) pairs with Guanine (G). These fundamental properties allow for key sequence operations like reversing and complementing strands. To understand this structure visually, watch the video below:</p>"},{"location":"dna_basics/#reverse","title":"Reverse","text":"<p>To reverse a DNA sequence, simply write it backward. For example: - Original: <code>5'- ATGCAG -3'</code> - Reversed: <code>5'- GACGTA -3'</code></p>"},{"location":"dna_basics/#complement","title":"Complement","text":"<p>To complement a DNA sequence, replace each base with its pairing base: - A (Adenine) \u2194 T (Thymine) - C (Cytosine) \u2194 G (Guanine)</p> <p>Example: - Original: <code>5'- ATGCAG -3'</code> - Complement: <code>5'- TACGTC -3'</code></p>"},{"location":"dna_basics/#reverse-complement","title":"Reverse Complement","text":"<p>The reverse complement is simply applying the complement rule after reversing the sequence: 1. Reverse the sequence. 2. Replace each base with its complementary base.</p> <p>Example: - Original: <code>5'- ATGCAG -3'</code> - Step 1 (Reverse): <code>5'- GACGTA -3'</code> - Step 2 (Complement): <code>5'- CTGCAT -3'</code></p> <p>Since DNA is double-stranded, the reverse complement operation essentially determines what the partner strand would look like. When we take the reverse complement of a sequence, we are simulating the process of reading the opposite strand in the correct 5' to 3' direction, just as it would naturally exist in a DNA molecule. Calculating the reverse complement is a very common operation when working with DNA sequence.  However, reverse and complement, individually, are only used in specialized scenarios.  It is important you understand what these operations are, but it is mainly so you understand the composite of the two.  For the purposes of this tutorial, you will never use individual reverse or complement operations again.</p>"},{"location":"dna_basics/#try-it-yourself","title":"Try it Yourself","text":"<p>Try calculating the Reverse, Complement, and Reverse Complement of these sequences:</p>"},{"location":"dna_basics/#1-reverse","title":"1\ufe0f\u20e3 Reverse","text":"<p>What is the reverse of 5'- AGCTTG -3'? Check Answer</p> <p></p>"},{"location":"dna_basics/#2-complement","title":"2\ufe0f\u20e3 Complement","text":"<p>What is the complement of 5'- AGCTTG -3'? Check Answer</p> <p></p>"},{"location":"dna_basics/#3-reverse-complement","title":"3\ufe0f\u20e3 Reverse Complement","text":"<p>What is the reverse complement of 5'- CAGGTAG -3'? Check Answer</p> <p></p>"},{"location":"dna_basics/#the-central-dogma","title":"The Central Dogma","text":"<p>The Central Dogma of molecular biology describes 3 biochemical processes happening to biomolecules in most cells. During Replication, an exact copy of DNA is produced. During Transcription, a region of DNA is read into RNA. During Translation, a region of RNA (an mRNA or messenger RNA) is read into protein. Though these processes are very complex and involve numerous biomolecules, the sequences of RNA and protein are readily predictable from the DNA sequence.</p>"},{"location":"dna_basics/#transcription","title":"Transcription","text":"<p>A gene refers to a region of DNA that encodes a protein. You can think of it like a song on a vinyl record\u2014there is a physical region to the gene, with clear starts and ends. A gene can be on either strand of DNA, but it is always flanked by a promoter and a terminator sequence. The promoter determines which strand will be the \"coding strand,\" as the RNA polymerase binds to the promoter and proceeds until it reaches the terminator. </p> <p>During transcription, an RNA molecule is created that is identical to the coding strand but with Uracil (U) replacing Thymine (T).</p> <p>Example: - DNA Coding Strand: <code>5'- ATGCAGTAC -3'</code> - RNA Transcript: <code>5'- AUGCAGUAC -3'</code></p>"},{"location":"dna_basics/#quiz-predict-the-rna-sequence","title":"Quiz: Predict the RNA Sequence","text":"<p>What is the RNA sequence transcribed from this DNA coding strand? 5'- TCTGACTA -3'</p> Check Answer <p></p>"},{"location":"dna_basics/#translation","title":"Translation","text":"<p>An mRNA transcript consists of a 5' UTR (Untranslated Region) followed by the CDS (Coding DNA Sequence). The CDS is an ORF (Open Reading Frame), meaning a sequence that, when read in groups of three bases (codons), begins with a start codon (ATG, GTG, or TTG) and ends with a stop codon (TAA, TAG, TGA).</p> <p>The ribosome recognizes the Shine-Dalgarno sequence and the start codon, then reads the RNA three bases at a time, translating each codon into an amino acid based on the genetic code.</p>"},{"location":"dna_basics/#genetic-code-table","title":"Genetic Code Table","text":"<p>Note: While translation occurs from an RNA sequence, for convenience, we often refer to codons in their DNA format. Codons are three-letter sequences that specify amino acids during protein synthesis. Each codon in DNA corresponds to an RNA codon by replacing Thymine (T) with Uracil (U).</p> Codon Single Letter Full Name Codon Single Letter Full Name TTT F Phe TTC F Phe TTA L Leu TTG L Leu TCT S Ser TCC S Ser TCA S Ser TCG S Ser TAT Y Tyr TAC Y Tyr TAA stop Ter TAG stop Ter TGT C Cys TGC C Cys TGA stop Ter TGG W Trp CTT L Leu CTC L Leu CTA L Leu CTG L Leu CCT P Pro CCC P Pro CCA P Pro CCG P Pro CAT H His CAC H His CAA Q Gln CAG Q Gln CGT R Arg CGC R Arg CGA R Arg CGG R Arg ATT I Ile ATC I Ile ATA I Ile ATG M Met ACT T Thr ACC T Thr ACA T Thr ACG T Thr AAT N Asn AAC N Asn AAA K Lys AAG K Lys AGT S Ser AGC S Ser AGA R Arg AGG R Arg GTT V Val GTC V Val GTA V Val GTG V Val GCT A Ala GCC A Ala GCA A Ala GCG A Ala GAT D Asp GAC D Asp GAA E Glu GAG E Glu GGT G Gly GGC G Gly GGA G Gly GGG G Gly"},{"location":"dna_basics/#quiz-translate-the-dna-sequence","title":"Quiz: Translate the DNA Sequence","text":"<p>What is the amino acid sequence for the following DNA sequence? 5'- ATG CAG GTA GAA TAA -3'</p> Check Answer <p></p>"},{"location":"dna_basics/#summary-of-terms","title":"Summary of Terms","text":""},{"location":"dna_basics/#fundamental-dna-concepts","title":"Fundamental DNA Concepts","text":"<ul> <li>DNA (Deoxyribonucleic Acid): A double-stranded molecule that stores genetic information in all living organisms.</li> <li>Base Pairing: The specific hydrogen bonding between Adenine (A) &amp; Thymine (T) and Cytosine (C) &amp; Guanine (G) in DNA.</li> <li>Antiparallel: The orientation of DNA strands where one runs 5' to 3' and the complementary strand runs 3' to 5'.</li> </ul>"},{"location":"dna_basics/#transcription-rna-concepts","title":"Transcription &amp; RNA Concepts","text":"<ul> <li>RNA (Ribonucleic Acid): A single-stranded nucleic acid transcribed from DNA, involved in protein synthesis.</li> <li>Transcription: The process where RNA polymerase synthesizes RNA from a DNA template.</li> <li>RNA Polymerase: The enzyme that transcribes DNA into RNA.</li> <li>mRNA (Messenger RNA): The RNA transcript that carries genetic information from DNA to ribosomes.</li> <li>5' UTR (Untranslated Region): The non-coding region at the start of an mRNA that regulates translation.</li> <li>3' UTR (Untranslated Region): The non-coding region at the end of an mRNA that influences stability and translation efficiency.</li> <li>Promoter: A DNA sequence where RNA polymerase binds to start transcription.</li> <li>Terminator: A DNA sequence signaling the end of transcription.</li> </ul>"},{"location":"dna_basics/#translation-protein-synthesis","title":"Translation &amp; Protein Synthesis","text":"<ul> <li>Translation: The process where ribosomes synthesize proteins by reading mRNA codons.</li> <li>Ribosome: The molecular machine that assembles proteins by reading mRNA codons.</li> <li>tRNA (Transfer RNA): An RNA molecule that brings amino acids to the ribosome during translation.</li> <li>Codon: A three-nucleotide sequence in DNA or RNA that specifies an amino acid or stop signal.</li> <li>Anticodon: A complementary three-base sequence on tRNA that pairs with an mRNA codon.</li> <li>Start Codon: The first codon in an mRNA sequence that signals the beginning of translation (ATG coding for Methionine).</li> <li>Stop Codon: A codon (TAA, TAG, TGA) that signals the termination of translation.</li> </ul>"},{"location":"dna_basics/#gene-structure-regulation","title":"Gene Structure &amp; Regulation","text":"<ul> <li>Gene: A specific region of DNA that encodes a functional product, usually a protein.</li> <li>CDS (Coding DNA Sequence): The protein-coding portion of a gene within an mRNA.</li> <li>Open Reading Frame (ORF): A sequence of codons beginning with a start codon and ending with a stop codon.</li> <li>Ribosome Binding Site (RBS): A region on mRNA where the ribosome binds to initiate translation. In prokaryotes, this includes the Shine-Dalgarno sequence, while in eukaryotes, it is often the Kozak sequence.</li> <li>Shine-Dalgarno Sequence (SD): A ribosomal binding site in bacterial mRNA, located upstream of the start codon, which aligns the ribosome for efficient translation initiation.</li> <li>Kozak Sequence: A sequence surrounding the start codon in eukaryotic mRNA that enhances ribosome recognition and translation efficiency.</li> </ul>"},{"location":"project_setup/","title":"Project Setup and Nomenclature","text":"<p>This guide outlines conventions for setting up and organizing a synthetic biology project. These practices ensure consistency, reproducibility, and clarity across experiments and among collaborators.</p>"},{"location":"project_setup/#defining-a-project","title":"Defining a Project","text":"<p>A project is an independent thread of research with a clear goal. Each project must have a unique, single-token name (e.g., <code>lycopene</code>). Avoid informal names or nicknames in documentation to maintain searchable and traceable records. </p> <p>When starting out, a project might begin with a narrow goal, but it will likely grow in complexity. Naming it consistently from the start ensures future experiments, constructs, and documentation stay aligned and searchable.</p> <p>Example: - Project name: <code>lycopene</code> - Goal: Maximize lycopene production in E. coli.</p>"},{"location":"project_setup/#defining-an-experiment","title":"Defining an Experiment","text":"<p>An experiment is a bundled set of procedures (e.g., cloning, assays) conducted under a specific goal within a project. Experiments are named sequentially and prefixed by the project name (e.g., <code>lycopene33</code> is the 33rd experiment in the <code>lycopene</code> project).</p> <p>This deterministic naming also aids automation, indexing, and archiving of experiments. If experiment names are consistent, you can sort and filter results by project or experiment ID with confidence.</p>"},{"location":"project_setup/#plasmid-naming","title":"Plasmid Naming","text":"<p>Plasmids are named using a lowercase \u201cp\u201d and a project-specific prefix. Use sequential numbers: - Format: <code>pLYC1</code>, <code>pLYC2</code>, ... - Do not use descriptive names like <code>StrongPromoterGGPPS-pLYC22</code>.</p> <p>Descriptive names, while initially helpful, tend to grow unwieldy and ambiguous. For example, what begins as 'StrongPromoterGGPPS-pLYC22' may later include more variables, making names long and inconsistent. Short names like pLYC22 can be reliably printed on tubes and cross-referenced with detailed annotations in maps and documentation.</p>"},{"location":"project_setup/#naming-synthetic-dnas","title":"Naming Synthetic DNAs","text":"<p>Synthetic DNAs include oligos, gBlocks, and synthesized plasmids. Like plasmids, naming consistency here is vital. Prefixes help clarify type and origin at a glance, which is especially useful when scanning inventory files or browsing digital folders.</p> <ul> <li>Oligos: Use <code>o&lt;PROJECT&gt;</code> prefix, e.g., <code>oLYC1</code>, <code>oLYC2</code></li> <li>GBlocks: Use <code>g&lt;PROJECT&gt;</code> prefix, e.g., <code>gLYC1</code></li> <li>Clonal Plasmids from synthesis: Follow plasmid naming conventions</li> <li>Oligo Pools: Optional <code>l&lt;PROJECT&gt;</code> prefix, e.g., <code>lLYC1</code></li> </ul>"},{"location":"project_setup/#folder-structure","title":"Folder Structure","text":"<p>On your computer, organize files by project and subfolders:</p> <p>To see a concrete example of this structure in practice, visit the example project directory in the course GitHub repository: cloning-tutorials/examples/lycopene </p> <p>All data should reside in a structured directory named exactly after the project. This top-level folder will house all planning documents, experimental results, and inventories. <pre><code>lycopene/\n\u251c\u2500\u2500 Docs/\n\u251c\u2500\u2500 Experiments/\n\u2514\u2500\u2500 Inventory/\n</code></pre></p> <ul> <li>Docs: Emails, publication notes, project overview</li> <li>Experiments: Each experiment has its own folder (<code>lycopene1</code>, <code>lycopene2</code>, ...)</li> <li>Inventory: Track all physical materials, organized by freezer (Minus20, Minus80, Fridge)</li> </ul> <p>In the <code>lycopene</code> example: - <code>Docs/README.md</code> could contain a summary of the project goal or a link to relevant papers. - <code>Experiments/lycopene33/</code> holds folders like <code>Construction</code> and <code>Maps</code> where you'll see placeholders for your design and genbank files. - <code>Inventory/Minus20/README.md</code> can describe what box formats are used and which materials will be stored there.</p> <p>Example Experiment folder structure: <pre><code>lycopene33/\n\u251c\u2500\u2500 Construction/\n\u251c\u2500\u2500 Maps/\n\u251c\u2500\u2500 Sequencing/\n\u251c\u2500\u2500 Assays/\n\u2514\u2500\u2500 LabSheets/\n</code></pre></p> <p>This layout mirrors the workflow of a synthetic biology experiment\u2014from planning (Construction), to execution (Maps, Sequencing), to analysis (Assays), and finally lab-specific logistics (LabSheets).</p>"},{"location":"project_setup/#file-types-and-conventions","title":"File Types and Conventions","text":"<ul> <li>Construction files: <code>.txt</code></li> <li>DNA sequences: TSV format (IDT-style) or annotated Genbank files (<code>.seq</code>, <code>.gb</code>, <code>.ape</code>)</li> <li>Oligos under 60bp: 25nm scale; 60+bp: 100nm</li> <li>All naming and file conventions should match what is physically labeled in the lab.</li> </ul> <p>Proper formats reduce ordering errors, improve readability, and allow automated tools to validate or simulate designs. Genbank files should include full annotations for every promoter, CDS, terminator, origin, and sequencing primer site. TSV files should use standard fields as required by synthesis companies (e.g., IDT).</p> <p>Following this structure allows for efficient collaboration, easier debugging, and better long-term data management.</p>"},{"location":"sequence_tools/","title":"Sequence Tools","text":""},{"location":"sequence_tools/#introduction","title":"Introduction","text":"<p>Sequence editing tools are essential for molecular biology and bioinformatics, allowing researchers to manipulate and analyze DNA sequences effectively. These tools range from graphical interfaces designed for ease of use to powerful command-line utilities and programming libraries.</p>"},{"location":"sequence_tools/#tools-overview","title":"Tools Overview","text":"Tool Name Pros Cons ApE (A Plasmid Editor) - Course demonstrations will be done in ApE.- Simple interface- Efficient auto-annotation- Supports multiple file formats - Lacks cloud collaboration features- Limited automation capabilities. Benchling - Real-time collaboration- Extensive documentation- Integrates well with other laboratory tools. - Requires an internet connection- Subscription required for advanced features. SnapGene - User-friendly- Excellent visualization tools- Supports automatic primer design and cloning workflows. - Paid software with limited free version capabilities. UGENE - Free- Supports a wide range of sequence analysis tools- Allows scripting. - Interface can be complex for beginners. Biopython - Highly customizable- Integrates well with other computational tools. - Requires programming knowledge. EMBOSS - Wide range of utilities for sequence alignment, translation, and annotation. - Command-line interface can be intimidating for beginners. Seqtk - Extremely fast- Suitable for large-scale datasets. - Limited functionality compared to larger toolkits. Geneious - Comprehensive features including primer design, alignment, and phylogenetics. - Paid software with a high subscription cost."},{"location":"sequence_tools/#selection-guide","title":"Selection Guide","text":"<ul> <li>If you prefer a simple graphical tool, start with ApE.  </li> <li>If you need cloud-based collaboration, choose Benchling.  </li> <li>If you want advanced visualization and cloning workflows, consider SnapGene.  </li> <li>If you are comfortable with scripting, use Biopython or EMBOSS.  </li> <li>If you need high-performance sequence processing, try Seqtk.  </li> </ul> <p>This document will focus on ApE, Benchling, and Biopython, providing tutorials on how to get started and perform essential sequence operations.</p>"},{"location":"sequence_tools/#ontology-of-operations","title":"Ontology of Operations","text":"<ul> <li>Search: Finding specific sequences or patterns within a larger sequence. Refer back to the tutorials for practical examples.</li> <li>Copy: Duplicating a sequence or a portion of it to the clipboard for further use.</li> <li>Paste: Inserting the content of the clipboard into your sequence.</li> <li>Reverse Complement: Generating the reverse complement of a DNA sequence.</li> <li>Translate: Converting a nucleotide sequence into its corresponding protein sequence using the genetic code.</li> <li>Annotate: Adding biological information to a sequence, such as gene names or functional regions.</li> <li>Digest: Cutting a DNA sequence at specific sites using restriction enzymes.</li> <li>Rotate: Shifting the sequence in a circular manner.</li> <li>Feature Management: The process of importing and managing custom features in tools like ApE and Benchling.</li> </ul>"},{"location":"sequence_tools/#ape","title":"ApE","text":""},{"location":"sequence_tools/#download-and-install-ape","title":"Download and Install ApE","text":"<p>Download and install ApE from the official website: ApE Download Page</p>"},{"location":"sequence_tools/#update-features-and-enzymes-in-ape","title":"Update Features and Enzymes in ApE","text":"<p>To ensure ApE recognizes the latest feature annotations and enzyme files, follow these steps:</p>"},{"location":"sequence_tools/#step-1-set-up-a-storage-folder","title":"Step 1: Set Up a Storage Folder","text":"<ol> <li>Create an empty folder on your computer to store the updated feature list.</li> </ol>"},{"location":"sequence_tools/#step-2-configure-ape-settings","title":"Step 2: Configure ApE Settings","text":"<ol> <li>Open ApE and navigate to ApE &gt; Settings... </li> <li>Click the Files tab.  </li> <li>Under Default Feature Directory, click Move Directory, select the newly created folder, and click OK.  </li> <li>Repeat this for Default Enzymes Directory.  </li> <li>Click OK to close the settings window. ApE will generate default versions of these files in the folder.</li> </ol>"},{"location":"sequence_tools/#step-3-download-and-replace-feature-files","title":"Step 3: Download and Replace Feature Files","text":"<ul> <li>Download and unzip the updated files: Download Default Features</li> </ul>"},{"location":"sequence_tools/#step-4-load-the-updated-feature-library","title":"Step 4: Load the Updated Feature Library","text":"<ol> <li>In ApE, go to Features &gt; Open Feature Library... </li> <li>Navigate to <code>default_features.txt</code> in the unzipped folder and select it.  </li> <li>Click OK to confirm and exit.  </li> </ol>"},{"location":"sequence_tools/#performing-operations-in-ape","title":"Performing Operations in ApE","text":"<ul> <li>Search: Use Edit &gt; Find in the toolbar or press Command + F. To search both strands, check the Also find rev-com of string option. You can use N's as wildcards in your search. Choose to either select or highlight the sequence using the provided button options.</li> <li>Copy: Select the sequence using your mouse, then go to Edit &gt; Copy, or press Command + C. To copy the reverse complement, use Edit &gt; Copy Rev Com.</li> <li>Paste: Place your cursor where you want to insert the clipboard contents, then go to Edit &gt; Paste, or press Command + V.</li> <li>Reverse Complement: Select the sequence and use Edit &gt; Reverse-Complement to modify it directly. Alternatively, use Edit &gt; Copy Rev Com to copy the reverse complement to the clipboard without modifying the original sequence.</li> <li>Translate: Use ORFs &gt; Translate... to translate the highlighted sequence. Options allow displaying single-letter amino acids, triplet codes, and including/excluding the original DNA sequence.</li> <li>Annotate: Manually add a feature by highlighting a sequence, then go to Features &gt; New Feature to name it and assign a color. Press Command + K to auto-annotate all features in the Feature Library. Add new features under Features &gt; Edit Feature Library....</li> <li>Digest: Open Enzyme &gt; Enzyme Selector, select enzymes of interest, and click Highlight to mark their cut sites.</li> <li>Rotate: Place your cursor where you want the new origin, then go to Edit &gt; Set Origin. This function is only available when the sequence is marked as circular, indicated by the Linear/Circular toggle button in the editor window.</li> </ul> <p>You can turn off the double-stranded view under ApE &gt; Settings and uncheck the Inline Features option.</p>"},{"location":"sequence_tools/#benchling","title":"Benchling","text":""},{"location":"sequence_tools/#getting-started-with-benchling","title":"Getting Started with Benchling","text":"<ul> <li>Create an account on Benchling and log in.</li> <li>Familiarize yourself with the interface and available tools.</li> </ul>"},{"location":"sequence_tools/#uploading-features-and-autoannotation","title":"Uploading Features and Autoannotation","text":"<ul> <li>Navigate to Settings \u2192 Feature Libraries.</li> <li>Click Upload Feature Library.</li> <li>Provide a <code>.csv</code> file where column 1 is the feature name and column 2 is the feature sequence. Ensure there are no extra spaces or formatting issues that could cause import errors.</li> <li>Use <code>default_features.txt</code> for your feature file as a reference for formatting.</li> <li>Save the library and use the Auto-annotate feature on a new sequence to apply the annotations.</li> </ul>"},{"location":"sequence_tools/#performing-operations-in-benchling","title":"Performing Operations in Benchling","text":""},{"location":"sequence_tools/#search","title":"Search","text":"<ol> <li>Open your sequence in Benchling.</li> <li>Click on the magnifying glass (\ud83d\udd0d) icon in the toolbar or press Ctrl + F (Cmd + F on Mac).</li> <li>Type the sequence or pattern you want to find.</li> <li>To search both strands, enable the \"Search reverse complement\" option.</li> <li>Matching sequences will be highlighted; click Next or Previous to navigate between results.</li> </ol>"},{"location":"sequence_tools/#copy","title":"Copy","text":"<ol> <li>Click and drag to select a sequence region or use the sequence navigator.</li> <li>Right-click and select Copy, or press Ctrl + C (Cmd + C on Mac).</li> <li>The copied sequence can now be pasted into another sequence, document, or external program.</li> </ol>"},{"location":"sequence_tools/#reverse-complement","title":"Reverse Complement","text":"<ol> <li>Select the sequence region you want to reverse complement.</li> <li>Click More Tools (\u2699\ufe0f) &gt; Reverse Complement in the toolbar.</li> <li>The sequence will be transformed in place.</li> </ol>"},{"location":"sequence_tools/#translate","title":"Translate","text":"<ol> <li>Highlight the DNA sequence you wish to translate.</li> <li>Click More Tools (\u2699\ufe0f) &gt; Translate.</li> <li>Select the reading frame (e.g., Frame 1, 2, 3).</li> <li>The translated amino acid sequence will appear below the DNA.</li> </ol>"},{"location":"sequence_tools/#annotate","title":"Annotate","text":"<ol> <li>Highlight a region of your sequence.</li> <li>Click Annotate in the toolbar.</li> <li>Enter a Feature Name, select a Feature Type, and assign a color.</li> <li>Click Save to apply the annotation.</li> </ol>"},{"location":"sequence_tools/#digest","title":"Digest","text":"<ol> <li>Click More Tools (\u2699\ufe0f) &gt; Digest.</li> <li>Select the Restriction Enzymes you want to use.</li> <li>Click Digest to visualize the cut sites on your sequence.</li> </ol>"},{"location":"sequence_tools/#rotate","title":"Rotate","text":"<ol> <li>Click More Tools (\u2699\ufe0f) &gt; Set Origin.</li> <li>Select a new position for the sequence origin.</li> <li>Click Apply to shift the sequence.</li> </ol>"},{"location":"sequence_tools/#biopython","title":"Biopython","text":"<p>Biopython provides programmatic sequence editing capabilities. For practical examples, refer to the Colab notebook: Google Colab Biopython Tutorial. The Colab contains implementations of all described operations in Python.</p>"}]}